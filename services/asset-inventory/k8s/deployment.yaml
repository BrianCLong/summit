apiVersion: apps/v1
kind: Deployment
metadata:
  name: asset-inventory
  labels: {app: asset-inventory}
spec:
  replicas: 2
  selector: {matchLabels: {app: asset-inventory}}
  template:
    metadata:
      labels: {app: asset-inventory}
    spec:
      serviceAccountName: asset-inventory
      containers:
      - name: api
        image: ghcr.io/BrianCLong/summit/asset-inventory:{{ .SHA | default "latest" }}
        ports: [{containerPort: 8080}]
        readinessProbe: {httpGet: {path: /healthz, port: 8080}, initialDelaySeconds: 2, periodSeconds: 10}
        livenessProbe: {httpGet: {path: /healthz, port: 8080}, initialDelaySeconds: 10, periodSeconds: 20}
        resources:
          requests: {cpu: 50m, memory: 64Mi}
          limits: {cpu: 200m, memory: 256Mi}
        env:
        - name: DB_PATH
          value: /data/inventory.db
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: asset-inventory
spec:
  selector: {app: asset-inventory}
  ports: [{port: 80, targetPort: 8080}]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: asset-inventory
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::111111111111:role/AssetInventoryIRSA # IRSA (example)
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata: {name: asset-inventory}
spec:
  minAvailable: 1
  selector: {matchLabels: {app: asset-inventory}}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata: {name: asset-inventory}
spec:
  scaleTargetRef: {apiVersion: apps/v1, kind: Deployment, name: asset-inventory}
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource: {name: cpu, target: {type: Utilization, averageUtilization: 70}}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata: {name: asset-inventory-deny-all}
spec:
  podSelector: {matchLabels: {app: asset-inventory}}
  policyTypes: [Egress, Ingress]
  ingress: []
  egress:
    - to:
      - namespaceSelector: {}
      ports:
      - protocol: TCP
        port: 443
