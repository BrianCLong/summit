{{- if .Values.backup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "neo4j.fullname" . }}-backup
  labels:
    {{- include "neo4j.labels" . | nindent 4 }}
    app.kubernetes.io/component: backup
spec:
  schedule: {{ .Values.backup.schedule | quote }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "neo4j.labels" . | nindent 12 }}
            app.kubernetes.io/component: backup
        spec:
          restartPolicy: OnFailure
          containers:
            - name: neo4j-backup
              image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command:
                - /bin/bash
                - -c
              args:
                - |
                  set -euo pipefail
                  if command -v apt-get >/dev/null 2>&1; then
                    apt-get update && apt-get install -y awscli && rm -rf /var/lib/apt/lists/*
                  elif command -v apk >/dev/null 2>&1; then
                    apk add --no-cache aws-cli
                  fi
                  neo4j-admin database backup neo4j --backup-dir=/backups/latest --overwrite-destination=true
                  aws s3 sync /backups {{ .Values.backup.s3Bucket | quote }} --delete
              env:
                - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
                  value: "yes"
                - name: NEO4J_CONF
                  value: /conf/neo4j.conf
                - name: AWS_REGION
                  value: {{ .Values.regions.primary.name | quote }}
              {{- if .Values.auth.enabled }}
                - name: NEO4J_AUTH
                  valueFrom:
                    secretKeyRef:
                      name: {{ if .Values.auth.existingSecret }}{{ .Values.auth.existingSecret }}{{ else }}{{ include "neo4j.fullname" . }}-auth{{ end }}
                      key: NEO4J_AUTH
              {{- end }}
              volumeMounts:
                - name: core-data
                  mountPath: /data
                - name: config
                  mountPath: /conf
                  readOnly: true
                - name: backups
                  mountPath: /backups
          volumes:
            - name: core-data
              persistentVolumeClaim:
                claimName: data-{{ include "neo4j.fullname" . }}-core-0
            - name: config
              configMap:
                name: {{ include "neo4j.fullname" . }}-config
            - name: backups
              emptyDir: {}
{{- end }}
