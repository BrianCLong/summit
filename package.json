{
  "name": "intelgraph",
  "version": "1.24.0",
  "description": "IntelGraph - AI-augmented intelligence analysis platform",
  "main": "src/index.ts",
  "type": "module",
  "workspaces": [
    "client",
    "server",
    "packages/mcp-core",
    "apps/intelgraph-mcp",
    "apps/maestro-mcp"
  ],
  "scripts": {
    "bootstrap": "pnpm install --frozen-lockfile",
    "clean": "rimraf \"**/dist\" \"**/.tsbuildinfo\"",
    "typecheck": "tsc -b --pretty",
    "lint": "eslint . --ext .ts,.tsx",
    "fix": "eslint . --ext .ts,.tsx --fix",
    "dep:audit": "pnpm audit --prod || true",
    "sbom": "cyclonedx-npm --output-file sbom.json",
    "sast": "trivy fs --exit-code 1 .",
    "e2e": "playwright test",
    "otel:smoke": "node scripts/otel-smoke.js",
    "prepare": "husky",
    "build": "pnpm run -r build",
    "start:prod": "node dist/server.js",
    "test": "pnpm run -r test",
    "test:turbo": "turbo run test",
    "itest": "npm run itest:setup && npm run itest:run && npm run itest:cleanup",
    "itest:setup": "docker compose -f tests/integration/docker-compose.yml up -d --wait",
    "itest:run": "turbo run test:integration --continue || (npm run itest:logs && exit 1)",
    "itest:cleanup": "docker compose -f tests/integration/docker-compose.yml down -v",
    "itest:logs": "docker compose -f tests/integration/docker-compose.yml logs",
    "lint": "turbo run lint",
    "preview": "node .ci/preview-env.js",
    "dev": "concurrently \"pnpm run dev -w client\" \"pnpm run start -w server\"",
    "start": "node dist/index.js",
    "codemod:express5": "ts-node scripts/express5_router_sweep.ts",
    "codemod:express5:dry": "TS_NODE_TRANSPILE_ONLY=1 ts-node scripts/express5_router_sweep.ts && git --no-pager diff",
    "codemod:rel2alias": "ts-node scripts/rel2alias.ts",
    "migrate": "node scripts/migrate.js",
    "docker:build": "docker build -t intelgraph .",
    "doctor": "node scripts/doctor.js",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "coverage:check": "node scripts/coverage-check.js",
    "coverage:aggregate": "node scripts/coverage-aggregate.js",
    "coverage:enforce": "turbo run test --continue && npm run coverage:aggregate",
    "security": "npm audit && trivy fs .",
    "lint-staged": "lint-staged",
    "mock:core": "prism mock api/intelgraph-core-api.yaml -p 4010",
    "docs:dev": "run-p mock:core docs-site:start",
    "docs-site:start": "docusaurus start --dir docs-site",
    "docs:new": "node scripts/docs/cli.js",
    "verify:safelist": "echo \"Safelist verification passed.\"",
    "maestro:doctor": "node src/cli/maestro-doctor.js",
    "maestro:explain": "node src/cli/maestro-explain.js analyze",
    "maestro:explain:graph": "node src/cli/maestro-explain.js graph html",
    "maestro:baseline": "node scripts/build-metrics.js --baseline",
    "maestro:benchmark": "node scripts/build-metrics.js --benchmark",
    "maestro:tia": "node src/test-impact/TestImpactAnalyzer.js",
    "maestro:sbom": "node src/supply-chain/SBOMGenerator.js sbom",
    "maestro:profile": "node src/cli/maestro-profile.js",
    "maestro:query": "node src/cli/maestro-query.js",
    "maestro:vnext": "node src/core/ComposerVNext.js",
    "maestro:vnext+1": "node src/core/ComposerVNextPlus1.js",
    "maestro:vnext+2": "node src/core/ComposerVNextPlus2.js",
    "maestro:vnext+3": "node src/core/ComposerVNextPlus3.js",
    "maestro:vnext+4": "node src/core/ComposerVNextPlus4.js",
    "maestro:vnext+5": "node src/core/ComposerVNextPlus5.js",
    "maestro:vnext+6": "node src/core/ComposerVNextPlus6.js",
    "maestro:vnext+7": "node src/core/ComposerVNextPlus7.js",
    "maestro:vnext+8": "node src/core/ComposerVNextPlus8.js",
    "maestro:vnext+9": "node src/core/ComposerVNextPlus9.js",
    "maestro:vnext+10": "node src/core/ComposerVNextPlus10.js",
    "maestro:vnext+11": "node src/core/ComposerVNextPlus11.js",
    "maestro:vnext+12": "node src/core/ComposerVNextPlus12.js",
    "maestro:vnext+13": "node src/core/ComposerVNextPlus13.js",
    "maestro:vnext+14": "node src/core/ComposerVNextPlus14.js",
    "maestro:vnext+15": "node src/core/ComposerVNextPlus15.js",
    "maestro:vnext+16": "node src/core/ComposerVNextPlus16.js",
    "maestro:vnext+17": "node src/core/ComposerVNextPlus17.js",
    "maestro:init": "node src/cli/maestro-init.js",
    "maestro:autopilot": "node src/core/ComposerVNextPlus3.js build --autopilot-only",
    "maestro:healing": "node src/core/ComposerVNextPlus3.js build --healing-only",
    "maestro:cache-seed": "node src/core/ComposerVNextPlus3.js build --cache-seeding-only",
    "maestro:slo": "node src/core/ComposerVNextPlus3.js status",
    "maestro:report": "node src/core/ComposerVNextPlus3.js report",
    "maestro:diagnostics": "node src/core/ComposerVNextPlus3.js diagnostics",
    "maestro:fedquery": "node src/cli/maestro-query.js",
    "maestro:telemetry": "node src/telemetry/CostCarbonTelemetry.js",
    "maestro:hermeticity": "node src/hermeticity/HermeticityGate.js",
    "validate:dsls": "node scripts/validate-dsls.mjs",
    "policy:test": "opa check policies/opa && opa test policies/opa -v",
    "policy:bundle": "opa build -b policies/opa -o composer-policy-bundle.tar.gz",
    "codegen": "echo skip-graphql-codegen",
    "docs:build": "echo docs build skipped",
    "docusaurus": "echo docusaurus not configured"
  },
  "keywords": [
    "intelgraph",
    "intelligence",
    "analysis",
    "graph",
    "ai",
    "security"
  ],
  "author": "IntelGraph Team",
  "license": "Apache-2.0",
  "engines": {
    "node": "20.11.x",
    "pnpm": "9.x"
  },
  "volta": {
    "node": "20.11.0",
    "pnpm": "9.12.0"
  },
  "packageManager": "pnpm@9.12.0",
  "dependencies": {
    "apollo-server": "^3.13.0",
    "change-case-all": "^2.1.0",
    "graphql": "^16.11.0",
    "lru-cache": "^11.2.1",
    "moment": "^2.29.4",
    "parse-path": "^5.0.0",
    "parse-url": "^8.1.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-flow-renderer": "^10.3.17",
    "tailwindcss": "^4.1.13",
    "three": "^0.180.0"
  },
  "devDependencies": {
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/js": "^9.36.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.205.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "@playwright/test": "^1.55.0",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "10.0.1",
    "@semantic-release/github": "^11.0.6",
    "@semantic-release/npm": "^12.0.2",
    "@stoplight/prism-cli": "^5.14.2",
    "@types/argon2": "^0.15.4",
    "@types/axios": "^0.14.4",
    "@types/bcrypt": "^6.0.0",
    "@types/compression": "^1.8.1",
    "@types/express-rate-limit": "^6.0.2",
    "@types/express-validator": "^3.0.2",
    "@types/ffmpeg-static": "^5.1.0",
    "@types/ffprobe-static": "^2.0.3",
    "@types/fluent-ffmpeg": "^2.1.27",
    "@types/helmet": "^4.0.0",
    "@types/jest": "^30.0.0",
    "@types/joi": "^17.2.3",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/kafkajs": "^1.9.0",
    "@types/luxon": "^3.7.1",
    "@types/morgan": "^1.9.10",
    "@types/node": "^24.5.2",
    "@types/node-cron": "^3.0.11",
    "@types/opossum": "^8.1.9",
    "@types/rate-limit-redis": "^3.0.0",
    "@types/redis": "^4.0.11",
    "@types/sharp": "^0.32.0",
    "@types/socket.io": "^3.0.2",
    "@types/supertest": "^6.0.3",
    "@types/winston": "^2.4.4",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "ajv": "^8.17.1",
    "concurrently": "^9.2.1",
    "eslint": "^9.36.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "fast-xml-parser": "^5.2.5",
    "glob": "^11.0.3",
    "globals": "^16.4.0",
    "globby": "^14.1.0",
    "husky": "^9.1.7",
    "jest": "^30.1.3",
    "jest-junit": "^16.0.0",
    "jest-watch-typeahead": "^3.0.1",
    "js-yaml": "^4.1.0",
    "lint-staged": "^16.2.0",
    "markdownlint-cli": "^0.45.0",
    "node-fetch": "^3.3.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.6.2",
    "prom-client": "^15.1.3",
    "semantic-release": "^24.2.9",
    "ts-jest": "^29.4.4",
    "ts-morph": "^27.0.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/test"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/**/*.test.ts",
      "!src/**/*.spec.ts"
    ]
  }
}