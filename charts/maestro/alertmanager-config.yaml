apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-maestro-config
data:
  alertmanager.yaml: |
    global:
      resolve_timeout: 5m

    route:
      receiver: 'default-receiver'
      group_by: ['alertname', 'severity', 'tenant']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      routes:
      - match:
          severity: critical
        receiver: 'pagerduty-receiver'
        continue: true
      - match:
          severity: warning
        receiver: 'slack-email-receiver'
        continue: true
      - match_re:
          tenant: '.+'
        receiver: 'tenant-specific-receiver' # Placeholder for tenant-specific routing
        continue: true

    receivers:
    - name: 'default-receiver'
      # Placeholder for default notifications (e.g., /dev/null or a general channel)

    - name: 'pagerduty-receiver'
      pagerduty_configs:
      - service_key: {{ .Values.pagerduty.serviceKey }} # Templated value

    - name: 'slack-email-receiver'
      slack_configs:
      - channel: '#maestro-alerts'
        api_url: {{ .Values.slack.webhookUrl }} # Templated value
        send_resolved: true
      email_configs:
      - to: 'alerts@example.com'
        send_resolved: true

    - name: 'tenant-specific-receiver'
      # This receiver would typically be configured dynamically or with more complex logic
      # to route alerts to specific tenant channels/emails.
      # For example, using a webhook that looks up tenant contact info.
      webhook_configs:
      - url: 'http://alert-router.internal/webhook' # Placeholder for a custom alert router
