# Maestro Conductor v24.3.0 - US West 2 (Read Replica Region)
# Read-only replica region for disaster recovery and read scaling

environment: production
region: us-west-2
isPrimaryRegion: false

# Global configuration
global:
  region: us-west-2
  isPrimary: false
  imageRegistry: ghcr.io
  imageTag: "24.3.0"

# Service configuration
service:
  type: LoadBalancer
  annotations:
    external-dns.alpha.kubernetes.io/hostname: api-us-west.maestro.dev
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: api-us-west.maestro.dev
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: maestro-us-west-tls
      hosts:
        - api-us-west.maestro.dev

# Database configuration - Read replica region
database:
  postgresql:
    mode: replica
    host: maestro-postgres-replica-us-west.us-west-2.rds.amazonaws.com
    port: 5432
    database: maestro_production
    readOnly: true
    primaryRegion: us-east-1
    primaryHost: maestro-postgres-primary.us-east-1.rds.amazonaws.com
    replicationLag:
      alertThresholdSeconds: 30
      criticalThresholdSeconds: 60

  neo4j:
    mode: replica
    host: maestro-neo4j-replica-us-west.us-west-2.amazonaws.com
    port: 7687
    database: neo4j
    readOnly: true
    auth:
      username: neo4j
      existingSecret: maestro-neo4j-auth
    primaryRegion: us-east-1
    primaryHost: maestro-neo4j-primary.us-east-1.amazonaws.com

  redis:
    mode: replica
    host: maestro-redis-replica.cache.us-west-2.amazonaws.com
    port: 6379
    readOnly: true
    primaryRegion: us-east-1

# Application configuration
app:
  replicas: 3 # Fewer replicas for read-only region
  image:
    repository: ghcr.io/maestro/conductor
    tag: "24.3.0"
    pullPolicy: IfNotPresent

  env:
    NODE_ENV: production
    CURRENT_REGION: us-west-2
    IS_PRIMARY_REGION: "false"
    READ_ONLY_REGION: "true"
    LOG_LEVEL: info
    
    # Database connection strings (read-only)
    DATABASE_URL: postgresql://maestro_reader:${POSTGRES_READ_PASSWORD}@maestro-postgres-replica-us-west.us-west-2.rds.amazonaws.com:5432/maestro_production?sslmode=require&options=-c%20default_transaction_isolation=repeatable_read
    DATABASE_READ_URL: postgresql://maestro_reader:${POSTGRES_READ_PASSWORD}@maestro-postgres-replica-us-west.us-west-2.rds.amazonaws.com:5432/maestro_production?sslmode=require&options=-c%20default_transaction_isolation=repeatable_read
    
    # For writes, redirect to primary
    DATABASE_WRITE_URL: postgresql://maestro:${POSTGRES_PASSWORD}@maestro-postgres-primary.us-east-1.rds.amazonaws.com:5432/maestro_production?sslmode=require
    
    NEO4J_URI: bolt://maestro-neo4j-replica-us-west.us-west-2.amazonaws.com:7687
    NEO4J_USER: neo4j
    NEO4J_PASSWORD: ${NEO4J_PASSWORD}
    NEO4J_READ_URI: bolt://maestro-neo4j-replica-us-west.us-west-2.amazonaws.com:7687
    
    # For Neo4j writes, use primary
    NEO4J_WRITE_URI: bolt://maestro-neo4j-primary.us-east-1.amazonaws.com:7687
    
    REDIS_URL: redis://maestro-redis-replica.cache.us-west-2.amazonaws.com:6379

    # Region routing
    US_EAST_API_URL: https://api-us-east.maestro.dev
    US_EAST_GRAPHQL_URL: https://api-us-east.maestro.dev/graphql
    US_WEST_API_URL: https://api-us-west.maestro.dev
    US_WEST_GRAPHQL_URL: https://api-us-west.maestro.dev/graphql
    EU_WEST_API_URL: https://api-eu-west.maestro.dev
    EU_WEST_GRAPHQL_URL: https://api-eu-west.maestro.dev/graphql

  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 4Gi

  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: 4000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  readinessProbe:
    httpGet:
      path: /ready
      port: 4000
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Monitoring and observability
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
  grafana:
    enabled: true
    dashboards:
      enabled: true

# Autoscaling configuration (more conservative for replica)
autoscaling:
  enabled: true
  api:
    minReplicas: 2
    maxReplicas: 10
    targetRPS: 150 # Higher RPS threshold since read-only
    targetLatencyP95: 400 # Allow slightly higher latency
    targetCPU: 70

# Cost monitoring
costMonitoring:
  enabled: true
  alertInterval: 1m
  thresholds:
    dbCostPerHour: 5.0
    computeCostPerHour: 10.0
    storageCostPerHour: 2.0
    networkCostPerHour: 1.0
    monthlyBudget: 2000.0

# Backup and DR (replica participates in DR)
backupDrills:
  enabled: true
  schedule: "0 3 * * 2" # Weekly on Tuesday at 3 AM (offset from primary)
  drillType: replica-validation
  s3Bucket: maestro-backups-us-west-2
  awsRegion: us-west-2

# Security configuration
security:
  networkPolicies:
    enabled: true
  podSecurityPolicy:
    enabled: true
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/maestro-us-west-role

# Regional failover
failover:
  enabled: true
  canPromoteToPrimary: true
  dns:
    provider: route53
    hostedZoneId: Z123456789ABCDEF
    healthCheck:
      enabled: true
      path: /health
      interval: 30s
  readOnlyMode:
    enabled: true
    banner: true
    message: "Running in read-only mode. Write operations are not available."

# Replica-specific configuration
replica:
  enabled: true
  replicationMonitoring:
    enabled: true
    lagThresholds:
      warning: 30s
      critical: 60s
  
  # Read-only banner configuration
  readOnlyBanner:
    enabled: true
    message: "US West region - Read operations only"
    color: "#FFA500"
    position: top

# Feature flags for replica region
features:
  writeOperations: false
  ingestEndpoints: false
  dataExport: true
  crossRegionQueries: true