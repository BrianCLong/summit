{{- if .Values.flagger.enabled }}
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: {{ include "ig-platform.fullname" . }}-api-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ig-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: canary
spec:
  # Deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "ig-platform.fullname" . }}-api-gateway

  # Service configuration
  service:
    # Service port
    port: {{ .Values.apiGateway.service.port }}
    targetPort: {{ .Values.apiGateway.service.port }}
    portName: http
    # Service mesh timeout
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s

    # Traffic policy
    trafficPolicy:
      tls:
        mode: DISABLE

    # Headers to preserve during canary
    headers:
      request:
        add:
          x-canary-version: canary

    # CORS settings
    corsPolicy:
      allowOrigins:
      - regex: ".*"
      allowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      allowHeaders:
      - "*"
      allowCredentials: true

  # HPA reference (required for Flagger)
  autoscalerRef:
    apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    name: {{ include "ig-platform.fullname" . }}-api-gateway

  # Canary analysis configuration
  analysis:
    # Schedule interval (default 60s)
    interval: {{ .Values.flagger.analysis.interval | default "30s" }}

    # Total number of iterations
    iterations: {{ .Values.flagger.analysis.iterations | default "10" }}

    # Max number of failed checks before rollback
    threshold: {{ .Values.flagger.analysis.threshold | default "3" }}

    # Traffic routing (percentage-based)
    stepWeight: {{ .Values.flagger.analysis.stepWeight | default "10" }}
    maxWeight: {{ .Values.flagger.analysis.maxWeight | default "50" }}

    # Metric templates for canary analysis
    metrics:
    - name: request-success-rate
      templateRef:
        name: success-rate
        namespace: istio-system
      thresholdRange:
        min: {{ .Values.flagger.metrics.successRate.min | default "99" }}
      interval: 1m

    - name: request-duration
      templateRef:
        name: latency
        namespace: istio-system
      thresholdRange:
        max: {{ .Values.flagger.metrics.latency.max | default "500" }}
      interval: 1m

    {{- if .Values.flagger.metrics.custom.enabled }}
    - name: business-metrics
      templateRef:
        name: business-kpi
        namespace: {{ .Release.Namespace }}
      thresholdRange:
        min: {{ .Values.flagger.metrics.custom.businessKpi.min | default "95" }}
      interval: 30s
    {{- end }}

    # Webhook tests
    webhooks:
    - name: acceptance-test
      type: pre-rollout
      url: http://{{ include "ig-platform.fullname" . }}-test-runner.{{ .Release.Namespace }}.svc.cluster.local/api/test
      timeout: 30s
      metadata:
        type: "acceptance"
        cmd: "npm run test:canary"

    - name: load-test
      type: rollout
      url: http://{{ include "ig-platform.fullname" . }}-load-tester.{{ .Release.Namespace }}.svc.cluster.local/api/load-test
      timeout: 5s
      metadata:
        host: "{{ include "ig-platform.fullname" . }}-api-gateway-canary.{{ .Release.Namespace }}.svc.cluster.local"

    {{- if .Values.flagger.webhooks.slack.enabled }}
    - name: send-to-slack
      type: event
      url: {{ .Values.flagger.webhooks.slack.url }}
      metadata:
        text: "Canary deployment {{ `{{ .Name }}` }} in namespace {{ `{{ .Namespace }}` }} is {{ `{{ .Phase }}` }}"
    {{- end }}

  # Deployment strategy settings
  {{- if eq .Values.flagger.strategy "blue-green" }}
  provider: kubernetes
  # Blue/Green deployment
  canaryAnalysis:
    interval: 1m
    threshold: 3
    iterations: 1
    mirror: false
    mirrorWeight: 0
    stepWeight: 100
  {{- else }}
  # Canary deployment (default)
  provider: istio
  {{- end }}

  # Skip analysis conditions
  skipAnalysis: false

  # Revert on failure
  revertOnDeletion: true

  # Suspend rollout
  suspend: false

---
# Custom metric template for business KPIs
{{- if .Values.flagger.metrics.custom.enabled }}
apiVersion: flagger.app/v1beta1
kind: MetricTemplate
metadata:
  name: business-kpi
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ig-platform.labels" . | nindent 4 }}
spec:
  provider:
    type: prometheus
    address: http://prometheus.monitoring.svc.cluster.local:9090
  query: |
    (
      sum(
        rate(
          intelgraph_business_kpi_total{
            job="{{ include "ig-platform.fullname" . }}-api-gateway",
            namespace="{{ .Release.Namespace }}"
          }[1m]
        )
      ) * 100
    )
{{- end }}

---
# Load tester service for canary validation
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ig-platform.fullname" . }}-load-tester
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ig-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-tester
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ig-platform.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: load-tester
  template:
    metadata:
      labels:
        {{- include "ig-platform.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: load-tester
    spec:
      containers:
      - name: load-tester
        image: "ghcr.io/fluxcd/flagger-loadtester:0.22.0"
        ports:
        - name: http
          containerPort: 8080
        command:
        - ./loadtester
        - -port=8080
        - -log-level=info
        - -timeout=1h
        livenessProbe:
          exec:
            command:
            - wget
            - --quiet
            - --tries=1
            - --timeout=5
            - --spider
            - http://localhost:8080/healthz
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - wget
            - --quiet
            - --tries=1
            - --timeout=5
            - --spider
            - http://localhost:8080/healthz
          timeoutSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "ig-platform.fullname" . }}-load-tester
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ig-platform.labels" . | nindent 4 }}
    app.kubernetes.io/component: load-tester
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    {{- include "ig-platform.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: load-tester
{{- end }}