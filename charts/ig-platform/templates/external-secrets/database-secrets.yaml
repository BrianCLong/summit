{{- if .Values.externalSecrets.enabled }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "ig-platform.fullname" . }}-database-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ig-platform.labels" . | nindent 4 }}
spec:
  secretStoreRef:
    name: {{ include "ig-platform.fullname" . }}-cluster-store
    kind: ClusterSecretStore
  target:
    name: {{ include "ig-platform.fullname" . }}-database-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        postgres-user: "{{ `{{ .postgres_user | toString }}` }}"
        postgres-password: "{{ `{{ .postgres_password | toString }}` }}"
        postgres-database: "{{ `{{ .postgres_database | toString }}` }}"
        neo4j-user: "{{ `{{ .neo4j_user | toString }}` }}"
        neo4j-password: "{{ `{{ .neo4j_password | toString }}` }}"
        redis-password: "{{ `{{ .redis_password | toString }}` }}"
        minio-access-key: "{{ `{{ .minio_access_key | toString }}` }}"
        minio-secret-key: "{{ `{{ .minio_secret_key | toString }}` }}"
  data:
  - secretKey: postgres_user
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.database.postgresUser.key }}
      property: {{ .Values.externalSecrets.secrets.database.postgresUser.property | default "username" }}
  - secretKey: postgres_password
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.database.postgresPassword.key }}
      property: {{ .Values.externalSecrets.secrets.database.postgresPassword.property | default "password" }}
  - secretKey: postgres_database
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.database.postgresDatabase.key }}
      property: {{ .Values.externalSecrets.secrets.database.postgresDatabase.property | default "database" }}
  - secretKey: neo4j_user
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.database.neo4jUser.key }}
      property: {{ .Values.externalSecrets.secrets.database.neo4jUser.property | default "username" }}
  - secretKey: neo4j_password
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.database.neo4jPassword.key }}
      property: {{ .Values.externalSecrets.secrets.database.neo4jPassword.property | default "password" }}
  - secretKey: redis_password
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.database.redisPassword.key }}
      property: {{ .Values.externalSecrets.secrets.database.redisPassword.property | default "password" }}
  - secretKey: minio_access_key
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.database.minioAccessKey.key }}
      property: {{ .Values.externalSecrets.secrets.database.minioAccessKey.property | default "access_key" }}
  - secretKey: minio_secret_key
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.database.minioSecretKey.key }}
      property: {{ .Values.externalSecrets.secrets.database.minioSecretKey.property | default "secret_key" }}
  refreshInterval: {{ .Values.externalSecrets.refreshInterval | default "5m" }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "ig-platform.fullname" . }}-jwt-secrets
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ig-platform.labels" . | nindent 4 }}
spec:
  secretStoreRef:
    name: {{ include "ig-platform.fullname" . }}-cluster-store
    kind: ClusterSecretStore
  target:
    name: {{ include "ig-platform.fullname" . }}-jwt-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        jwt-secret: "{{ `{{ .jwt_secret | toString }}` }}"
        oidc-client-secret: "{{ `{{ .oidc_client_secret | toString }}` }}"
  data:
  - secretKey: jwt_secret
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.auth.jwtSecret.key }}
      property: {{ .Values.externalSecrets.secrets.auth.jwtSecret.property | default "secret" }}
  - secretKey: oidc_client_secret
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.auth.oidcClientSecret.key }}
      property: {{ .Values.externalSecrets.secrets.auth.oidcClientSecret.property | default "client_secret" }}
  refreshInterval: {{ .Values.externalSecrets.refreshInterval | default "5m" }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "ig-platform.fullname" . }}-api-keys
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ig-platform.labels" . | nindent 4 }}
spec:
  secretStoreRef:
    name: {{ include "ig-platform.fullname" . }}-cluster-store
    kind: ClusterSecretStore
  target:
    name: {{ include "ig-platform.fullname" . }}-api-keys
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        openai-api-key: "{{ `{{ .openai_api_key | toString }}` }}"
        slack-webhook-url: "{{ `{{ .slack_webhook_url | toString }}` }}"
        teams-webhook-url: "{{ `{{ .teams_webhook_url | toString }}` }}"
        pagerduty-integration-key: "{{ `{{ .pagerduty_integration_key | toString }}` }}"
  data:
  - secretKey: openai_api_key
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.apiKeys.openai.key }}
      property: {{ .Values.externalSecrets.secrets.apiKeys.openai.property | default "api_key" }}
  - secretKey: slack_webhook_url
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.apiKeys.slack.key }}
      property: {{ .Values.externalSecrets.secrets.apiKeys.slack.property | default "webhook_url" }}
  - secretKey: teams_webhook_url
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.apiKeys.teams.key }}
      property: {{ .Values.externalSecrets.secrets.apiKeys.teams.property | default "webhook_url" }}
  - secretKey: pagerduty_integration_key
    remoteRef:
      key: {{ .Values.externalSecrets.secrets.apiKeys.pagerduty.key }}
      property: {{ .Values.externalSecrets.secrets.apiKeys.pagerduty.property | default "integration_key" }}
  refreshInterval: {{ .Values.externalSecrets.refreshInterval | default "5m" }}
{{- end }}