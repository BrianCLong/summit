{{- if .Values.externalSecrets.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: {{ include "ig-platform.fullname" . }}-cluster-store
  labels:
    {{- include "ig-platform.labels" . | nindent 4 }}
spec:
  provider:
    {{- if .Values.externalSecrets.provider.vault.enabled }}
    vault:
      server: {{ .Values.externalSecrets.provider.vault.server }}
      path: {{ .Values.externalSecrets.provider.vault.path }}
      version: "v2"
      auth:
        kubernetes:
          mountPath: {{ .Values.externalSecrets.provider.vault.auth.mountPath }}
          role: {{ .Values.externalSecrets.provider.vault.auth.role }}
          serviceAccountRef:
            name: {{ include "ig-platform.serviceAccountName" . }}-vault
            namespace: {{ .Release.Namespace }}
    {{- else if .Values.externalSecrets.provider.aws.enabled }}
    aws:
      service: SecretsManager
      region: {{ .Values.externalSecrets.provider.aws.region }}
      auth:
        secretRef:
          accessKeyID:
            name: {{ include "ig-platform.fullname" . }}-aws-credentials
            key: access-key-id
          secretAccessKey:
            name: {{ include "ig-platform.fullname" . }}-aws-credentials
            key: secret-access-key
    {{- else if .Values.externalSecrets.provider.gcp.enabled }}
    gcpsm:
      projectId: {{ .Values.externalSecrets.provider.gcp.projectId }}
      auth:
        workloadIdentity:
          clusterLocation: {{ .Values.externalSecrets.provider.gcp.clusterLocation }}
          clusterName: {{ .Values.externalSecrets.provider.gcp.clusterName }}
          serviceAccountRef:
            name: {{ include "ig-platform.serviceAccountName" . }}-gcp
    {{- else if .Values.externalSecrets.provider.azure.enabled }}
    azurekv:
      vaultUrl: {{ .Values.externalSecrets.provider.azure.vaultUrl }}
      auth:
        managedIdentity:
          identityId: {{ .Values.externalSecrets.provider.azure.identityId }}
    {{- end }}
{{- end }}