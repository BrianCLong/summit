apiVersion: apps/v1
kind: Deployment
metadata:
  name: verification-service
  labels:
    app.kubernetes.io/name: verification-service
    app.kubernetes.io/component: independent-verification
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: verification-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: verification-service
        app.kubernetes.io/component: independent-verification
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8081'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: verification-service
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: verification-service
          image: verification-service:v0.4.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
              name: http
              protocol: TCP
            - containerPort: 9091
              name: metrics
              protocol: TCP
          env:
            - name: PORT
              value: '8081'
            - name: METRICS_PORT
              value: '9091'
            - name: NODE_ENV
              value: 'production'
            - name: LOG_LEVEL
              value: 'info'
            - name: VERIFICATION_TIMEOUT_MS
              value: '30000'
            - name: MAX_CONCURRENT_VERIFICATIONS
              value: '10'
            - name: VERIFICATION_RETRY_ATTEMPTS
              value: '3'
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: 'http://jaeger-collector.monitoring.svc.cluster.local:4317'
            - name: PROMETHEUS_METRICS_ENABLED
              value: 'true'
          envFrom:
            - configMapRef:
                name: sovereign-safeguards-config
            - secretRef:
                name: sovereign-verification-secrets
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              memory: '512Mi'
              cpu: '200m'
            limits:
              memory: '1Gi'
              cpu: '1000m'
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
            - name: verification-logs
              mountPath: /app/logs
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: verification-logs
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - verification-service
                topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: verification-service
  labels:
    app.kubernetes.io/name: verification-service
    app.kubernetes.io/component: independent-verification
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: http
      protocol: TCP
      name: http
    - port: 9091
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: verification-service

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: verification-service
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: verification-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: verification-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: verification-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
