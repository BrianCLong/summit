apiVersion: apps/v1
kind: Deployment
metadata:
  name: sovereign-safeguards-service
  labels:
    app.kubernetes.io/name: sovereign-safeguards-service
    app.kubernetes.io/component: sovereign-safeguards
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sovereign-safeguards-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sovereign-safeguards-service
        app.kubernetes.io/component: sovereign-safeguards
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: sovereign-safeguards
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: sovereign-safeguards
          image: sovereign-safeguards-service:v0.4.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          env:
            - name: PORT
              value: '8080'
            - name: METRICS_PORT
              value: '9090'
            - name: NODE_ENV
              value: 'production'
            - name: LOG_LEVEL
              value: 'info'
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: 'http://jaeger-collector.monitoring.svc.cluster.local:4317'
            - name: PROMETHEUS_METRICS_ENABLED
              value: 'true'
          envFrom:
            - configMapRef:
                name: sovereign-safeguards-config
            - secretRef:
                name: sovereign-verification-secrets
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              memory: '256Mi'
              cpu: '100m'
            limits:
              memory: '512Mi'
              cpu: '500m'
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - sovereign-safeguards-service
                topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: sovereign-safeguards-service
  labels:
    app.kubernetes.io/name: sovereign-safeguards-service
    app.kubernetes.io/component: sovereign-safeguards
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
    - port: 9090
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: sovereign-safeguards-service

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sovereign-safeguards-service
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sovereign-safeguards-service
