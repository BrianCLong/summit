# Default values for IntelGraph
replicaCount: 1

image:
  server:
    repository: 046481635604.dkr.ecr.us-east-1.amazonaws.com/intelgraph/app
    tag: "latest"
    pullPolicy: IfNotPresent
  client:
    repository: 046481635604.dkr.ecr.us-east-1.amazonaws.com/intelgraph/web
    tag: "latest"
    pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

service:
  server:
    type: ClusterIP
    port: 4000
    targetPort: 4000
  client:
    type: ClusterIP
    port: 80
    targetPort: 80

ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:046481635604:certificate/a90a49b1-6739-4739-8d98-f2f7785e2657
    alb.ingress.kubernetes.io/group.name: intelgraph-dev
  host: dev.topicality.co
  path: /
  pathType: Prefix
  tls:
    enabled: false

resources:
  server:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi
  client:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 64Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment configuration
environment: development

# Database configuration
database:
  postgresql:
    enabled: true
    host: postgresql
    port: 5432
    name: intelgraph
    username: intelgraph
    existingSecret: postgresql-credentials
  neo4j:
    enabled: true
    host: neo4j
    port: 7687
    username: neo4j
    existingSecret: neo4j-credentials
  redis:
    enabled: true
    host: redis
    port: 6379
    existingSecret: redis-credentials

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /metrics

# Health checks
healthCheck:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

# Preview environment specific settings
preview:
  enabled: false
  ttl: "24h"
  cleanup: true
