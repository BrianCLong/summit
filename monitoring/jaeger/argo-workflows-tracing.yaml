apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
  namespace: argo
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: controller
    app.kubernetes.io/managed-by: summit
data:
  config: |
    tracing:
      enabled: true
      provider: jaeger
      jaeger:
        agentHost: jaeger-agent.observability.svc.cluster.local
        agentPort: 6831
        samplerType: const
        samplerParam: 1
    workflowDefaults:
      spec:
        podMetadata:
          annotations:
            sidecar.istio.io/inject: "false"
        templates:
          - name: telemetry-env
            container:
              env:
                - name: OTEL_EXPORTER_JAEGER_ENDPOINT
                  value: http://jaeger-collector.observability.svc.cluster.local:14268/api/traces
                - name: OTEL_SERVICE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.labels['workflows.argoproj.io/workflow']
                - name: OTEL_TRACES_EXPORTER
                  value: jaeger
                - name: OTEL_PROPAGATORS
                  value: tracecontext,baggage
---
apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: argo-workflows
  namespace: observability
spec:
  strategy: production
  collector:
    replicas: 2
    options:
      collector.otlp.enabled: "true"
  query:
    options:
      query.base-path: /
  storage:
    type: elasticsearch
    options:
      es:
        server-urls: http://elasticsearch-master.observability.svc.cluster.local:9200
        index-prefix: argo-workflows
    secretName: jaeger-elastic-credentials
  ingress:
    enabled: true
    hosts:
      - jaeger.intelgraph.local
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
