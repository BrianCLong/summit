# Hello-World Reference Workflow - Basic orchestrator health proof
apiVersion: v1
kind: ConfigMap
metadata:
  name: hello-world-workflow
  namespace: dev-orch
  labels:
    app.kubernetes.io/name: maestro-conductor
    app.kubernetes.io/component: workflow
    app.kubernetes.io/part-of: intelgraph
    workflow-type: reference
data:
  hello-world.json: |
    {
      "name": "hello_world_workflow",
      "description": "Basic IntelGraph Maestro orchestrator health check workflow",
      "version": 1,
      "tasks": [
        {
          "name": "health_check_task",
          "taskReferenceName": "health_check",
          "type": "SIMPLE",
          "description": "Verify orchestrator is healthy and responsive",
          "inputParameters": {
            "message": "Hello from IntelGraph Maestro!",
            "timestamp": "${workflow.startTime}",
            "environment": "dev",
            "orchestrator": "maestro-conductor"
          },
          "retryCount": 3,
          "retryLogic": "FIXED",
          "retryDelaySeconds": 5,
          "timeoutSeconds": 30,
          "responseTimeoutSeconds": 10
        },
        {
          "name": "system_info_task", 
          "taskReferenceName": "system_info",
          "type": "SIMPLE",
          "description": "Collect basic system information",
          "inputParameters": {
            "check_components": [
              "postgres",
              "redis", 
              "workers"
            ]
          },
          "retryCount": 2,
          "timeoutSeconds": 20
        }
      ],
      "outputParameters": {
        "health_status": "${health_check.output.status}",
        "system_info": "${system_info.output}",
        "execution_time": "${workflow.endTime - workflow.startTime}",
        "workflow_id": "${workflow.workflowId}"
      },
      "schemaVersion": 2,
      "restartable": true,
      "workflowStatusListenerEnabled": true,
      "ownerEmail": "devops@intelgraph.io",
      "timeoutPolicy": "TIME_OUT_WF",
      "timeoutSeconds": 120,
      "variables": {},
      "inputTemplate": {}
    }

---
apiVersion: batch/v1
kind: Job
metadata:
  name: hello-world-workflow-registration
  namespace: dev-orch
  labels:
    app.kubernetes.io/name: maestro-conductor
    app.kubernetes.io/component: workflow-registration
    app.kubernetes.io/part-of: intelgraph
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: workflow-registration
          image: curlimages/curl:8.4.0
          command:
            - /bin/sh
            - -c
            - |
              set -ex
              echo "Registering Hello-World workflow..."

              # Wait for Conductor to be ready
              until curl -f http://maestro-conductor:8080/health; do
                echo "Waiting for Conductor..."
                sleep 10
              done

              # Register workflow definition
              curl -X POST \
                http://maestro-conductor:8080/api/metadata/workflow \
                -H "Content-Type: application/json" \
                -d @/workflow/hello-world.json
                
              echo "Hello-World workflow registered successfully!"

          volumeMounts:
            - name: workflow-config
              mountPath: /workflow
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: workflow-config
          configMap:
            name: hello-world-workflow

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: hello-world-scheduler
  namespace: dev-orch
  labels:
    app.kubernetes.io/name: maestro-conductor
    app.kubernetes.io/component: scheduler
    app.kubernetes.io/part-of: intelgraph
spec:
  schedule: '*/15 * * * *' # Every 15 minutes
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: workflow-trigger
              image: curlimages/curl:8.4.0
              command:
                - /bin/sh
                - -c
                - |
                  set -ex
                  echo "Triggering Hello-World workflow..."

                  WORKFLOW_ID=$(date +%s)

                  curl -X POST \
                    http://maestro-conductor:8080/api/workflow/hello_world_workflow \
                    -H "Content-Type: application/json" \
                    -d "{
                      \"version\": 1,
                      \"correlationId\": \"hello-world-${WORKFLOW_ID}\",
                      \"input\": {
                        \"scheduledRun\": true,
                        \"runId\": \"${WORKFLOW_ID}\",
                        \"environment\": \"dev\"
                      }
                    }"
                    
                  echo "Hello-World workflow triggered with ID: ${WORKFLOW_ID}"
              resources:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 100m
                  memory: 128Mi
