name: go-no-go-gate
on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release tag/commit'
        required: true
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - staging
          - production
      evidence_bundle_id:
        description: 'Evidence bundle artifact ID'
        required: true
permissions:
  contents: read
  checks: read
jobs:
  go-no-go-gates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.release }}

      - name: Gate A - CI Hygiene Check
        run: |
          echo "🔍 Checking CI gates for release ${{ inputs.release }}"

          # Check if all required checks passed
          gh api repos/${{ github.repository }}/commits/${{ inputs.release }}/check-runs \
            --jq '.check_runs[] | select(.conclusion != "success") | .name' > failed_checks.txt

          if [ -s failed_checks.txt ]; then
            echo "❌ Failed checks found:"
            cat failed_checks.txt
            exit 1
          fi

          echo "✅ All CI checks passed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Gate B - Digest Policy Check
        run: |
          echo "🔍 Verifying Helm charts use digest-only references"

          # Run the digest policy checker
          if [ -f "tools/policy/check-helm-digests.ts" ]; then
            npx ts-node tools/policy/check-helm-digests.ts
          else
            node tools/policy/check-helm-digests.js
          fi

          echo "✅ Helm digest policy compliance verified"

      - name: Gate C - Performance Budget Check
        run: |
          echo "🔍 Checking performance budgets"

          # Placeholder for Lighthouse budget checks
          echo "⚠️  Lighthouse budget checks not yet implemented"
          echo "⚠️  k6 canary plan verification not yet implemented"

          # For now, just pass
          echo "✅ Performance budget checks passed (placeholder)"

      - name: Download Evidence Bundle
        uses: actions/download-artifact@v4
        with:
          name: evidence-bundle
          run-id: ${{ inputs.evidence_bundle_id }}
          path: evidence

      - name: Verify Evidence Bundle Contents
        run: |
          echo "🔍 Verifying evidence bundle contents"

          required_files=("manifest.json" "sbom.spdx.json" "provenance.json")

          for file in "${required_files[@]}"; do
            if [ ! -f "evidence/tools/publish/$file" ] && [ ! -f "evidence/$file" ]; then
              echo "❌ Missing required file: $file"
              exit 1
            fi
          done

          echo "✅ Evidence bundle complete"

      - name: Go/No-Go Decision
        run: |
          echo "🚀 All gates passed - GO for deployment to ${{ inputs.environment }}"
          echo "📋 Use the deployment procedure in docs/runbooks/deploy-procedure.md"
