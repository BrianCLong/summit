name: Symphony Platform CI

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'  # Daily health check

jobs:
  smoke-test:
    name: Smoke Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pyyaml duckdb
        
    - name: Install Just
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin
        echo "$HOME/bin" >> $GITHUB_PATH
    
    - name: Set up test environment  
      run: |
        echo "PROFILE=ci" >> .orchestra.env
        echo "AUTONOMY=0" >> .orchestra.env
        echo "RAG_TOPK=3" >> .orchestra.env
        
    - name: Generate status report
      run: |
        python3 tools/status_json.py || true
        bash tools/report.sh || true
        
    - name: Test Symphony CLI
      run: |
        python3 tools/symphony.py policy show
        python3 tools/symphony.py orchestrator status || true
        
    - name: Upload status artifacts
      uses: actions/upload-artifact@v4
      with:
        name: symphony-status-${{ github.run_number }}
        path: |
          dashboard/status.json
          reports/symphony-report-*.md
        retention-days: 30
        
    - name: Test configuration validation
      run: |
        python3 -c "
import yaml
with open('orchestration.yml') as f:
    config = yaml.safe_load(f)
    assert 'defaults' in config
    assert 'routes' in config  
    print('✅ Configuration valid')
"

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check documentation structure
      run: |
        test -f docs/platform/README.md
        test -f docs/guides/dashboard.md
        test -f docs/reference/symphony-cli.md
        echo "✅ Documentation structure valid"
        
    - name: Validate Justfile syntax
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin
        echo "$HOME/bin" >> $GITHUB_PATH
        just --list --justfile Justfile.orchestra
        
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check for secrets in config
      run: |
        ! grep -r "password\|secret\|key\|token" orchestration.yml .orchestra.env || exit 1
        echo "✅ No secrets found in configuration"
        
    - name: Validate proxy allowlist
      run: |
        python3 -c "
import json
with open('tools/proxy.js') as f:
    content = f.read()
    # Basic validation that allowlist exists
    assert 'ALLOWED_COMMANDS' in content
    print('✅ Proxy allowlist present')
"

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[integration]')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pyyaml duckdb
        
    - name: Install Just
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to ~/bin
        echo "$HOME/bin" >> $GITHUB_PATH
        
    - name: Test RAG pipeline (without external models)
      run: |
        mkdir -p rag/corpus
        echo "Test document for CI pipeline" > rag/corpus/test.txt
        python3 tools/rag_index.py || true
        python3 tools/rag_stats.py || true
        
    - name: Test backup/restore
      run: |
        bash tools/backup.sh
        ls -la intelgraph-symphony-*.tar.gz
        
    - name: Cleanup
      run: |
        rm -f rag/index/rag.duckdb
        rm -f intelgraph-symphony-*.tar.gz