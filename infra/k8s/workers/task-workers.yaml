# Task worker fleet with auto-scaling and circuit breakers
apiVersion: v1
kind: ConfigMap
metadata:
  name: task-worker-config
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: task-workers
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: intelgraph
data:
  application.yml: |
    conductor:
      client:
        rootUri: http://maestro-conductor.dev-orch.svc.cluster.local:8080/api
        threadCount: 5
        sleepWhenRetry: 500
        updateRetryCount: 3
        shutdownGracePeriodSeconds: 10
      
      worker:
        domain: dev
        pollingInterval: 100
        threadCount: 10
        
      circuit-breaker:
        enabled: true
        timeout: 30000
        requestVolumeThreshold: 20
        errorThresholdPercentage: 50
        sleepWindowInMilliseconds: 5000
        
    logging:
      level:
        root: INFO
        com.netflix.conductor: INFO
        com.intelgraph.worker: DEBUG
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: build-worker
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: build-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: intelgraph
    worker-type: build
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: build-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: build-worker
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: intelgraph
        worker-type: build
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: maestro-conductor
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
        - name: build-worker
          image: intelgraph/build-worker:latest
          ports:
            - containerPort: 9090
              name: metrics
          env:
            - name: CONDUCTOR_SERVER_URL
              value: http://maestro-conductor.dev-orch.svc.cluster.local:8080/api
            - name: WORKER_TYPE
              value: BUILD_TASK
            - name: WORKER_DOMAIN
              value: dev
            - name: JAVA_OPTS
              value: '-Xms512m -Xmx1024m -XX:+UseG1GC'
          livenessProbe:
            httpGet:
              path: /health
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: 9090
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          volumeMounts:
            - name: config
              mountPath: /app/config
            - name: workspace
              mountPath: /workspace
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      volumes:
        - name: config
          configMap:
            name: task-worker-config
        - name: workspace
          emptyDir:
            sizeLimit: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-worker
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: test-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: intelgraph
    worker-type: test
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: test-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: test-worker
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: intelgraph
        worker-type: test
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: maestro-conductor
      containers:
        - name: test-worker
          image: intelgraph/test-worker:latest
          ports:
            - containerPort: 9090
              name: metrics
          env:
            - name: CONDUCTOR_SERVER_URL
              value: http://maestro-conductor.dev-orch.svc.cluster.local:8080/api
            - name: WORKER_TYPE
              value: TEST_TASK
            - name: WORKER_DOMAIN
              value: dev
          resources:
            requests:
              cpu: 300m
              memory: 512Mi
            limits:
              cpu: 600m
              memory: 1Gi
          volumeMounts:
            - name: config
              mountPath: /app/config
            - name: test-results
              mountPath: /test-results
      volumes:
        - name: config
          configMap:
            name: task-worker-config
        - name: test-results
          emptyDir:
            sizeLimit: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: security-worker
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: security-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: intelgraph
    worker-type: security
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: security-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: security-worker
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: intelgraph
        worker-type: security
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9090'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: maestro-conductor
      containers:
        - name: security-worker
          image: intelgraph/security-worker:latest
          ports:
            - containerPort: 9090
              name: metrics
          env:
            - name: CONDUCTOR_SERVER_URL
              value: http://maestro-conductor.dev-orch.svc.cluster.local:8080/api
            - name: WORKER_TYPE
              value: SECURITY_SCAN_TASK
            - name: WORKER_DOMAIN
              value: dev
          resources:
            requests:
              cpu: 400m
              memory: 768Mi
            limits:
              cpu: 800m
              memory: 1.5Gi
          volumeMounts:
            - name: config
              mountPath: /app/config
            - name: scan-cache
              mountPath: /scan-cache
      volumes:
        - name: config
          configMap:
            name: task-worker-config
        - name: scan-cache
          emptyDir:
            sizeLimit: 5Gi

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: build-worker-hpa
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: build-worker
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/part-of: intelgraph
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: build-worker
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: conductor_queue_size
          selector:
            matchLabels:
              queue_name: BUILD_TASK
        target:
          type: AverageValue
          averageValue: '10'
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
        - type: Pods
          value: 4
          periodSeconds: 60

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-worker-hpa
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: test-worker
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/part-of: intelgraph
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-worker
  minReplicas: 1
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Pods
      pods:
        metric:
          name: conductor_queue_size
          selector:
            matchLabels:
              queue_name: TEST_TASK
        target:
          type: AverageValue
          averageValue: '5'

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: security-worker-hpa
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: security-worker
    app.kubernetes.io/component: autoscaler
    app.kubernetes.io/part-of: intelgraph
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: security-worker
  minReplicas: 1
  maxReplicas: 6
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
    - type: Pods
      pods:
        metric:
          name: conductor_queue_size
          selector:
            matchLabels:
              queue_name: SECURITY_SCAN_TASK
        target:
          type: AverageValue
          averageValue: '3'

---
apiVersion: v1
kind: Service
metadata:
  name: build-worker
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: build-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: intelgraph
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
    prometheus.io/path: '/metrics'
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app.kubernetes.io/name: build-worker

---
apiVersion: v1
kind: Service
metadata:
  name: test-worker
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: test-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: intelgraph
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
    prometheus.io/path: '/metrics'
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app.kubernetes.io/name: test-worker

---
apiVersion: v1
kind: Service
metadata:
  name: security-worker
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: security-worker
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: intelgraph
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
    prometheus.io/path: '/metrics'
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app.kubernetes.io/name: security-worker

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: task-workers
  namespace: dev-apps
  labels:
    app.kubernetes.io/name: task-workers
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: intelgraph
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: worker
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      honorLabels: true
