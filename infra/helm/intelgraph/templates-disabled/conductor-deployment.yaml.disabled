# Updated Conductor Deployment with SPIFFE/SPIRE Integration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: conductor
  namespace: {{ .Values.namespace | default "intelgraph" }}
  labels:
    app: conductor
    component: orchestration
    spiffe.io/spiffe-id: "true"
spec:
  replicas: {{ .Values.conductor.replicas | default 3 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: conductor
  template:
    metadata:
      labels:
        app: conductor
        component: orchestration
        version: {{ .Values.image.tag | default "latest" }}
      annotations:
        spiffe.io/spiffe-id: "spiffe://{{ .Values.spire.trustDomain | default "intelgraph.local" }}/ns/{{ .Values.namespace | default "intelgraph" }}/sa/conductor"
    spec:
      serviceAccountName: conductor
      containers:
      - name: conductor
        image: {{ .Values.image.repository }}/conductor:{{ .Values.image.tag | default "latest" }}
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8000"
        - name: METRICS_PORT
          value: "9090"
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: url
        - name: SPIFFE_ENDPOINT_SOCKET
          value: "unix:///run/spire/sockets/agent.sock"
        - name: SPIRE_TRUST_DOMAIN
          value: {{ .Values.spire.trustDomain | default "intelgraph.local" }}
        - name: ZERO_TRUST_ENABLED
          value: "{{ .Values.zeroTrust.enabled | default true }}"
        - name: MTLS_ENABLED
          value: "{{ .Values.mtls.enabled | default true }}"
        - name: AUDIT_WORM_ENABLED
          value: "{{ .Values.audit.wormEnabled | default true }}"
        - name: AUDIT_BUCKET
          value: {{ .Values.audit.bucket }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: {{ if .Values.mtls.enabled }}HTTPS{{ else }}HTTP{{ end }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
            scheme: {{ if .Values.mtls.enabled }}HTTPS{{ else }}HTTP{{ end }}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        - name: config
          mountPath: /app/config
          readOnly: true
        {{- if .Values.mtls.enabled }}
        - name: tls-certs
          mountPath: /app/certs
          readOnly: true
        {{- end }}
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- if .Values.mtls.enabled }}
      # SPIFFE Helper Sidecar for automatic certificate rotation
      - name: spiffe-helper
        image: {{ .Values.spire.helper.image | default "ghcr.io/spiffe/spiffe-helper:0.6.0" }}
        args:
        - -config
        - /run/spire/config/helper.conf
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /run/spire/sockets
          readOnly: true
        - name: spiffe-helper-config
          mountPath: /run/spire/config
          readOnly: true
        - name: tls-certs
          mountPath: /run/spire/certs
        resources:
          requests:
            memory: "64Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      {{- end }}
      volumes:
      - name: spire-agent-socket
        hostPath:
          path: /run/spire/sockets
          type: Directory
      - name: config
        configMap:
          name: conductor-config
      {{- if .Values.mtls.enabled }}
      - name: tls-certs
        emptyDir: {}
      - name: spiffe-helper-config
        configMap:
          name: spiffe-helper-config
      {{- end }}
      securityContext:
        fsGroup: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - conductor
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: conductor
  namespace: {{ .Values.namespace | default "intelgraph" }}
  labels:
    app: conductor
  annotations:
    {{- if .Values.mtls.enabled }}
    spiffe.io/spiffe-id: "spiffe://{{ .Values.spire.trustDomain | default "intelgraph.local" }}/ns/{{ .Values.namespace | default "intelgraph" }}/sa/conductor"
    {{- end }}
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: conductor
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: conductor
  namespace: {{ .Values.namespace | default "intelgraph" }}
  annotations:
    spiffe.io/spiffe-id: "spiffe://{{ .Values.spire.trustDomain | default "intelgraph.local" }}/ns/{{ .Values.namespace | default "intelgraph" }}/sa/conductor"
---
{{- if .Values.mtls.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: spiffe-helper-config
  namespace: {{ .Values.namespace | default "intelgraph" }}
data:
  helper.conf: |
    agent_address = "/run/spire/sockets/agent.sock"
    cmd = "/usr/bin/supervisorctl"
    cmd_args = "restart conductor"
    cert_dir = "/run/spire/certs"
    renew_signal = "SIGHUP"
    svid_file_name = "svid.pem"
    svid_key_file_name = "svid_key.pem"
    svid_bundle_file_name = "svid_bundle.pem"
---
{{- end }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: conductor-config
  namespace: {{ .Values.namespace | default "intelgraph" }}
data:
  config.json: |
    {
      "server": {
        "port": 8000,
        "host": "0.0.0.0",
        {{- if .Values.mtls.enabled }}
        "https": {
          "enabled": true,
          "cert": "/app/certs/svid.pem",
          "key": "/app/certs/svid_key.pem",
          "ca": "/app/certs/svid_bundle.pem"
        },
        {{- end }}
        "cors": {
          "enabled": true,
          "origins": {{ .Values.cors.origins | toJson }}
        }
      },
      "spiffe": {
        "trustDomain": "{{ .Values.spire.trustDomain | default "intelgraph.local" }}",
        "socketPath": "/run/spire/sockets/agent.sock",
        "enabled": {{ .Values.spire.enabled | default true }}
      },
      "audit": {
        "wormEnabled": {{ .Values.audit.wormEnabled | default true }},
        "bucket": "{{ .Values.audit.bucket }}",
        "retentionDays": {{ .Values.audit.retentionDays | default 2555 }}
      },
      "zeroTrust": {
        "enabled": {{ .Values.zeroTrust.enabled | default true }},
        "requireSpiffeId": {{ .Values.zeroTrust.requireSpiffeId | default true }},
        "allowedTrustDomains": {{ .Values.zeroTrust.allowedTrustDomains | toJson }}
      }
    }