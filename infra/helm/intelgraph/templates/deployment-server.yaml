apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "intelgraph.fullname" . }}-server
  labels:
    {{- include "intelgraph.labels" . | nindent 4 }}
    app.kubernetes.io/component: server
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "intelgraph.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "intelgraph.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "intelgraph.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.server.repository }}:{{ .Values.image.server.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.server.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.server.targetPort }}
              protocol: TCP
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          {{- end }}
          resources:
            {{- toYaml .Values.resources.server | nindent 12 }}
          env:
            {{- $safeDb := (include "safe.db" .Values.database | fromYaml) }}
            {{- $safeNeo4j := (include "safe.neo4j" .Values.database | fromYaml) }}
            {{- $safeRedis := (include "safe.redis" .Values.database | fromYaml) }}
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "{{ .Values.service.server.targetPort }}"
            {{- if $safeDb.secret }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $safeDb.secret | quote }}
                  key: {{ default "url" (index $safeDb.pg "key") }}
            {{- else }}
            - name: DATABASE_URL
              value: {{ default "postgresql://postgres:devpassword@postgresql:5432/intelgraph_dev" (index $safeDb.pg "url") | quote }}
            {{- end }}
            {{- if $safeNeo4j.secret }}
            - name: NEO4J_URI
              valueFrom:
                secretKeyRef:
                  name: {{ $safeNeo4j.secret | quote }}
                  key: {{ default "uri" (index $safeNeo4j.neo4j "uriKey") }}
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $safeNeo4j.secret | quote }}
                  key: {{ default "password" (index $safeNeo4j.neo4j "passwordKey") }}
            {{- else }}
            - name: NEO4J_URI
              value: {{ default "bolt://neo4j:7687" (index $safeNeo4j.neo4j "uri") | quote }}
            - name: NEO4J_PASSWORD
              value: {{ default "neo4j" (index $safeNeo4j.neo4j "password") | quote }}
            {{- end }}
            - name: NEO4J_USERNAME
              value: {{ default "neo4j" (index $safeNeo4j.neo4j "username") | quote }}
            {{- if $safeRedis.secret }}
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $safeRedis.secret | quote }}
                  key: {{ default "url" (index $safeRedis.redis "key") }}
            {{- else }}
            - name: REDIS_URL
              value: {{ default "redis://redis:6379" (index $safeRedis.redis "url") | quote }}
            {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-cache
              mountPath: /var/cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-cache
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
