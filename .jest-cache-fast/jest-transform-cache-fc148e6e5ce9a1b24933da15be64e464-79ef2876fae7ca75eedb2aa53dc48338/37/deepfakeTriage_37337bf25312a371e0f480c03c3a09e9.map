{"file":"/Users/brianlong/Developer/summit/server/src/ai/deepfakeTriage.ts","mappings":";;AAgBA,wCASC;AAnBD,SAAS,YAAY,CAAC,MAAc;IAClC,mEAAmE;IACnE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,SAAS,OAAO,CAAC,MAAc;IAC7B,iCAAiC;IACjC,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,SAAgB,cAAc,CAC5B,KAAa,EACb,OAA+B,EAAE;IAEjC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACzB,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;IAClC,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;IACvD,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;AACtC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/ai/deepfakeTriage.ts"],"sourcesContent":["export interface DeepfakeTriageResult {\n  score: number;\n  facets: string[];\n  latencyMs: number;\n}\n\nfunction runInference(_media: Buffer): number {\n  // Placeholder inference producing a deterministic but simple score\n  return Math.floor(Math.random() * 101);\n}\n\nfunction explain(_media: Buffer): string[] {\n  // Placeholder explanation facets\n  return [];\n}\n\nexport function deepfakeTriage(\n  media: Buffer,\n  meta: { latencyMs?: number } = {},\n): DeepfakeTriageResult {\n  const start = Date.now();\n  const score = runInference(media);\n  const facets = explain(media);\n  const latencyMs = meta.latencyMs ?? Date.now() - start;\n  return { score, facets, latencyMs };\n}\n"],"version":3}