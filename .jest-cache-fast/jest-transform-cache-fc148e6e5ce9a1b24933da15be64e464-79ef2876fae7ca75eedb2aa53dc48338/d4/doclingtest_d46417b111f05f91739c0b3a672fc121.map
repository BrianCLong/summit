{"file":"/Users/brianlong/Developer/summit/server/src/graphql/resolvers/__tests__/docling.test.ts","mappings":";;AAIA,IAAI,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;AAC9C,IAAI,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;AALxD,wCAA8C;AAC9C,qEAAkE;AAClE,kFAA+E;AAK/E,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,MAAM,GAAG,GAAG,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,CAAC;IAE/C,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACtD,+BAAc,CAAC,qBAAmC,CAAC,iBAAiB,CAAC;YACpE,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE;YACxF,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;YACxE,QAAQ,EAAE,EAAE;YACZ,aAAa,EAAE,EAAE;SAClB,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,MAAM,0BAAgB,CAAC,QAAQ,CAAC,qBAAqB,CAClE,EAAE,EACF;YACE,KAAK,EAAE;gBACL,SAAS,EAAE,WAAW;gBACtB,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,MAAM;gBACf,SAAS,EAAE,OAAO;gBAClB,OAAO,EAAE,eAAe;aACzB;SACF,EACD,GAAG,CACJ,CAAC;QAEF,MAAM,CAAC,+BAAc,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAC/D,MAAM,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CACtE,CAAC;QACF,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACrC,qCAAiB,CAAC,sBAAoC,CAAC,iBAAiB,CAAC;YACxE,EAAE,EAAE,OAAO;YACX,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,WAAW;YACtB,KAAK,EAAE,OAAO;YACd,KAAK,EAAE,UAAU;YACjB,IAAI,EAAE,SAAS;YACf,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,cAAc,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;YACnC,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,MAAM,0BAAgB,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,EAAE,GAAG,CAAC,CAAC;QACjG,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC;YACtB,EAAE,EAAE,OAAO;YACX,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,UAAU;YACjB,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,cAAc,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;SACpC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/graphql/resolvers/__tests__/docling.test.ts"],"sourcesContent":["import { doclingResolvers } from '../docling';\nimport { doclingService } from '../../../services/DoclingService';\nimport { doclingRepository } from '../../../db/repositories/doclingRepository';\n\njest.mock('../../../services/DoclingService');\njest.mock('../../../db/repositories/doclingRepository');\n\ndescribe('docling resolvers', () => {\n  const ctx = { user: { tenantId: 'tenant-1' } };\n\n  beforeEach(() => {\n    jest.resetAllMocks();\n  });\n\n  it('calls service for summarizeBuildFailure', async () => {\n    (doclingService.summarizeBuildFailure as jest.Mock).mockResolvedValue({\n      summary: { id: 's1', text: 'ok', focus: 'failures', highlights: [], qualitySignals: {} },\n      fragments: [{ id: 'f1', sha256: 'abc', text: 'fragment', metadata: {} }],\n      findings: [],\n      policySignals: [],\n    });\n\n    const result = await doclingResolvers.Mutation.summarizeBuildFailure(\n      {},\n      {\n        input: {\n          requestId: 'req-12345',\n          buildId: 'build-1',\n          logText: 'fail',\n          retention: 'SHORT',\n          purpose: 'investigation',\n        },\n      },\n      ctx,\n    );\n\n    expect(doclingService.summarizeBuildFailure).toHaveBeenCalledWith(\n      expect.objectContaining({ tenantId: 'tenant-1', retention: 'short' })\n    );\n    expect(result.summary.id).toBe('s1');\n  });\n\n  it('fetches stored summary', async () => {\n    (doclingRepository.findSummaryByRequestId as jest.Mock).mockResolvedValue({\n      id: 'sum-1',\n      tenantId: 'tenant-1',\n      requestId: 'req-12345',\n      scope: 'BUILD',\n      focus: 'failures',\n      text: 'summary',\n      highlights: ['h1'],\n      qualitySignals: { heuristic: true },\n      createdAt: new Date(),\n    });\n\n    const summary = await doclingResolvers.Query.doclingSummary({}, { requestId: 'req-12345' }, ctx);\n    expect(summary).toEqual({\n      id: 'sum-1',\n      text: 'summary',\n      focus: 'failures',\n      highlights: ['h1'],\n      qualitySignals: { heuristic: true },\n    });\n  });\n});\n"],"version":3}