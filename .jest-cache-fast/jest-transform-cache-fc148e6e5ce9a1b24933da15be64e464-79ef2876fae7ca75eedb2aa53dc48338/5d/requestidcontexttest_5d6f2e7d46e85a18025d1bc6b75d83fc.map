{"file":"/Users/brianlong/Developer/summit/server/tests/request-id-context.test.ts","mappings":";;AAAA,gDAAgD;AAEhD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,IAAI,GAAG,MAAM,IAAA,oBAAU,EAAC,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACxD,MAAM,IAAI,GAAG,MAAM,IAAA,oBAAU,EAAC,EAAE,GAAG,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/tests/request-id-context.test.ts"],"sourcesContent":["import { getContext } from \"../src/lib/auth.js\";\n\ndescribe(\"trace context\", () => {\n  it(\"attaches unique requestId to context\", async () => {\n    const ctx1 = await getContext({ req: { headers: {} } });\n    const ctx2 = await getContext({ req: { headers: {} } });\n    expect(ctx1.requestId).toBeDefined();\n    expect(ctx2.requestId).toBeDefined();\n    expect(ctx1.requestId).not.toBe(ctx2.requestId);\n  });\n});\n"],"version":3}