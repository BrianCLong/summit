04fc07dcaf13d521672b15806fc3dca6
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
const chain_of_custody_1 = require("../src/cases/chain-of-custody");
describe('chain of custody', () => {
    it('builds a hash-linked signed chain', async () => {
        const events = [];
        const db = {
            custodyEvent: {
                create: ({ data }) => {
                    events.push(data);
                },
            },
        };
        const { publicKey, privateKey } = (0, crypto_1.generateKeyPairSync)('ed25519');
        let prevHash = 'GENESIS';
        prevHash = await (0, chain_of_custody_1.writeCoC)(db, { caseId: 'c1', actorId: 'u1', action: 'CREATE', payload: { device: 'a' } }, prevHash, privateKey);
        prevHash = await (0, chain_of_custody_1.writeCoC)(db, { caseId: 'c1', actorId: 'u2', action: 'TRANSFER', payload: { reason: 'review' } }, prevHash, privateKey);
        expect(events[1].prevHash).toBe(events[0].eventHash);
        const firstValid = (0, crypto_1.verify)(null, Buffer.from(events[0].eventHash), publicKey, Buffer.from(events[0].signature, 'base64'));
        expect(firstValid).toBe(true);
        expect((0, chain_of_custody_1.verifyChain)(events, publicKey)).toBe(true);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3NlcnZlci90ZXN0cy9jaGFpbi1vZi1jdXN0b2R5LnRlc3QudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBZ0U7QUFDaEUsb0VBQXNFO0FBRXRFLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSxHQUFHLEVBQUU7SUFDaEMsRUFBRSxDQUFDLG1DQUFtQyxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ2pELE1BQU0sTUFBTSxHQUFVLEVBQUUsQ0FBQztRQUN6QixNQUFNLEVBQUUsR0FBRztZQUNULFlBQVksRUFBRTtnQkFDWixNQUFNLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBTyxFQUFFLEVBQUU7b0JBQ3hCLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3BCLENBQUM7YUFDRjtTQUNGLENBQUM7UUFDRixNQUFNLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxHQUFHLElBQUEsNEJBQW1CLEVBQUMsU0FBUyxDQUFDLENBQUM7UUFDakUsSUFBSSxRQUFRLEdBQUcsU0FBUyxDQUFDO1FBQ3pCLFFBQVEsR0FBRyxNQUFNLElBQUEsMkJBQVEsRUFDdkIsRUFBRSxFQUNGLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQzNFLFFBQVEsRUFDUixVQUFVLENBQ1gsQ0FBQztRQUNGLFFBQVEsR0FBRyxNQUFNLElBQUEsMkJBQVEsRUFDdkIsRUFBRSxFQUNGLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQ2xGLFFBQVEsRUFDUixVQUFVLENBQ1gsQ0FBQztRQUNGLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyRCxNQUFNLFVBQVUsR0FBRyxJQUFBLGVBQU0sRUFDdkIsSUFBSSxFQUNKLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxFQUNoQyxTQUFTLEVBQ1QsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUMzQyxDQUFDO1FBQ0YsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixNQUFNLENBQUMsSUFBQSw4QkFBVyxFQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwRCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbmxvbmcvRGV2ZWxvcGVyL3N1bW1pdC9zZXJ2ZXIvdGVzdHMvY2hhaW4tb2YtY3VzdG9keS50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlS2V5UGFpclN5bmMsIEtleU9iamVjdCwgdmVyaWZ5IH0gZnJvbSAnY3J5cHRvJztcbmltcG9ydCB7IHdyaXRlQ29DLCB2ZXJpZnlDaGFpbiB9IGZyb20gJy4uL3NyYy9jYXNlcy9jaGFpbi1vZi1jdXN0b2R5JztcblxuZGVzY3JpYmUoJ2NoYWluIG9mIGN1c3RvZHknLCAoKSA9PiB7XG4gIGl0KCdidWlsZHMgYSBoYXNoLWxpbmtlZCBzaWduZWQgY2hhaW4nLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgZXZlbnRzOiBhbnlbXSA9IFtdO1xuICAgIGNvbnN0IGRiID0ge1xuICAgICAgY3VzdG9keUV2ZW50OiB7XG4gICAgICAgIGNyZWF0ZTogKHsgZGF0YSB9OiBhbnkpID0+IHtcbiAgICAgICAgICBldmVudHMucHVzaChkYXRhKTtcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfTtcbiAgICBjb25zdCB7IHB1YmxpY0tleSwgcHJpdmF0ZUtleSB9ID0gZ2VuZXJhdGVLZXlQYWlyU3luYygnZWQyNTUxOScpO1xuICAgIGxldCBwcmV2SGFzaCA9ICdHRU5FU0lTJztcbiAgICBwcmV2SGFzaCA9IGF3YWl0IHdyaXRlQ29DKFxuICAgICAgZGIsXG4gICAgICB7IGNhc2VJZDogJ2MxJywgYWN0b3JJZDogJ3UxJywgYWN0aW9uOiAnQ1JFQVRFJywgcGF5bG9hZDogeyBkZXZpY2U6ICdhJyB9IH0sXG4gICAgICBwcmV2SGFzaCxcbiAgICAgIHByaXZhdGVLZXksXG4gICAgKTtcbiAgICBwcmV2SGFzaCA9IGF3YWl0IHdyaXRlQ29DKFxuICAgICAgZGIsXG4gICAgICB7IGNhc2VJZDogJ2MxJywgYWN0b3JJZDogJ3UyJywgYWN0aW9uOiAnVFJBTlNGRVInLCBwYXlsb2FkOiB7IHJlYXNvbjogJ3JldmlldycgfSB9LFxuICAgICAgcHJldkhhc2gsXG4gICAgICBwcml2YXRlS2V5LFxuICAgICk7XG4gICAgZXhwZWN0KGV2ZW50c1sxXS5wcmV2SGFzaCkudG9CZShldmVudHNbMF0uZXZlbnRIYXNoKTtcbiAgICBjb25zdCBmaXJzdFZhbGlkID0gdmVyaWZ5KFxuICAgICAgbnVsbCxcbiAgICAgIEJ1ZmZlci5mcm9tKGV2ZW50c1swXS5ldmVudEhhc2gpLFxuICAgICAgcHVibGljS2V5LFxuICAgICAgQnVmZmVyLmZyb20oZXZlbnRzWzBdLnNpZ25hdHVyZSwgJ2Jhc2U2NCcpLFxuICAgICk7XG4gICAgZXhwZWN0KGZpcnN0VmFsaWQpLnRvQmUodHJ1ZSk7XG4gICAgZXhwZWN0KHZlcmlmeUNoYWluKGV2ZW50cywgcHVibGljS2V5KSkudG9CZSh0cnVlKTtcbiAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==