{"file":"/Users/brianlong/Developer/summit/packages/sdk/connector-js/__tests__/index.test.ts","mappings":";;AAAA,wCAA6C;AAC7C,mCAAkC;AAElC,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,MAAM,MAAM,GAAG,IAAI,iBAAQ,CAAC;YAC1B,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;gBACnB,IAAI,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACzB,EAAE,EAAE,CAAC;YACP,CAAC;SACF,CAAC,CAAC;QACH,MAAM,IAAI,GAAG,IAAA,qBAAa,EAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/sdk/connector-js/__tests__/index.test.ts"],"sourcesContent":["import { createEmitter } from '../src/index';\nimport { Writable } from 'stream';\n\ndescribe('createEmitter', () => {\n  it('writes newline delimited JSON', () => {\n    let data = '';\n    const stream = new Writable({\n      write(chunk, _enc, cb) {\n        data += chunk.toString();\n        cb();\n      },\n    });\n    const emit = createEmitter(stream);\n    emit({ foo: 'bar' });\n    expect(data).toBe('{\"foo\":\"bar\"}\\n');\n  });\n});\n"],"version":3}