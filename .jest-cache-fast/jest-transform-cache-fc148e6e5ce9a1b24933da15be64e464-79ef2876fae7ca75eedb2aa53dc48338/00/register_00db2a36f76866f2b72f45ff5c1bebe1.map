{"file":"/Users/brianlong/Developer/summit/server/src/sites/register.ts","mappings":";;;;;AAKA,oCAWC;AAED,0CASC;AA3BD,2BAA0B;AAC1B,oDAA4B;AAE5B,MAAM,EAAE,GAAG,IAAI,SAAI,CAAC,EAAE,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AAE7D,KAAK,UAAU,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAE9E;IACC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC,KAAK,CAClC;;;yEAGqE,EACrE,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC,CAC7C,CAAC;IACF,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAgB,eAAe,CAAC,SAAiB,EAAE,KAAa,EAAE,MAAc;IAC9E,IAAI,CAAC;QACH,MAAM,CAAC,GAAG,gBAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAC5C,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC,GAAG,EAAE,CAAC;QACR,OAAO,CAAC,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC5D,CAAC;IAAC,MAAM,CAAC;QACP,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/sites/register.ts"],"sourcesContent":["import { Pool } from 'pg';\nimport crypto from 'crypto';\n\nconst pg = new Pool({ connectionString: process.env.DATABASE_URL });\n\nexport async function registerSite({ name, region, residency, pubkey, bandwidth }: {\n  name: string; region: string; residency: string; pubkey: string; bandwidth: 'low' | 'med' | 'high'\n}) {\n  const { rows: [s] } = await pg.query(\n    `INSERT INTO sites(name,region,residency,trust_pubkey,bandwidth_class)\n     VALUES ($1,$2,$3,$4,$5)\n     ON CONFLICT (name,region) DO UPDATE SET trust_pubkey=$4, bandwidth_class=$5\n     RETURNING id, name, region, residency, bandwidth_class AS bandwidth`,\n    [name, region, residency, pubkey, bandwidth],\n  );\n  return s;\n}\n\nexport function verifySignature(pubkeyPem: string, bytes: Buffer, sigB64: string) {\n  try {\n    const v = crypto.createVerify('RSA-SHA256');\n    v.update(bytes);\n    v.end();\n    return v.verify(pubkeyPem, Buffer.from(sigB64, 'base64'));\n  } catch {\n    return false;\n  }\n}\n\n"],"version":3}