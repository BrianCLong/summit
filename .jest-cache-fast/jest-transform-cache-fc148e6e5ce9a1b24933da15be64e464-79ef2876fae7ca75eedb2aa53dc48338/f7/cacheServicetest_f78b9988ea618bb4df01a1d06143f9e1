a8896d63d38cb0fa8c9056b024361aa1
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cacheService_1 = require("./cacheService");
describe('CacheService (memory fallback)', () => {
    let cache;
    beforeEach(() => {
        delete process.env.REDIS_URL;
        cache = new cacheService_1.CacheService();
    });
    it('returns null on miss', async () => {
        const v = await cache.get('missing');
        expect(v).toBeNull();
    });
    it('sets and gets a value', async () => {
        await cache.set('k1', { a: 1 }, 1);
        const v = await cache.get('k1');
        expect(v).toEqual({ a: 1 });
    });
    it('expires by ttl', async () => {
        await cache.set('k2', 'x', 0.001); // ~1ms
        // Wait a tick
        await new Promise((r) => setTimeout(r, 10));
        const v = await cache.get('k2');
        expect(v).toBeNull();
    });
    it('delete clears a key', async () => {
        await cache.set('k3', 'y', 5);
        await cache.delete('k3');
        const v = await cache.get('k3');
        expect(v).toBeNull();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3NlcnZlci9zcmMvc2VydmljZXMvY2FjaGVTZXJ2aWNlLnRlc3QudHMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxpREFBOEM7QUFFOUMsUUFBUSxDQUFDLGdDQUFnQyxFQUFFLEdBQUcsRUFBRTtJQUM5QyxJQUFJLEtBQW1CLENBQUM7SUFFeEIsVUFBVSxDQUFDLEdBQUcsRUFBRTtRQUNkLE9BQVEsT0FBTyxDQUFDLEdBQVcsQ0FBQyxTQUFTLENBQUM7UUFDdEMsS0FBSyxHQUFHLElBQUksMkJBQVksRUFBRSxDQUFDO0lBQzdCLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHNCQUFzQixFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ3BDLE1BQU0sQ0FBQyxHQUFHLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsdUJBQXVCLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDckMsTUFBTSxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNuQyxNQUFNLENBQUMsR0FBRyxNQUFNLEtBQUssQ0FBQyxHQUFHLENBQWdCLElBQUksQ0FBQyxDQUFDO1FBQy9DLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QixDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxLQUFLLElBQUksRUFBRTtRQUM5QixNQUFNLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU87UUFDMUMsY0FBYztRQUNkLE1BQU0sSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM1QyxNQUFNLENBQUMsR0FBRyxNQUFNLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHFCQUFxQixFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ25DLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzlCLE1BQU0sS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QixNQUFNLENBQUMsR0FBRyxNQUFNLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3ZCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3NlcnZlci9zcmMvc2VydmljZXMvY2FjaGVTZXJ2aWNlLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FjaGVTZXJ2aWNlIH0gZnJvbSAnLi9jYWNoZVNlcnZpY2UnO1xuXG5kZXNjcmliZSgnQ2FjaGVTZXJ2aWNlIChtZW1vcnkgZmFsbGJhY2spJywgKCkgPT4ge1xuICBsZXQgY2FjaGU6IENhY2hlU2VydmljZTtcblxuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBkZWxldGUgKHByb2Nlc3MuZW52IGFzIGFueSkuUkVESVNfVVJMO1xuICAgIGNhY2hlID0gbmV3IENhY2hlU2VydmljZSgpO1xuICB9KTtcblxuICBpdCgncmV0dXJucyBudWxsIG9uIG1pc3MnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgdiA9IGF3YWl0IGNhY2hlLmdldCgnbWlzc2luZycpO1xuICAgIGV4cGVjdCh2KS50b0JlTnVsbCgpO1xuICB9KTtcblxuICBpdCgnc2V0cyBhbmQgZ2V0cyBhIHZhbHVlJywgYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGNhY2hlLnNldCgnazEnLCB7IGE6IDEgfSwgMSk7XG4gICAgY29uc3QgdiA9IGF3YWl0IGNhY2hlLmdldDx7IGE6IG51bWJlciB9PignazEnKTtcbiAgICBleHBlY3QodikudG9FcXVhbCh7IGE6IDEgfSk7XG4gIH0pO1xuXG4gIGl0KCdleHBpcmVzIGJ5IHR0bCcsIGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBjYWNoZS5zZXQoJ2syJywgJ3gnLCAwLjAwMSk7IC8vIH4xbXNcbiAgICAvLyBXYWl0IGEgdGlja1xuICAgIGF3YWl0IG5ldyBQcm9taXNlKChyKSA9PiBzZXRUaW1lb3V0KHIsIDEwKSk7XG4gICAgY29uc3QgdiA9IGF3YWl0IGNhY2hlLmdldCgnazInKTtcbiAgICBleHBlY3QodikudG9CZU51bGwoKTtcbiAgfSk7XG5cbiAgaXQoJ2RlbGV0ZSBjbGVhcnMgYSBrZXknLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgY2FjaGUuc2V0KCdrMycsICd5JywgNSk7XG4gICAgYXdhaXQgY2FjaGUuZGVsZXRlKCdrMycpO1xuICAgIGNvbnN0IHYgPSBhd2FpdCBjYWNoZS5nZXQoJ2szJyk7XG4gICAgZXhwZWN0KHYpLnRvQmVOdWxsKCk7XG4gIH0pO1xufSk7XG5cbiJdLCJ2ZXJzaW9uIjozfQ==