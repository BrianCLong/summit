f86465ec830fdf4ff71bb5780ff38c10
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pickGpuPool = pickGpuPool;
function pickGpuPool(req) {
    const need = req.gpus || 0;
    if (!need)
        return null;
    const pools = listEligible();
    const filtered = pools.filter((p) => satisfies(p, req));
    return filtered.sort((a, b) => (a.costHint?.gpuSec || 0) - (b.costHint?.gpuSec || 0))[0] || null;
}
function listEligible() {
    // TODO: load dynamic pools; placeholder
    return [
        { name: 'gpu-a10', tags: ['gpu'], gpu: { class: 'A10', vramGi: 24, available: 8 }, costHint: { gpuSec: 1.0 } },
        { name: 'gpu-l4', tags: ['gpu'], gpu: { class: 'L4', vramGi: 24, available: 4 }, costHint: { gpuSec: 0.8 } },
    ];
}
function satisfies(pool, req) {
    const cls = pool.gpu?.class || '';
    const vram = pool.gpu?.vramGi || 0;
    const classOk = !req.gpuClass || compareGpuClass(cls, req.gpuClass);
    const vramOk = !req.vram || vram >= parseInt(String(req.vram));
    const capOk = (pool.gpu?.available || 0) >= req.gpus;
    return classOk && vramOk && capOk;
}
function compareGpuClass(have, want) {
    if (want.endsWith('+'))
        return have >= want.replace('+', '');
    return have === want;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3NlcnZlci9zcmMvY29uZHVjdG9yL3NjaGVkdWxlci9zZWxlY3RHcHVQb29sLnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsa0NBTUM7QUFORCxTQUFnQixXQUFXLENBQUMsR0FBdUQ7SUFDakYsTUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLENBQUM7SUFDM0IsSUFBSSxDQUFDLElBQUk7UUFBRSxPQUFPLElBQUksQ0FBQztJQUN2QixNQUFNLEtBQUssR0FBRyxZQUFZLEVBQUUsQ0FBQztJQUM3QixNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDeEQsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLE1BQU0sSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDO0FBQ25HLENBQUM7QUFFRCxTQUFTLFlBQVk7SUFDbkIsd0NBQXdDO0lBQ3hDLE9BQU87UUFDTCxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDOUcsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsQ0FBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFO0tBQzdHLENBQUM7QUFDSixDQUFDO0FBQ0QsU0FBUyxTQUFTLENBQUMsSUFBUyxFQUFFLEdBQVE7SUFDcEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLElBQUksRUFBRSxDQUFDO0lBQ2xDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsTUFBTSxJQUFJLENBQUMsQ0FBQztJQUNuQyxNQUFNLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLElBQUksZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDcEUsTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksSUFBSSxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQy9ELE1BQU0sS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxTQUFTLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQztJQUNyRCxPQUFPLE9BQU8sSUFBSSxNQUFNLElBQUksS0FBSyxDQUFDO0FBQ3BDLENBQUM7QUFDRCxTQUFTLGVBQWUsQ0FBQyxJQUFZLEVBQUUsSUFBWTtJQUNqRCxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDO1FBQUUsT0FBTyxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDN0QsT0FBTyxJQUFJLEtBQUssSUFBSSxDQUFDO0FBQ3ZCLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3NlcnZlci9zcmMvY29uZHVjdG9yL3NjaGVkdWxlci9zZWxlY3RHcHVQb29sLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwaWNrR3B1UG9vbChyZXE6IHsgZ3B1czogbnVtYmVyOyBncHVDbGFzcz86IHN0cmluZzsgdnJhbT86IHN0cmluZyB9KSB7XG4gIGNvbnN0IG5lZWQgPSByZXEuZ3B1cyB8fCAwO1xuICBpZiAoIW5lZWQpIHJldHVybiBudWxsO1xuICBjb25zdCBwb29scyA9IGxpc3RFbGlnaWJsZSgpO1xuICBjb25zdCBmaWx0ZXJlZCA9IHBvb2xzLmZpbHRlcigocCkgPT4gc2F0aXNmaWVzKHAsIHJlcSkpO1xuICByZXR1cm4gZmlsdGVyZWQuc29ydCgoYSwgYikgPT4gKGEuY29zdEhpbnQ/LmdwdVNlYyB8fCAwKSAtIChiLmNvc3RIaW50Py5ncHVTZWMgfHwgMCkpWzBdIHx8IG51bGw7XG59XG5cbmZ1bmN0aW9uIGxpc3RFbGlnaWJsZSgpIHtcbiAgLy8gVE9ETzogbG9hZCBkeW5hbWljIHBvb2xzOyBwbGFjZWhvbGRlclxuICByZXR1cm4gW1xuICAgIHsgbmFtZTogJ2dwdS1hMTAnLCB0YWdzOiBbJ2dwdSddLCBncHU6IHsgY2xhc3M6ICdBMTAnLCB2cmFtR2k6IDI0LCBhdmFpbGFibGU6IDggfSwgY29zdEhpbnQ6IHsgZ3B1U2VjOiAxLjAgfSB9LFxuICAgIHsgbmFtZTogJ2dwdS1sNCcsIHRhZ3M6IFsnZ3B1J10sIGdwdTogeyBjbGFzczogJ0w0JywgdnJhbUdpOiAyNCwgYXZhaWxhYmxlOiA0IH0sIGNvc3RIaW50OiB7IGdwdVNlYzogMC44IH0gfSxcbiAgXTtcbn1cbmZ1bmN0aW9uIHNhdGlzZmllcyhwb29sOiBhbnksIHJlcTogYW55KSB7XG4gIGNvbnN0IGNscyA9IHBvb2wuZ3B1Py5jbGFzcyB8fCAnJztcbiAgY29uc3QgdnJhbSA9IHBvb2wuZ3B1Py52cmFtR2kgfHwgMDtcbiAgY29uc3QgY2xhc3NPayA9ICFyZXEuZ3B1Q2xhc3MgfHwgY29tcGFyZUdwdUNsYXNzKGNscywgcmVxLmdwdUNsYXNzKTtcbiAgY29uc3QgdnJhbU9rID0gIXJlcS52cmFtIHx8IHZyYW0gPj0gcGFyc2VJbnQoU3RyaW5nKHJlcS52cmFtKSk7XG4gIGNvbnN0IGNhcE9rID0gKHBvb2wuZ3B1Py5hdmFpbGFibGUgfHwgMCkgPj0gcmVxLmdwdXM7XG4gIHJldHVybiBjbGFzc09rICYmIHZyYW1PayAmJiBjYXBPaztcbn1cbmZ1bmN0aW9uIGNvbXBhcmVHcHVDbGFzcyhoYXZlOiBzdHJpbmcsIHdhbnQ6IHN0cmluZykge1xuICBpZiAod2FudC5lbmRzV2l0aCgnKycpKSByZXR1cm4gaGF2ZSA+PSB3YW50LnJlcGxhY2UoJysnLCAnJyk7XG4gIHJldHVybiBoYXZlID09PSB3YW50O1xufVxuXG4iXSwidmVyc2lvbiI6M30=