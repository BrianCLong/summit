{"file":"/Users/brianlong/Developer/summit/server/src/conductor/scheduler/selectGpuPool.ts","mappings":";;AAAA,kCAMC;AAND,SAAgB,WAAW,CAAC,GAAuD;IACjF,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC;IAC3B,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,CAAC;IACvB,MAAM,KAAK,GAAG,YAAY,EAAE,CAAC;IAC7B,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACxD,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;AACnG,CAAC;AAED,SAAS,YAAY;IACnB,wCAAwC;IACxC,OAAO;QACL,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE;QAC9G,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE;KAC7G,CAAC;AACJ,CAAC;AACD,SAAS,SAAS,CAAC,IAAS,EAAE,GAAQ;IACpC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,KAAK,IAAI,EAAE,CAAC;IAClC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,MAAM,IAAI,CAAC,CAAC;IACnC,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,QAAQ,IAAI,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpE,MAAM,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/D,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC;IACrD,OAAO,OAAO,IAAI,MAAM,IAAI,KAAK,CAAC;AACpC,CAAC;AACD,SAAS,eAAe,CAAC,IAAY,EAAE,IAAY;IACjD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAAE,OAAO,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC7D,OAAO,IAAI,KAAK,IAAI,CAAC;AACvB,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/conductor/scheduler/selectGpuPool.ts"],"sourcesContent":["export function pickGpuPool(req: { gpus: number; gpuClass?: string; vram?: string }) {\n  const need = req.gpus || 0;\n  if (!need) return null;\n  const pools = listEligible();\n  const filtered = pools.filter((p) => satisfies(p, req));\n  return filtered.sort((a, b) => (a.costHint?.gpuSec || 0) - (b.costHint?.gpuSec || 0))[0] || null;\n}\n\nfunction listEligible() {\n  // TODO: load dynamic pools; placeholder\n  return [\n    { name: 'gpu-a10', tags: ['gpu'], gpu: { class: 'A10', vramGi: 24, available: 8 }, costHint: { gpuSec: 1.0 } },\n    { name: 'gpu-l4', tags: ['gpu'], gpu: { class: 'L4', vramGi: 24, available: 4 }, costHint: { gpuSec: 0.8 } },\n  ];\n}\nfunction satisfies(pool: any, req: any) {\n  const cls = pool.gpu?.class || '';\n  const vram = pool.gpu?.vramGi || 0;\n  const classOk = !req.gpuClass || compareGpuClass(cls, req.gpuClass);\n  const vramOk = !req.vram || vram >= parseInt(String(req.vram));\n  const capOk = (pool.gpu?.available || 0) >= req.gpus;\n  return classOk && vramOk && capOk;\n}\nfunction compareGpuClass(have: string, want: string) {\n  if (want.endsWith('+')) return have >= want.replace('+', '');\n  return have === want;\n}\n\n"],"version":3}