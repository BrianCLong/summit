{"file":"/Users/brianlong/Developer/summit/server/src/appFactory.ts","mappings":";;;;;AA+CS,8BAAS;AA/ClB,sDAA8B;AAC9B,gDAAwB;AACxB,oDAA4B;AAC5B,oDAA4B;AAC5B,iEAAuC;AACvC,kEAAuC;AAMvC,SAAS,SAAS,CAAC,EAAE,WAAW,GAAG,KAAK,KAAiB,EAAE;IACzD,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;IACtB,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAE5B,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC;QACb,qBAAqB,EAAE;YACrB,UAAU,EAAE;gBACV,UAAU,EAAE,CAAC,QAAQ,CAAC;gBACtB,QAAQ,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC;gBACvC,SAAS,EAAE,CAAC,QAAQ,CAAC;gBACrB,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;aACtC;SACF;QACD,cAAc,EAAE,EAAE,MAAM,EAAE,aAAa,EAAE;KAC1C,CAAC,CAAC,CAAC;IAEJ,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,EAAC,EAAE,MAAM,EAAE,kBAAM,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACjE,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACzC,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAC/D,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,UAAU,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,mBAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAErF,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QAC9B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,MAAM,EAAE,IAAI;YACZ,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACnC,WAAW,EAAE,kBAAM,CAAC,GAAG;YACvB,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,WAAW;QAAE,OAAO,GAAG,CAAC;IAE5B,2DAA2D;IAC3D,OAAO,GAAG,CAAC;AACb,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/appFactory.ts"],"sourcesContent":["import express from 'express';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport morgan from 'morgan';\nimport config from './config/index.js';\nimport logger from './utils/logger.js';\n\ninterface AppOptions {\n  lightweight?: boolean;\n}\n\nfunction createApp({ lightweight = false }: AppOptions = {}) {\n  const app = express();\n  app.disable('x-powered-by');\n\n  app.use(helmet({\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n        scriptSrc: [\"'self'\"],\n        imgSrc: [\"'self'\", \"data:\", \"https:\"]\n      }\n    },\n    referrerPolicy: { policy: 'no-referrer' }\n  }));\n\n  app.use(cors({ origin: config.cors.origin, credentials: true }));\n  app.use(express.json({ limit: '10mb' }));\n  app.use(express.urlencoded({ extended: true, limit: '10mb' }));\n  app.use(morgan('combined', { stream: { write: (msg) => logger.info(msg.trim()) } }));\n\n  app.get('/health', (req, res) => {\n    res.status(200).json({\n      status: 'OK',\n      timestamp: new Date().toISOString(),\n      environment: config.env,\n      version: '1.0.0'\n    });\n  });\n\n  if (lightweight) return app;\n\n  // In full mode, server.js wires DB + GraphQL + websockets.\n  return app;\n}\n\nexport { createApp };\n"],"version":3}