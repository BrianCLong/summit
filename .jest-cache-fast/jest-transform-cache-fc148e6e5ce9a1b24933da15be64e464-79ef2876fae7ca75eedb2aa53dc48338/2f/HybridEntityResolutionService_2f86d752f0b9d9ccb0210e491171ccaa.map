{"file":"/Users/brianlong/Developer/summit/server/src/services/HybridEntityResolutionService.ts","mappings":";;;;;AAeA,0CAaC;AA5BD,gDAAwB;AACxB,+CAA2C;AAC3C,gDAAwB;AACxB,+BAAoC;AAEpC,MAAM,GAAG,GAAG,IAAA,cAAI,EAAC,EAAE,IAAI,EAAE,+BAA+B,EAAE,CAAC,CAAC;AAUrD,KAAK,UAAU,eAAe,CACnC,CAAS,EACT,CAAS;IAET,MAAM,OAAO,GAAG,IAAA,SAAM,GAAE,CAAC;IACzB,MAAM,MAAM,GAAG,cAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC9D,MAAM,MAAM,GAAG,MAAM,0BAAW,CAAC,GAAG,CAAC,MAAM,EAAE;QAC3C,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACZ,aAAa,EAAE,CAAC,IAAI,CAAC;KACtB,CAAC,CAAC;IACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,UAAU,CAAC,CAAC;IAChE,OAAO,EAAE,GAAG,MAAM,EAAE,OAAO,EAAqB,CAAC;AACnD,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/services/HybridEntityResolutionService.ts"],"sourcesContent":["import path from \"path\";\nimport { PythonShell } from \"python-shell\";\nimport pino from \"pino\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst log = pino({ name: \"HybridEntityResolutionService\" });\n\nexport interface ERServiceResult {\n  version: string;\n  score: number;\n  match: boolean;\n  explanation: Record<string, number>;\n  traceId: string;\n}\n\nexport async function resolveEntities(\n  a: string,\n  b: string,\n): Promise<ERServiceResult> {\n  const traceId = uuidv4();\n  const script = path.join(process.cwd(), \"ml\", \"er\", \"api.py\");\n  const result = await PythonShell.run(script, {\n    args: [a, b],\n    pythonOptions: [\"-u\"],\n  });\n  const parsed = JSON.parse(result[0]);\n  log.info({ traceId, features: parsed.explanation }, \"er_match\");\n  return { ...parsed, traceId } as ERServiceResult;\n}\n"],"version":3}