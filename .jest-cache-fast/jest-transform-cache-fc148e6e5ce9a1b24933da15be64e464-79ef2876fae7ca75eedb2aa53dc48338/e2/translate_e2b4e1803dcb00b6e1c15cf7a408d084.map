{"file":"/Users/brianlong/Developer/summit/packages/maestroflow/src/nl/translate.ts","mappings":";;AAEA,4BAWC;AAXD,SAAgB,QAAQ,CAAC,IAAW;IAClC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC7B,MAAM,KAAK,GAAS,EAAE,CAAC;IAAC,MAAM,KAAK,GAAS,EAAE,CAAC;IAC/C,MAAM,GAAG,GAAG,CAAC,EAAS,EAAC,IAAW,EAAC,EAAE,GAAE,IAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE,CAAA,CAAC,CAAC,EAAE,KAAG,EAAE,CAAC;QAAE,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpG,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;IACrD,GAAG,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;IACrB,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAAE,GAAG,CAAC,MAAM,EAAC,MAAM,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,OAAO,EAAC,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC;IAC7E,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAK,EAAC,EAAE,CAAA,CAAC,CAAC,EAAE,KAAG,MAAM,CAAC,CAAC,IAAI,GAAC,KAAK,CAAC;IACxE,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;QAAE,GAAG,CAAC,QAAQ,EAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,MAAM,EAAC,EAAE,EAAC,QAAQ,EAAC,CAAC,CAAC;IAC9F,IAAI,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;QAAE,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAC,MAAM,EAAC,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC,gBAAgB,EAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,MAAM,EAAC,EAAE,EAAC,MAAM,EAAC,EAAC,EAAC,IAAI,EAAC,MAAM,EAAC,EAAE,EAAC,QAAQ,EAAC,CAAC,CAAC;IACpK,OAAO,EAAE,IAAI,EAAC,SAAS,EAAE,QAAQ,EAAC,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;AACrE,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/maestroflow/src/nl/translate.ts"],"sourcesContent":["// Deterministic keyword grammar → DSL (no LLM). Expandable via synonyms.\ntype Flow = { name:string; triggers:string[]; nodes:any[]; edges:any[] };\nexport function nlToFlow(text:string): Flow {\n  const t = text.toLowerCase();\n  const nodes:any[] = []; const edges:any[] = [];\n  const add = (id:string,type:string)=>{ if(!nodes.find((n:any)=>n.id===id)) nodes.push({id,type}); };\n  if (/on (pr|pull request)/.test(t)) { /* trigger */ }\n  add(\"build\",\"build\");\n  if (/test/.test(t)) add(\"test\",\"test\"), edges.push({from:\"build\",to:\"test\"});\n  if (/tia|impact/.test(t)) nodes.find((n:any)=>n.id===\"test\").mode=\"tia\";\n  if (/(deploy|rollout)/.test(t)) add(\"deploy\",\"deploy\"), edges.push({from:\"test\",to:\"deploy\"});\n  if (/confidence\\s*(>=|≥)\\s*85/.test(t)) nodes.push({id:\"gate\",type:\"approve\",cond:\"confidence>=85\"}), edges.push({from:\"test\",to:\"gate\"},{from:\"gate\",to:\"deploy\"});\n  return { name:\"nl-flow\", triggers:[\"pull_request\"], nodes, edges };\n}"],"version":3}