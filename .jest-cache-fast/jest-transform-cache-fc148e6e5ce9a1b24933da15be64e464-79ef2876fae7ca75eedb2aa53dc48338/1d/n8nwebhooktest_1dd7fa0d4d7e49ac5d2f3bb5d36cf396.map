{"file":"/Users/brianlong/Developer/summit/server/tests/n8n.webhook.test.ts","mappings":";;;;;AAAA,oDAA4B;AAC5B,0DAAgC;AAChC,oCAAuC;AAEvC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,SAAS,CAAC,GAAG,EAAE;QACb,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,aAAa,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,GAAG,GAAG,MAAM,IAAA,eAAS,GAAE,CAAC;QAC9B,MAAM,GAAG,GAAG,MAAM,IAAA,mBAAO,EAAC,GAAG,CAAC;aAC3B,IAAI,CAAC,eAAe,CAAC;aACrB,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC;aACjC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QACzB,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,GAAG,GAAG,MAAM,IAAA,eAAS,GAAE,CAAC;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;QAC/F,MAAM,GAAG,GAAG,gBAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClF,MAAM,GAAG,GAAG,MAAM,IAAA,mBAAO,EAAC,GAAG,CAAC;aAC3B,IAAI,CAAC,eAAe,CAAC;aACrB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;aACvC,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC;aAC/B,IAAI,CAAC,IAAI,CAAC,CAAC;QACd,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/tests/n8n.webhook.test.ts"],"sourcesContent":["import crypto from 'crypto';\nimport request from 'supertest';\nimport { createApp } from '../src/app';\n\ndescribe('n8n webhook', () => {\n  beforeAll(() => {\n    process.env.N8N_SIGNING_SECRET = 'test-secret';\n  });\n\n  it('rejects bad signature', async () => {\n    const app = await createApp();\n    const res = await request(app)\n      .post('/webhooks/n8n')\n      .set('x-maestro-signature', 'bad')\n      .send({ runId: 'r1' });\n    expect(res.status).toBe(401);\n  });\n\n  it('accepts good signature', async () => {\n    const app = await createApp();\n    const body = JSON.stringify({ runId: 'run-123', artifact: 'n8n.json', content: { ok: true } });\n    const sig = crypto.createHmac('sha256', 'test-secret').update(body).digest('hex');\n    const res = await request(app)\n      .post('/webhooks/n8n')\n      .set('content-type', 'application/json')\n      .set('x-maestro-signature', sig)\n      .send(body);\n    expect(res.status).toBe(200);\n    expect(res.body.ok).toBe(true);\n  });\n});\n\n"],"version":3}