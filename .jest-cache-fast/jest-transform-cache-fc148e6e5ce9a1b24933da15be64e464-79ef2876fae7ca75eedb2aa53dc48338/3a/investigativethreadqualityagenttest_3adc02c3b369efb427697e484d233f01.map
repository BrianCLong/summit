{"file":"/Users/brianlong/Developer/summit/server/tests/investigative-thread-quality-agent.test.ts","mappings":";;;;;AAAA,sHAA4G;AAE5G,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;IAC/C,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QACxB,MAAM,OAAO,GAAG,EAAE,GAAG,EAAE,KAAK,EAAS,CAAC;QACtC,MAAM,MAAM,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,OAAO,EAAS,CAAC;QAEjD,MAAM,KAAK,GAAG,IAAI,4CAA+B,CAAC,MAAM,CAAC,CAAC;QAC1D,MAAM,MAAM,GAAgB;YAC1B,EAAE,EAAE,IAAI;YACR,eAAe,EAAE,MAAM;YACvB,QAAQ,EAAE;gBACR;oBACE,IAAI,EAAE,mDAAmD;oBACzD,QAAQ,EAAE,CAAC,oBAAoB,CAAC;iBACjC;gBACD,EAAE,IAAI,EAAE,0BAA0B,EAAE;gBACpC,EAAE,IAAI,EAAE,0BAA0B,EAAE;aACrC;SACF,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAElD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/tests/investigative-thread-quality-agent.test.ts"],"sourcesContent":["import InvestigativeThreadQualityAgent, { ThreadInput } from '../src/ai/investigative-thread-quality-agent';\n\ndescribe('InvestigativeThreadQualityAgent', () => {\n  test('scores and updates graph metadata', async () => {\n    const run = jest.fn().mockResolvedValue({});\n    const close = jest.fn();\n    const session = { run, close } as any;\n    const driver = { session: () => session } as any;\n\n    const agent = new InvestigativeThreadQualityAgent(driver);\n    const thread: ThreadInput = {\n      id: 't1',\n      investigationId: 'inv1',\n      messages: [\n        {\n          text: 'First statement with reference http://example.com',\n          evidence: ['http://example.com']\n        },\n        { text: 'Second statement repeats' },\n        { text: 'Second statement repeats' }\n      ]\n    };\n\n    const scores = await agent.scoreAndUpdate(thread);\n\n    expect(scores.evidence).toBeCloseTo(1 / 3, 5);\n    expect(scores.redundancy).toBeGreaterThan(0);\n    expect(run).toHaveBeenCalled();\n  });\n});\n\n"],"version":3}