{"file":"/Users/brianlong/Developer/summit/server/src/realtime/collab.ts","mappings":"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","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/realtime/collab.ts"],"sourcesContent":["import { createAdapter } from '@socket.io/redis-adapter';\nimport { Server } from 'socket.io';\nimport type { Server as HttpServer } from 'http';\nimport Redis from 'ioredis';\n\ninterface SocketCtx {\n  tenantId: string;\n  userId: string;\n}\n\nexport async function initRealtime(httpServer: HttpServer) {\n  const io = new Server(httpServer, { path: '/ws' });\n\n  const url = process.env.REDIS_URL;\n  if (url) {\n    try {\n      const pub = new Redis(url);\n      const sub = pub.duplicate();\n      io.adapter(createAdapter(pub as any, sub as any));\n    } catch (err) {\n      console.warn('Redis adapter disabled', err);\n    }\n  }\n\n  io.use((socket, next) => {\n    const { tenantId, userId } = socket.handshake.auth as any;\n    if (!tenantId || !userId) {\n      return next(new Error('FORBIDDEN'));\n    }\n    (socket as any).ctx = { tenantId, userId } as SocketCtx;\n    next();\n  });\n\n  io.on('connection', (socket) => {\n    const { tenantId, userId } = (socket as any).ctx as SocketCtx;\n\n    socket.on('join', ({ investigationId }) => {\n      const room = `tenant:${tenantId}:investigation:${investigationId}`;\n      socket.join(room);\n      io.to(room).emit('presence:join', { userId, ts: Date.now() });\n    });\n\n    socket.on('cursor:move', ({ investigationId, x, y }) => {\n      const room = `tenant:${tenantId}:investigation:${investigationId}`;\n      socket.to(room).emit('cursor:move', { userId, x, y, ts: Date.now() });\n    });\n\n    socket.on('lock:acquire', ({ investigationId, id, kind }) => {\n      const room = `tenant:${tenantId}:investigation:${investigationId}`;\n      socket.to(room).emit('lock:update', { id, kind, userId, locked: true });\n    });\n\n    socket.on('lock:release', ({ investigationId, id, kind }) => {\n      const room = `tenant:${tenantId}:investigation:${investigationId}`;\n      socket.to(room).emit('lock:update', { id, kind, userId, locked: false });\n    });\n\n    socket.on('disconnect', () => {\n      for (const room of socket.rooms) {\n        if (room.startsWith('tenant:')) {\n          io.to(room).emit('presence:leave', { userId });\n        }\n      }\n    });\n  });\n\n  return io;\n}\n"],"version":3}