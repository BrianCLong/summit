{"file":"/Users/brianlong/Developer/summit/server/src/risk/RiskEngine.ts","mappings":";;;AAWA,MAAa,UAAU;IACQ;IAAyC;IAA+B;IAArG,YAA6B,OAAsB,EAAmB,IAAY,EAAmB,UAAU,IAAI;QAAtF,YAAO,GAAP,OAAO,CAAe;QAAmB,SAAI,GAAJ,IAAI,CAAQ;QAAmB,YAAO,GAAP,OAAO,CAAO;IAAG,CAAC;IAEvH,KAAK,CAAC,QAAuB,EAAE,MAA4B;QACzD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAClB,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAClD,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC3B,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;YACpB,CAAC,IAAI,KAAK,CAAC;YACX,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;QACpD,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC;QACrF,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;IACrH,CAAC;CACF;AAhBD,gCAgBC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/risk/RiskEngine.ts"],"sourcesContent":["import { FeatureVector } from './FeatureStore';\n\nexport type RiskResult = {\n  score: number;\n  band: 'low' | 'medium' | 'high' | 'critical';\n  contributions: Array<{ feature: string; value: number; weight: number; delta: number }>;\n  window: '24h' | '7d' | '30d';\n  computedAt: string;\n  modelVersion: string;\n};\n\nexport class RiskEngine {\n  constructor(private readonly weights: FeatureVector, private readonly bias: number, private readonly version = 'v1') {}\n\n  score(features: FeatureVector, window: RiskResult['window']): RiskResult {\n    let z = this.bias;\n    const contributions = Object.keys(features).map(f => {\n      const w = this.weights[f] ?? 0;\n      const v = features[f] ?? 0;\n      const delta = w * v;\n      z += delta;\n      return { feature: f, value: v, weight: w, delta };\n    });\n    const s = 1 / (1 + Math.exp(-z));\n    const band = s < 0.33 ? 'low' : s < 0.66 ? 'medium' : s < 0.85 ? 'high' : 'critical';\n    return { score: s, band, contributions, window, computedAt: new Date().toISOString(), modelVersion: this.version };\n  }\n}\n"],"version":3}