{"file":"/Users/brianlong/Developer/summit/server/src/routes/n8n.ts","mappings":"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","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/routes/n8n.ts"],"sourcesContent":["import express, { Request, Response, NextFunction } from 'express';\nimport crypto from 'crypto';\nimport baseLogger from '../config/logger';\nimport { ProvenanceLedgerService } from '../services/provenance-ledger.js';\n\nconst logger = baseLogger.child({ name: 'route:n8n' });\nconst router = express.Router();\n\nconst secret = process.env.N8N_SIGNING_SECRET || '';\nconst allowedIps = (process.env.N8N_ALLOWED_IPS || '')\n  .split(',')\n  .map((s) => s.trim())\n  .filter(Boolean);\n\nfunction timingSafeEqual(a: string, b: string) {\n  try {\n    return crypto.timingSafeEqual(Buffer.from(a), Buffer.from(b));\n  } catch {\n    return false;\n  }\n}\n\nfunction verifySig(raw: string, sig: string) {\n  const mac = crypto.createHmac('sha256', secret).update(raw).digest('hex');\n  return timingSafeEqual(mac, sig || '');\n}\n\n// Self-contained raw-body route: ensure raw payload for signature verification\nrouter.post('/webhooks/n8n', express.raw({ type: '*/*', limit: '1mb' }), async (req: Request, res: Response) => {\n  if (!secret) return res.status(503).json({ ok: false, error: 'n8n disabled' });\n  if (allowedIps.length && !allowedIps.includes(req.ip)) {\n    return res.status(403).json({ ok: false, error: 'ip blocked' });\n  }\n\n  const sig = req.header('x-maestro-signature') || '';\n  const raw = Buffer.isBuffer((req as any).body)\n    ? (req as any).body.toString()\n    : (((req as any).rawBody as Buffer | undefined)?.toString() || JSON.stringify(req.body || {}));\n  (req as any).rawBody = raw;\n  if (!verifySig(raw, sig)) return res.status(401).json({ ok: false, error: 'bad signature' });\n\n  const provenance = ProvenanceLedgerService.getInstance();\n  let payload: any = {};\n  try { payload = JSON.parse(raw || '{}'); } catch { payload = {}; }\n  (req as any).body = payload;\n  const { runId, artifact, content, meta } = (payload || {}) as any;\n  if (!runId) return res.status(400).json({ ok: false, error: 'runId required' });\n\n  try {\n    await provenance.recordProvenanceEntry({\n      operation_type: 'N8N_CALLBACK',\n      actor_id: 'n8n',\n      metadata: { runId, artifact, meta, len: content ? JSON.stringify(content).length : 0 },\n    });\n  } catch (e) {\n    logger.warn({ err: e }, 'provenance record failed for N8N_CALLBACK');\n  }\n\n  return res.json({ ok: true });\n});\n\nexport default router;\n"],"version":3}