{"file":"/Users/brianlong/Developer/summit/server/tests/bulk-create.test.ts","mappings":"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","names":[],"sources":["/Users/brianlong/Developer/summit/server/tests/bulk-create.test.ts"],"sourcesContent":["const { crudResolvers: resolvers } = require('../src/graphql/resolvers/crudResolvers');\n\njest.mock('../src/config/database', () => {\n  const tx = {\n    run: jest.fn().mockResolvedValue({ records: [{ get: () => ({ properties: { id: 'id1', investigationId: 'inv1', fromEntity: { id: 'a' }, toEntity: { id: 'b' } } }) }] }),\n    commit: jest.fn(),\n    rollback: jest.fn(),\n  };\n  const session = { beginTransaction: () => tx, close: jest.fn() };\n  const pgClient = { query: jest.fn().mockResolvedValue({}), release: jest.fn() };\n  return {\n    getNeo4jDriver: () => ({ session: () => session }),\n    getPostgresPool: () => ({ connect: () => pgClient }),\n    getRedisClient: () => ({ smembers: jest.fn().mockResolvedValue([]), del: jest.fn(), get: jest.fn(), set: jest.fn(), sadd: jest.fn() }),\n  };\n});\n\ndescribe('Bulk mutations', () => {\n  const user = { id: 'u1', tenantId: 't1' };\n\n  test('createEntities returns array', async () => {\n    const inputs = [{ type: 'PERSON', label: 'E1', investigationId: 'inv1' }];\n    const res = await resolvers.Mutation.createEntities(null, { inputs }, { user });\n    expect(Array.isArray(res)).toBe(true);\n    expect(res).toHaveLength(1);\n  });\n\n  test('createRelationships returns array', async () => {\n    const inputs = [{ type: 'CONNECTED_TO', fromEntityId: 'a', toEntityId: 'b', investigationId: 'inv1' }];\n    const res = await resolvers.Mutation.createRelationships(null, { inputs }, { user });\n    expect(Array.isArray(res)).toBe(true);\n    expect(res).toHaveLength(1);\n  });\n});\n"],"version":3}