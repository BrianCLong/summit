{"file":"/Users/brianlong/Developer/summit/packages/crsp/src/index.ts","mappings":";;AAsBA,kDAGC;AAvBD,SAAS,QAAQ,CAAC,KAAe,EAAE,MAAqB;IACtD,IAAI,KAAK,GAAG,CAAC,CAAC;IAAC,IAAI,SAAS,GAAG,CAAC,CAAC;IACjC,uEAAuE;IACvE,KAAK,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,EAAC,CAAC;QAC3B,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,cAAc;YAAE,KAAK,IAAI,GAAG,CAAC;QACxD,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzD,SAAS,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,cAAc;IACnE,CAAC;IACD,IAAI,MAAM,CAAC,YAAY;QAAE,KAAK,IAAI,GAAG,CAAC;IACtC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;AAC9B,CAAC;AAED,SAAS,gBAAgB,CAAC,EAAmC;IAC3D,MAAM,CAAC,GAAe,EAAE,CAAC;IACzB,IAAI,EAAE,CAAC,KAAK,GAAG,IAAI;QAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAC,gBAAgB,EAAE,KAAK,EAAC,QAAQ,EAAE,SAAS,EAAC,yBAAyB,EAAE,CAAC,CAAC;IAC5G,IAAI,EAAE,CAAC,KAAK,GAAG,GAAG;QAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAC,cAAc,EAAE,KAAK,EAAC,MAAM,EAAE,SAAS,EAAC,2BAA2B,EAAE,CAAC,CAAC;IACzG,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,IAAI;QAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAC,YAAY,EAAE,KAAK,EAAC,CAAC,EAAE,SAAS,EAAC,iBAAiB,EAAE,CAAC,CAAC;IAC9F,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAgB,mBAAmB,CAAC,KAAe,EAAE,MAAqB;IACxE,MAAM,EAAE,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACnC,OAAO,EAAE,GAAG,EAAE,EAAE,SAAS,EAAE,gBAAgB,CAAC,EAAE,CAAC,EAAE,CAAC;AACpD,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/crsp/src/index.ts"],"sourcesContent":["import { RunTrace, StressProfile, ReplayResult, Sanction } from './types';\n\nfunction simulate(trace: RunTrace, stress: StressProfile){\n  let drift = 0; let costDelta = 0;\n  // crude model: fail some steps, enforce stricter policy implies replan\n  for (const s of trace.steps){\n    if (Math.random() < stress.apiFailureRate) drift += 0.1;\n    const cappedTokens = Math.min(s.tokens, stress.tokenCap);\n    costDelta += (cappedTokens - s.tokens) * 0.000002; // $ per token\n  }\n  if (stress.policyStrict) drift += 0.2;\n  return { drift, costDelta };\n}\n\nfunction proposeSanctions(rr:{drift:number; costDelta:number}): Sanction[] {\n  const s: Sanction[] = [];\n  if (rr.drift > 0.25) s.push({ type:'proof_required', value:'strict', rationale:'High drift under stress' });\n  if (rr.drift > 0.4) s.push({ type:'interstitial', value:'attn', rationale:'User interstitial advised' });\n  if (rr.costDelta < -0.05) s.push({ type:'rate_limit', value:5, rationale:'Cost spike risk' });\n  return s;\n}\n\nexport function replayWithSanctions(trace: RunTrace, stress: StressProfile): ReplayResult {\n  const rr = simulate(trace, stress);\n  return { ...rr, sanctions: proposeSanctions(rr) };\n}"],"version":3}