0818bd8155e3987a464f9790e1845c7a
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHypothesisStore = createHypothesisStore;
function createHypothesisStore() {
    const store = {
        hypotheses: [],
        addHypothesis(h) {
            store.hypotheses.push({ ...h, posterior: h.prior });
        },
        addEvidence(id, e) {
            const h = store.hypotheses.find((x) => x.id === id);
            if (!h)
                return;
            h.evidence.push(e);
            const odds = h.posterior / (1 - h.posterior);
            const updated = odds * e.weight;
            h.posterior = updated / (1 + updated);
        },
        addDissent(id, note) {
            const h = store.hypotheses.find((x) => x.id === id);
            if (h)
                h.dissent.push(note);
        },
    };
    return store;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L2NsaWVudC9zcmMvZmVhdHVyZXMvaHlwb3RoZXNlcy9zdG9yZS50cyIsIm1hcHBpbmdzIjoiOztBQXdCQSxzREFvQkM7QUFwQkQsU0FBZ0IscUJBQXFCO0lBQ25DLE1BQU0sS0FBSyxHQUFvQjtRQUM3QixVQUFVLEVBQUUsRUFBRTtRQUNkLGFBQWEsQ0FBQyxDQUFDO1lBQ2IsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUNELFdBQVcsQ0FBQyxFQUFFLEVBQUUsQ0FBQztZQUNmLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQyxDQUFDO2dCQUFFLE9BQU87WUFDZixDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuQixNQUFNLElBQUksR0FBRyxDQUFDLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM3QyxNQUFNLE9BQU8sR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztZQUNoQyxDQUFDLENBQUMsU0FBUyxHQUFHLE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQztRQUN4QyxDQUFDO1FBQ0QsVUFBVSxDQUFDLEVBQUUsRUFBRSxJQUFJO1lBQ2pCLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1lBQ3BELElBQUksQ0FBQztnQkFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixDQUFDO0tBQ0YsQ0FBQztJQUNGLE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvYnJpYW5sb25nL0RldmVsb3Blci9zdW1taXQvY2xpZW50L3NyYy9mZWF0dXJlcy9oeXBvdGhlc2VzL3N0b3JlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgRXZpZGVuY2Uge1xuICBpZDogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBjaXRlZDogYm9vbGVhbjtcbiAgd2VpZ2h0OiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHlwb3RoZXNpcyB7XG4gIGlkOiBzdHJpbmc7XG4gIHRleHQ6IHN0cmluZztcbiAgcHJpb3I6IG51bWJlcjtcbiAgZXZpZGVuY2U6IEV2aWRlbmNlW107XG4gIHBvc3RlcmlvcjogbnVtYmVyO1xuICByZXNpZHVhbFVua25vd25zOiBzdHJpbmdbXTtcbiAgZGlzc2VudDogc3RyaW5nW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHlwb3RoZXNpc1N0b3JlIHtcbiAgaHlwb3RoZXNlczogSHlwb3RoZXNpc1tdO1xuICBhZGRIeXBvdGhlc2lzOiAoaDogT21pdDxIeXBvdGhlc2lzLCAncG9zdGVyaW9yJz4pID0+IHZvaWQ7XG4gIGFkZEV2aWRlbmNlOiAoaWQ6IHN0cmluZywgZTogRXZpZGVuY2UpID0+IHZvaWQ7XG4gIGFkZERpc3NlbnQ6IChpZDogc3RyaW5nLCBub3RlOiBzdHJpbmcpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVIeXBvdGhlc2lzU3RvcmUoKTogSHlwb3RoZXNpc1N0b3JlIHtcbiAgY29uc3Qgc3RvcmU6IEh5cG90aGVzaXNTdG9yZSA9IHtcbiAgICBoeXBvdGhlc2VzOiBbXSxcbiAgICBhZGRIeXBvdGhlc2lzKGgpIHtcbiAgICAgIHN0b3JlLmh5cG90aGVzZXMucHVzaCh7IC4uLmgsIHBvc3RlcmlvcjogaC5wcmlvciB9KTtcbiAgICB9LFxuICAgIGFkZEV2aWRlbmNlKGlkLCBlKSB7XG4gICAgICBjb25zdCBoID0gc3RvcmUuaHlwb3RoZXNlcy5maW5kKCh4KSA9PiB4LmlkID09PSBpZCk7XG4gICAgICBpZiAoIWgpIHJldHVybjtcbiAgICAgIGguZXZpZGVuY2UucHVzaChlKTtcbiAgICAgIGNvbnN0IG9kZHMgPSBoLnBvc3RlcmlvciAvICgxIC0gaC5wb3N0ZXJpb3IpO1xuICAgICAgY29uc3QgdXBkYXRlZCA9IG9kZHMgKiBlLndlaWdodDtcbiAgICAgIGgucG9zdGVyaW9yID0gdXBkYXRlZCAvICgxICsgdXBkYXRlZCk7XG4gICAgfSxcbiAgICBhZGREaXNzZW50KGlkLCBub3RlKSB7XG4gICAgICBjb25zdCBoID0gc3RvcmUuaHlwb3RoZXNlcy5maW5kKCh4KSA9PiB4LmlkID09PSBpZCk7XG4gICAgICBpZiAoaCkgaC5kaXNzZW50LnB1c2gobm90ZSk7XG4gICAgfSxcbiAgfTtcbiAgcmV0dXJuIHN0b3JlO1xufVxuIl0sInZlcnNpb24iOjN9