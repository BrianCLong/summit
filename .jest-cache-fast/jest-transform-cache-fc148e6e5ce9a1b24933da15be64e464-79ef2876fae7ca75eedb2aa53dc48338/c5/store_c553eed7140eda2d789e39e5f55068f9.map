{"file":"/Users/brianlong/Developer/summit/client/src/features/hypotheses/store.ts","mappings":";;AAwBA,sDAoBC;AApBD,SAAgB,qBAAqB;IACnC,MAAM,KAAK,GAAoB;QAC7B,UAAU,EAAE,EAAE;QACd,aAAa,CAAC,CAAC;YACb,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;QACtD,CAAC;QACD,WAAW,CAAC,EAAE,EAAE,CAAC;YACf,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YACpD,IAAI,CAAC,CAAC;gBAAE,OAAO;YACf,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,GAAG,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;YAC7C,MAAM,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC;YAChC,CAAC,CAAC,SAAS,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxC,CAAC;QACD,UAAU,CAAC,EAAE,EAAE,IAAI;YACjB,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YACpD,IAAI,CAAC;gBAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;KACF,CAAC;IACF,OAAO,KAAK,CAAC;AACf,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/client/src/features/hypotheses/store.ts"],"sourcesContent":["export interface Evidence {\n  id: string;\n  description: string;\n  cited: boolean;\n  weight: number;\n}\n\nexport interface Hypothesis {\n  id: string;\n  text: string;\n  prior: number;\n  evidence: Evidence[];\n  posterior: number;\n  residualUnknowns: string[];\n  dissent: string[];\n}\n\nexport interface HypothesisStore {\n  hypotheses: Hypothesis[];\n  addHypothesis: (h: Omit<Hypothesis, 'posterior'>) => void;\n  addEvidence: (id: string, e: Evidence) => void;\n  addDissent: (id: string, note: string) => void;\n}\n\nexport function createHypothesisStore(): HypothesisStore {\n  const store: HypothesisStore = {\n    hypotheses: [],\n    addHypothesis(h) {\n      store.hypotheses.push({ ...h, posterior: h.prior });\n    },\n    addEvidence(id, e) {\n      const h = store.hypotheses.find((x) => x.id === id);\n      if (!h) return;\n      h.evidence.push(e);\n      const odds = h.posterior / (1 - h.posterior);\n      const updated = odds * e.weight;\n      h.posterior = updated / (1 + updated);\n    },\n    addDissent(id, note) {\n      const h = store.hypotheses.find((x) => x.id === id);\n      if (h) h.dissent.push(note);\n    },\n  };\n  return store;\n}\n"],"version":3}