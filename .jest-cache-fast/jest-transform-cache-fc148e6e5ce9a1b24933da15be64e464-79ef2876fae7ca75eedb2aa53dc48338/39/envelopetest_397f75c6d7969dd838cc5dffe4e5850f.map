{"file":"/Users/brianlong/Developer/summit/packages/common-types/src/envelope.test.ts","mappings":";;AAAA,2CAAqD;AACrD,yCAA4C;AAE5C,IAAA,kBAAQ,EAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,IAAA,YAAE,EAAC,4BAA4B,EAAE,GAAG,EAAE;QACpC,MAAM,MAAM,GAAG,yBAAc,CAAC,KAAK,CAAC;YAClC,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;YACxB,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACpC,IAAI,EAAE,KAAK;YACX,YAAY,EAAE,EAAE;YAChB,UAAU,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;SAC1B,CAAC,CAAC;QACH,IAAA,gBAAM,EAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/common-types/src/envelope.test.ts"],"sourcesContent":["import { describe, expect, it } from '@jest/globals';\nimport { envelopeSchema } from './types.js';\n\ndescribe('envelopeSchema', () => {\n  it('validates a basic envelope', () => {\n    const result = envelopeSchema.parse({\n      tenantId: 't1',\n      source: { name: 'test' },\n      kind: 'ENTITY',\n      type: 'Person',\n      payload: {},\n      observedAt: new Date().toISOString(),\n      hash: 'abc',\n      policyLabels: [],\n      provenance: { chain: [] },\n    });\n    expect(result.tenantId).toBe('t1');\n  });\n});\n"],"version":3}