{"file":"/Users/brianlong/Developer/summit/server/src/hypotheses/index.ts","mappings":";;AAkBA,wCAOC;AAED,sCAIC;AAED,gCAEC;AAED,wDAGC;AAtBD,SAAgB,cAAc,CAAC,KAAa,EAAE,QAAoB;IAChE,IAAI,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/B,KAAK,MAAM,CAAC,IAAI,QAAQ,EAAE,CAAC;QACzB,MAAM,MAAM,GAAG,CAAC,CAAC,yBAAyB,GAAG,CAAC,CAAC,0BAA0B,CAAC;QAC1E,IAAI,IAAI,MAAM,CAAC;IACjB,CAAC;IACD,OAAO,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AAC3B,CAAC;AAED,SAAgB,aAAa,CAAC,CAAa,EAAE,CAAW;IACtD,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACpC,MAAM,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACpD,OAAO,EAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;AACvC,CAAC;AAED,SAAgB,UAAU,CAAC,CAAa,EAAE,IAAY;IACpD,OAAO,EAAE,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;AACjD,CAAC;AAED,SAAgB,sBAAsB,CAAC,CAAa;IAClD,MAAM,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACnD,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;AAC/D,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/hypotheses/index.ts"],"sourcesContent":["export interface Evidence {\n  id: string;\n  description: string;\n  likelihoodGivenHypothesis: number; // P(E|H)\n  likelihoodGivenAlternative: number; // P(E|~H)\n  cited: boolean;\n}\n\nexport interface Hypothesis {\n  id: string;\n  statement: string;\n  prior: number; // P(H)\n  evidence: Evidence[];\n  posterior: number; // updated probability\n  residualUnknowns: string[];\n  dissent: string[];\n}\n\nexport function bayesianUpdate(prior: number, evidence: Evidence[]): number {\n  let odds = prior / (1 - prior);\n  for (const e of evidence) {\n    const weight = e.likelihoodGivenHypothesis / e.likelihoodGivenAlternative;\n    odds *= weight;\n  }\n  return odds / (1 + odds);\n}\n\nexport function applyEvidence(h: Hypothesis, e: Evidence): Hypothesis {\n  const evidence = [...h.evidence, e];\n  const posterior = bayesianUpdate(h.prior, evidence);\n  return { ...h, evidence, posterior };\n}\n\nexport function addDissent(h: Hypothesis, note: string): Hypothesis {\n  return { ...h, dissent: [...h.dissent, note] };\n}\n\nexport function missingEvidencePrompts(h: Hypothesis): string[] {\n  const uncited = h.evidence.filter((e) => !e.cited);\n  return uncited.map((e) => `Evidence ${e.id} lacks citation`);\n}\n"],"version":3}