{"file":"/Users/brianlong/Developer/summit/server/src/conductor/__tests__/router.test.ts","mappings":"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","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/conductor/__tests__/router.test.ts"],"sourcesContent":["// Tests for MoE Router\n// Comprehensive test suite for routing decisions and feature extraction\n\nimport { MoERouter } from '../router';\nimport { ConductInput } from '../types';\n\ndescribe('MoERouter', () => {\n  let router: MoERouter;\n\n  beforeEach(() => {\n    router = new MoERouter();\n  });\n\n  describe('route', () => {\n    test('routes graph tasks to GRAPH_TOOL', () => {\n      const input: ConductInput = {\n        task: 'Run Cypher: MATCH (n)-[r]->(m) RETURN count(*)',\n        sensitivity: 'low',\n        maxLatencyMs: 4000,\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('GRAPH_TOOL');\n      expect(decision.reason).toContain('graph-related keywords');\n      expect(decision.confidence).toBeGreaterThan(0.5);\n    });\n\n    test('routes file operations to FILES_TOOL', () => {\n      const input: ConductInput = {\n        task: \"Search for files containing 'classified' in /documents\",\n        sensitivity: 'low',\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('FILES_TOOL');\n      expect(decision.reason).toContain('file operations required');\n    });\n\n    test('routes OSINT tasks to OSINT_TOOL', () => {\n      const input: ConductInput = {\n        task: 'Search web for threat intelligence on domain example.com',\n        sensitivity: 'low',\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('OSINT_TOOL');\n      expect(decision.reason).toContain('OSINT/web research');\n    });\n\n    test('routes export requests to EXPORT_TOOL', () => {\n      const input: ConductInput = {\n        task: 'Generate PDF report for investigation case-123',\n        sensitivity: 'low',\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('EXPORT_TOOL');\n      expect(decision.reason).toContain('export/report generation');\n    });\n\n    test('routes simple queries to LLM_LIGHT for speed', () => {\n      const input: ConductInput = {\n        task: 'What is the capital of France?',\n        sensitivity: 'low',\n        maxLatencyMs: 1000,\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('LLM_LIGHT');\n      expect(decision.reason).toContain('tight latency');\n    });\n\n    test('routes complex queries to LLM_HEAVY', () => {\n      const input: ConductInput = {\n        task: 'Analyze the legal implications of cross-border data sharing in intelligence operations, considering GDPR compliance, national security exemptions, and bilateral intelligence agreements. Provide a comprehensive framework for risk assessment and mitigation strategies for a multi-jurisdictional investigation involving sensitive personal data.',\n        sensitivity: 'low',\n        maxLatencyMs: 10000,\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('LLM_HEAVY');\n      expect(decision.reason).toContain('complex');\n    });\n\n    test('routes investigation context queries to RAG_TOOL', () => {\n      const input: ConductInput = {\n        task: 'What connections exist between entity A and entity B?',\n        sensitivity: 'low',\n        investigationId: 'inv-123',\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('RAG_TOOL');\n      expect(decision.reason).toContain('investigation context');\n    });\n\n    test('falls back to LLM_LIGHT when no specific tool matches', () => {\n      const input: ConductInput = {\n        task: 'Random question without specific keywords',\n        sensitivity: 'low',\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('LLM_LIGHT');\n      expect(decision.reason).toContain('Fallback');\n    });\n  });\n\n  describe('feature extraction', () => {\n    test('detects graph keywords correctly', () => {\n      const inputs = [\n        'Execute cypher query',\n        'Find pagerank scores',\n        'Calculate betweenness centrality',\n        'Show shortest path between nodes',\n        'Return all relationships',\n      ];\n\n      inputs.forEach((task) => {\n        const decision = router.route({ task, sensitivity: 'low' });\n        expect(decision.features.hasGraphKeywords).toBe(true);\n      });\n    });\n\n    test('detects file keywords correctly', () => {\n      const inputs = [\n        'Read document file',\n        'Upload PDF attachment',\n        'Search files for keyword',\n        'Download CSV data',\n      ];\n\n      inputs.forEach((task) => {\n        const decision = router.route({ task, sensitivity: 'low' });\n        expect(decision.features.hasFileKeywords).toBe(true);\n      });\n    });\n\n    test('detects OSINT keywords correctly', () => {\n      const inputs = [\n        'Search web for information',\n        'Fetch URL content',\n        'Scrape social media',\n        'Check domain whois',\n      ];\n\n      inputs.forEach((task) => {\n        const decision = router.route({ task, sensitivity: 'low' });\n        expect(decision.features.hasOSINTKeywords).toBe(true);\n      });\n    });\n\n    test('calculates complexity score correctly', () => {\n      const simpleTask = 'Hello';\n      const complexTask =\n        'Analyze comprehensive forensic investigation legal policy regulatory framework advanced multi-step detailed complex deep';\n\n      const simpleDecision = router.route({ task: simpleTask, sensitivity: 'low' });\n      const complexDecision = router.route({ task: complexTask, sensitivity: 'low' });\n\n      expect(simpleDecision.features.complexityScore).toBeLessThan(\n        complexDecision.features.complexityScore,\n      );\n      expect(complexDecision.features.complexityScore).toBeGreaterThan(5);\n    });\n  });\n\n  describe('security constraints', () => {\n    test('respects sensitivity levels in routing', () => {\n      const secretInput: ConductInput = {\n        task: 'Process classified intelligence data',\n        sensitivity: 'secret',\n      };\n\n      const decision = router.route(secretInput);\n      expect(decision.features.sensitivityLevel).toBe('secret');\n    });\n\n    test('considers user context in routing', () => {\n      const input: ConductInput = {\n        task: 'Administrative query',\n        sensitivity: 'low',\n        userContext: {\n          role: 'admin',\n          scopes: ['graph:read', 'files:read'],\n        },\n      };\n\n      const decision = router.route(input);\n      expect(decision.features.userRole).toBe('admin');\n    });\n  });\n\n  describe('routing statistics', () => {\n    test('tracks routing decisions', () => {\n      const inputs = [\n        { task: 'MATCH (n) RETURN n', sensitivity: 'low' as const },\n        { task: 'Search files', sensitivity: 'low' as const },\n        { task: 'Simple question', sensitivity: 'low' as const },\n      ];\n\n      inputs.forEach((input) => router.route(input));\n\n      const stats = router.getRoutingStats();\n      expect(stats.totalDecisions).toBe(3);\n      expect(Object.keys(stats.expertDistribution)).toContain('GRAPH_TOOL');\n      expect(Object.keys(stats.expertDistribution)).toContain('FILES_TOOL');\n    });\n\n    test('calculates average confidence correctly', () => {\n      const input: ConductInput = {\n        task: 'MATCH (n) RETURN count(n)',\n        sensitivity: 'low',\n      };\n\n      router.route(input);\n      router.route(input);\n\n      const stats = router.getRoutingStats();\n      expect(stats.avgConfidence).toBeGreaterThan(0);\n      expect(stats.avgConfidence).toBeLessThanOrEqual(1);\n    });\n  });\n\n  describe('edge cases', () => {\n    test('handles empty task', () => {\n      const input: ConductInput = {\n        task: '',\n        sensitivity: 'low',\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBeDefined();\n      expect(decision.reason).toBeDefined();\n    });\n\n    test('handles very long tasks', () => {\n      const longTask = 'A'.repeat(10000);\n      const input: ConductInput = {\n        task: longTask,\n        sensitivity: 'low',\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('LLM_HEAVY'); // Should route to heavy model\n      expect(decision.features.taskLength).toBe(10000);\n    });\n\n    test('handles tight latency constraints', () => {\n      const input: ConductInput = {\n        task: 'Complex analysis that would normally go to heavy model',\n        sensitivity: 'low',\n        maxLatencyMs: 500,\n      };\n\n      const decision = router.route(input);\n      expect(decision.expert).toBe('LLM_LIGHT'); // Should prefer speed\n    });\n\n    test('handles multiple keyword matches', () => {\n      const input: ConductInput = {\n        task: 'Search files for cypher queries and export results to PDF',\n        sensitivity: 'low',\n      };\n\n      const decision = router.route(input);\n      // Should pick the first matching expert (in priority order)\n      expect(['GRAPH_TOOL', 'FILES_TOOL', 'EXPORT_TOOL']).toContain(decision.expert);\n      expect(decision.alternatives.length).toBeGreaterThan(0);\n    });\n  });\n});\n"],"version":3}