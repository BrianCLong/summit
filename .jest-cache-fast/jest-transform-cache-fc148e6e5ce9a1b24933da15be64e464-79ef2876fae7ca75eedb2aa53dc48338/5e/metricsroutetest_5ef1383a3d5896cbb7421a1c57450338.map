{"file":"/Users/brianlong/Developer/summit/server/tests/metrics.route.test.ts","mappings":";;AAAA,6DAA6D;AAC7D,2CAA8C;AAC9C,kDAA6D;AAC7D,4EAAsE;AACtE,oEAA2D;AAC3D,wDAA2E;AAE3E,IAAI,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;IACvD,+DAA+D;IAC/D,MAAM,MAAM,GAAG,IAAA,6BAAoB,EAAC;QAClC,QAAQ,EAAE,aAAa,CAAC;;;;KAIvB;QACD,SAAS,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE;KACzC,CAAC,CAAC;IACH,MAAM,MAAM,GAAG,IAAI,qBAAY,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,IAAA,sCAAgB,GAAE,CAAC,EAAE,CAAC,CAAC;IAC3E,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,MAAM,CAAC,gBAAgB,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC,CAAC;IAC7E,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAEpB,sBAAsB;IACtB,2BAAS,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAE/C,oCAAoC;IACpC,MAAM,WAAW,GAAG,IAAA,8BAAkB,GAAE,CAAC;IACzC,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IAC5C,MAAM,IAAI,GAAG,MAAM,IAAA,uBAAW,GAAE,CAAC;IACjC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IAC7C,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/tests/metrics.route.test.ts"],"sourcesContent":["// Route test adapted to restricted CI: avoid opening sockets\nimport { ApolloServer } from '@apollo/server';\nimport { makeExecutableSchema } from '@graphql-tools/schema';\nimport { apolloPromPlugin } from '../src/metrics/apolloPromPlugin.js';\nimport { cacheHits } from '../src/metrics/cacheMetrics.js';\nimport { metricsText, metricsContentType } from '../src/metrics/expose.js';\n\ntest('/metrics exposes apollo_* and cache_*', async () => {\n  // Generate metrics by executing a couple of GraphQL operations\n  const schema = makeExecutableSchema({\n    typeDefs: /* GraphQL */ `\n      type Query {\n        ok: String!\n      }\n    `,\n    resolvers: { Query: { ok: () => 'OK' } },\n  });\n  const apollo = new ApolloServer({ schema, plugins: [apolloPromPlugin()] });\n  await apollo.start();\n  await apollo.executeOperation({ query: '{ ok }', operationName: 'OkQuery' });\n  await apollo.stop();\n\n  // Touch cache metrics\n  cacheHits.labels('local', 'get', 'test').inc();\n\n  // Directly pull merged metrics text\n  const contentType = metricsContentType();\n  expect(contentType).toContain('text/plain');\n  const body = await metricsText();\n  expect(body).toMatch(/apollo_request_total/);\n  expect(body).toMatch(/cache_hits_total/);\n});\n"],"version":3}