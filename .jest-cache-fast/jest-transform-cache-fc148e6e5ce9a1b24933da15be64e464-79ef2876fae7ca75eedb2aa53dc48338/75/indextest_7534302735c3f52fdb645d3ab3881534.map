{"file":"/Users/brianlong/Developer/summit/packages/sdk/secrets-js/src/index.test.ts","mappings":";;;;;AAGA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAHnB,kDAA0B;AAC1B,yCAAuC;AAIvC,MAAM,UAAU,GAAG,eAAK,CAAC,IAAiB,CAAC;AAE3C,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE;IACzB,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,UAAU,CAAC,qBAAqB,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QAE7D,MAAM,MAAM,GAAG,MAAM,IAAA,oBAAS,EAAoB,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAExE,MAAM,CAAC,UAAU,CAAC,CAAC,oBAAoB,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QAC9E,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/sdk/secrets-js/src/index.test.ts"],"sourcesContent":["import axios from 'axios';\nimport { getSecret } from './index.js';\n\njest.mock('axios');\n\nconst mockedPost = axios.post as jest.Mock;\n\ndescribe('getSecret', () => {\n  it('requests secret token', async () => {\n    mockedPost.mockResolvedValueOnce({ data: { token: 'abc' } });\n\n    const result = await getSecret<{ token: string }>({ path: 'db/creds' });\n\n    expect(mockedPost).toHaveBeenCalledWith('/secrets/get', { path: 'db/creds' });\n    expect(result).toEqual({ token: 'abc' });\n  });\n});\n"],"version":3}