{"file":"/Users/brianlong/Developer/summit/server/src/cases/legal-hold-guard.ts","mappings":";;;AAAO,MAAM,YAAY,GAAG,KAAK,EAAE,GAAQ,EAAE,KAAU,EAAE,EAAE;IACzD,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAa,CAAC;IACjC,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1D,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC;QACjB,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC;IAChF,CAAC;AACH,CAAC,CAAC;AANW,QAAA,YAAY,gBAMvB","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/cases/legal-hold-guard.ts"],"sourcesContent":["export const denyWhenHold = async (req: any, reply: any) => {\n  const { id } = req.params as any;\n  const c = await req.db.case.findUnique({ where: { id } });\n  if (c?.legalHold) {\n    return reply.code(423).send({ error: 'Legal hold active: operation locked' });\n  }\n};\n"],"version":3}