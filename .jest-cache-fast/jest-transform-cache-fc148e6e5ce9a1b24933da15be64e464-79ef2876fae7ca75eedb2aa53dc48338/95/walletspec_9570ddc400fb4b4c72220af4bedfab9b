89592cb1dab49336911c9112653575c3
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const wallet_1 = require("../src/wallet");
const crypto_1 = require("crypto");
test('selective disclosure proofs verify', () => {
    const { privateKey, publicKey } = (0, crypto_1.generateKeyPairSync)('rsa', { modulusLength: 2048 });
    const steps = Array.from({ length: 5 }, (_, i) => ({
        id: `s${i}`, tool: 'graph.query', startedAt: new Date().toISOString(), endedAt: new Date().toISOString(),
        inputHash: 'i' + i, outputHash: 'o' + i, policyHash: 'p' + i, modelHash: 'm' + i
    }));
    const { manifest, steps: S, leaves } = (0, wallet_1.buildWallet)('run1', 'case1', steps, privateKey.export({ type: 'pkcs1', format: 'pem' }).toString());
    const bundle = (0, wallet_1.disclose)(['s1', 's3'], manifest, S, leaves);
    const ok = (0, wallet_1.verifyDisclosure)(bundle, publicKey.export({ type: 'pkcs1', format: 'pem' }).toString());
    expect(ok).toBe(true);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3BhY2thZ2VzL3Byb3YtbGVkZ2VyL3Rlc3RzL3dhbGxldC5zcGVjLnRzIiwibWFwcGluZ3MiOiI7O0FBQUEsMENBQXdFO0FBRXhFLG1DQUE2QztBQUU3QyxJQUFJLENBQUMsb0NBQW9DLEVBQUUsR0FBRyxFQUFFO0lBQzlDLE1BQU0sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEdBQUcsSUFBQSw0QkFBbUIsRUFBQyxLQUFLLEVBQUUsRUFBRSxhQUFhLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUN0RixNQUFNLEtBQUssR0FBaUIsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsRUFBRSxDQUFBLENBQUM7UUFDekQsRUFBRSxFQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFDLGFBQWEsRUFBRSxTQUFTLEVBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRSxPQUFPLEVBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUU7UUFDcEcsU0FBUyxFQUFDLEdBQUcsR0FBQyxDQUFDLEVBQUUsVUFBVSxFQUFDLEdBQUcsR0FBQyxDQUFDLEVBQUUsVUFBVSxFQUFDLEdBQUcsR0FBQyxDQUFDLEVBQUUsU0FBUyxFQUFDLEdBQUcsR0FBQyxDQUFDO0tBQ3JFLENBQUMsQ0FBQyxDQUFDO0lBQ0osTUFBTSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUEsb0JBQVcsRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ3BJLE1BQU0sTUFBTSxHQUFHLElBQUEsaUJBQVEsRUFBQyxDQUFDLElBQUksRUFBQyxJQUFJLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzFELE1BQU0sRUFBRSxHQUFHLElBQUEseUJBQWdCLEVBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLE1BQU0sRUFBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDOUYsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN4QixDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvYnJpYW5sb25nL0RldmVsb3Blci9zdW1taXQvcGFja2FnZXMvcHJvdi1sZWRnZXIvdGVzdHMvd2FsbGV0LnNwZWMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnVpbGRXYWxsZXQsIGRpc2Nsb3NlLCB2ZXJpZnlEaXNjbG9zdXJlIH0gZnJvbSAnLi4vc3JjL3dhbGxldCc7XG5pbXBvcnQgeyBTdGVwQ29tbWl0IH0gZnJvbSAnLi4vc3JjL3R5cGVzJztcbmltcG9ydCB7IGdlbmVyYXRlS2V5UGFpclN5bmMgfSBmcm9tICdjcnlwdG8nO1xuXG50ZXN0KCdzZWxlY3RpdmUgZGlzY2xvc3VyZSBwcm9vZnMgdmVyaWZ5JywgKCkgPT4ge1xuICBjb25zdCB7IHByaXZhdGVLZXksIHB1YmxpY0tleSB9ID0gZ2VuZXJhdGVLZXlQYWlyU3luYygncnNhJywgeyBtb2R1bHVzTGVuZ3RoOiAyMDQ4IH0pO1xuICBjb25zdCBzdGVwczogU3RlcENvbW1pdFtdID0gQXJyYXkuZnJvbSh7bGVuZ3RoOjV9LCAoXyxpKT0+KHtcbiAgICBpZDpgcyR7aX1gLCB0b29sOidncmFwaC5xdWVyeScsIHN0YXJ0ZWRBdDpuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksIGVuZGVkQXQ6bmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgIGlucHV0SGFzaDonaScraSwgb3V0cHV0SGFzaDonbycraSwgcG9saWN5SGFzaDoncCcraSwgbW9kZWxIYXNoOidtJytpXG4gIH0pKTtcbiAgY29uc3QgeyBtYW5pZmVzdCwgc3RlcHM6IFMsIGxlYXZlcyB9ID0gYnVpbGRXYWxsZXQoJ3J1bjEnLCdjYXNlMScsc3RlcHMsIHByaXZhdGVLZXkuZXhwb3J0KHt0eXBlOidwa2NzMScsZm9ybWF0OidwZW0nfSkudG9TdHJpbmcoKSk7XG4gIGNvbnN0IGJ1bmRsZSA9IGRpc2Nsb3NlKFsnczEnLCdzMyddLCBtYW5pZmVzdCwgUywgbGVhdmVzKTtcbiAgY29uc3Qgb2sgPSB2ZXJpZnlEaXNjbG9zdXJlKGJ1bmRsZSwgcHVibGljS2V5LmV4cG9ydCh7dHlwZToncGtjczEnLGZvcm1hdDoncGVtJ30pLnRvU3RyaW5nKCkpO1xuICBleHBlY3Qob2spLnRvQmUodHJ1ZSk7XG59KTsiXSwidmVyc2lvbiI6M30=