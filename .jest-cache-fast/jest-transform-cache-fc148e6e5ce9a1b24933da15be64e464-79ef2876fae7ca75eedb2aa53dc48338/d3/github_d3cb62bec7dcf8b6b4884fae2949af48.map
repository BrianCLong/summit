{"file":"/Users/brianlong/Developer/summit/packages/maestroflow/src/transpile/github.ts","mappings":";;AACA,4BAqBC;AArBD,SAAgB,QAAQ,CAAC,IAAS;IAChC,MAAM,IAAI,GAAO,EAAE,CAAC;IACpB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA,EAAE;QACpB,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,KAAG,OAAO,CAAC,CAAA,CAAC,CAAA;YAC/B,EAAE,IAAI,EAAE,qBAAqB,EAAE;YAC/B,EAAE,IAAI,EAAE,6BAA6B,EAAE;YACvC,EAAE,GAAG,EAAE,0CAA0C,EAAE;SACpD,CAAA,CAAC;YACF,CAAC,CAAC,CAAC,IAAI,KAAG,MAAM,CAAC,CAAA,CAAC,CAAA;gBAChB,EAAE,GAAG,EAAE,6BAA6B,EAAE;gBACtC,EAAE,GAAG,EAAE,qDAAqD,EAAE;aAC/D,CAAA,CAAC;gBACF,CAAC,CAAC,CAAC,IAAI,KAAG,QAAQ,CAAC,CAAA,CAAC,CAAA;oBAClB,EAAE,IAAI,EAAE,mCAAmC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,0CAA0C,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,4DAA4D,EAAE,EAAE;oBAC5L,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE;iBACjG,CAAA,CAAC,CAAA,CAAC,EAAE,GAAG,EAAC,aAAa,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,SAAS,EAAC,eAAe,EAAE,KAAK,EAAE,CAAC;IACpD,CAAC,CAAC,CAAC;IACH,uBAAuB;IACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA,EAAE,GAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAE,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjG,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;AACtD,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/maestroflow/src/transpile/github.ts"],"sourcesContent":["import { Flow } from \"./types\";\nexport function toGitHub(flow:Flow){\n  const jobs:any = {};\n  flow.nodes.forEach(n=>{\n    const steps = (n.type===\"build\")?[\n      { uses: \"actions/checkout@v4\" },\n      { uses: \".github/actions/setup-turbo\" },\n      { run: \"pnpm turbo run build --filter=...[HEAD^]\" }\n    ]:\n    (n.type===\"test\")?[\n      { run: \"node tools/ci/tia_select.ts\" },\n      { run: \"npx jest --ci --runTestsByPath $(cat tia-tests.txt)\" }\n    ]:\n    (n.type===\"deploy\")?[\n      { uses: \".github/actions/docker-build-push\", with: { image: \"ghcr.io/${{ github.repository }}/maestro\", context: \".\", tags: \"ghcr.io/${{ github.repository }}/maestro:${{ github.sha }}\" } },\n      { uses: \".github/actions/helm-deploy\", with: { chart: \"charts/maestro\", namespace: \"maestro\" } }\n    ]:[{ run:\"echo custom\" }];\n    jobs[n.id] = { \"runs-on\":\"ubuntu-latest\", steps };\n  });\n  // add needs from edges\n  flow.edges.forEach(e=>{ jobs[e.to].needs = [...new Set([...(jobs[e.to].needs||[]), e.from])]; });\n  return { name: flow.name, on: flow.triggers, jobs };\n}"],"version":3}