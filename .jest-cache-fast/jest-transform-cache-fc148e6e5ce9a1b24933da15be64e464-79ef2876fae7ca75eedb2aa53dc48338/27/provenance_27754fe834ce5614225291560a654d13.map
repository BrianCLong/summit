{"file":"/Users/brianlong/Developer/summit/packages/shared/provenance.ts","mappings":";;AAYA,wDAWC;AAvBD,mCAAgD;AAUhD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,YAAY,CAAC;AAE7D,SAAgB,sBAAsB,CACpC,IAAqB,EACrB,SAAS,GAAG,SAAS,EACrB,OAAO,GAAG,GAAG,EACb,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;IAEpC,MAAM,IAAI,GAAG,IAAA,mBAAU,EAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC7D,MAAM,SAAS,GAAG,IAAA,mBAAU,EAAC,QAAQ,EAAE,MAAM,CAAC;SAC3C,MAAM,CAAC,GAAG,IAAI,IAAI,SAAS,IAAI,OAAO,IAAI,SAAS,EAAE,CAAC;SACtD,MAAM,CAAC,KAAK,CAAC,CAAC;IACjB,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;AACvE,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/shared/provenance.ts"],"sourcesContent":["import { createHash, createHmac } from 'crypto';\n\nexport interface ProvenanceRecord {\n  inputHash: string;\n  algorithm: string;\n  version: string;\n  timestamp: string;\n  signature: string;\n}\n\nconst SECRET = process.env.PROVENANCE_SECRET || 'dev-secret';\n\nexport function createProvenanceRecord(\n  data: Buffer | string,\n  algorithm = 'SHA-256',\n  version = '1',\n  timestamp = new Date().toISOString(),\n): ProvenanceRecord {\n  const hash = createHash('sha256').update(data).digest('hex');\n  const signature = createHmac('sha256', SECRET)\n    .update(`${hash}|${algorithm}|${version}|${timestamp}`)\n    .digest('hex');\n  return { inputHash: hash, algorithm, version, timestamp, signature };\n}\n"],"version":3}