{"file":"/Users/brianlong/Developer/summit/server/tests/graphAnalytics.resolvers.test.ts","mappings":"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","names":[],"sources":["/Users/brianlong/Developer/summit/server/tests/graphAnalytics.resolvers.test.ts"],"sourcesContent":["import graphAnalyticsResolvers = require('../src/graphql/resolvers.graphAnalytics');\n\ndescribe('graph analytics GraphQL resolvers', () => {\n  const baseUser = { id: 'analyst-1', role: 'ANALYST' };\n\n  it('delegates to the service for PageRank', async () => {\n    const calculatePageRank = jest.fn().mockResolvedValue([\n      { nodeId: 'n1', label: 'Node 1', score: 0.42 },\n    ]);\n    const context = {\n      user: baseUser,\n      services: {\n        graphAnalytics: {\n          calculatePageRank,\n          detectCommunities: jest.fn(),\n        },\n      },\n    } as any;\n\n    const result = await graphAnalyticsResolvers.Query.graphPageRank(\n      null,\n      { limit: 25, forceRefresh: true },\n      context,\n    );\n\n    expect(calculatePageRank).toHaveBeenCalledWith(\n      expect.objectContaining({ limit: 25, forceRefresh: true }),\n    );\n    expect(result).toEqual([\n      expect.objectContaining({ nodeId: 'n1', score: 0.42, pageRank: 0.42 }),\n    ]);\n  });\n\n  it('delegates to the service for community detection', async () => {\n    const detectCommunities = jest.fn().mockResolvedValue([\n      { communityId: 7, size: 12, algorithm: 'LOUVAIN', nodes: [{ nodeId: 'n1', label: 'Node 1' }] },\n    ]);\n    const context = {\n      user: baseUser,\n      services: {\n        graphAnalytics: {\n          calculatePageRank: jest.fn(),\n          detectCommunities,\n        },\n      },\n    } as any;\n\n    const result = await graphAnalyticsResolvers.Query.graphCommunities(\n      null,\n      { limit: 10, algorithm: 'LABEL_PROPAGATION' },\n      context,\n    );\n\n    expect(detectCommunities).toHaveBeenCalledWith(\n      expect.objectContaining({ limit: 10, algorithm: 'LABEL_PROPAGATION' }),\n    );\n    expect(result).toEqual([\n      expect.objectContaining({ communityId: 7, size: 12, nodes: [expect.any(Object)] }),\n    ]);\n  });\n\n  it('throws when the user is missing', async () => {\n    await expect(\n      graphAnalyticsResolvers.Query.graphPageRank(null, { limit: 5 }, { services: {} } as any),\n    ).rejects.toThrow('Not authenticated');\n  });\n\n  it('throws when the user lacks the required role', async () => {\n    const context = {\n      user: { id: 'viewer', role: 'VIEWER' },\n      services: {\n        graphAnalytics: {\n          calculatePageRank: jest.fn(),\n          detectCommunities: jest.fn(),\n        },\n      },\n    } as any;\n\n    await expect(\n      graphAnalyticsResolvers.Query.graphCommunities(null, { limit: 1 }, context),\n    ).rejects.toThrow('Forbidden');\n  });\n});\n"],"version":3}