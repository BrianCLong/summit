{"file":"/Users/brianlong/Developer/summit/client/src/components/ai-enhanced/EnhancedAIAssistant.tsx","mappings":"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","names":[],"sources":["/Users/brianlong/Developer/summit/client/src/components/ai-enhanced/EnhancedAIAssistant.tsx"],"sourcesContent":["/**\n * Enhanced AI Assistant - Testable Version\n * Advanced AI interface for IntelGraph with conversation capabilities\n */\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  IconButton,\n  Avatar,\n  Chip,\n  Stack,\n  Alert,\n  Button,\n  Switch,\n  FormControlLabel,\n} from '@mui/material';\nimport {\n  Send,\n  SmartToy,\n  Person,\n  ContentCopy,\n  ThumbUp,\n  ThumbDown,\n  Settings,\n  Mic,\n  MicOff,\n} from '@mui/icons-material';\nimport { useHoldToTalk } from './hooks/useHoldToTalk'; // Correct relative path\n\n// Types\ninterface Message {\n  id: string;\n  type: 'user' | 'assistant' | 'system';\n  content: string;\n  timestamp: Date;\n  metadata?: {\n    confidence?: number;\n    sources?: string[];\n  };\n}\n\nexport type AssistantEvent =\n  | { type: 'status'; value: 'idle' | 'thinking' | 'streaming' | 'error' }\n  | { type: 'token'; value: string }\n  | { type: 'done' }\n  | { type: 'error'; error: Error };\n\nexport interface AssistantTransport {\n  send: (input: string, signal: AbortSignal) => void;\n  on: (fn: (evt: AssistantEvent) => void) => () => void; // returns unsubscribe\n}\n\nexport interface Clock {\n  setTimeout: (fn: () => void, ms: number) => number;\n  clearTimeout: (id: number) => void;\n  now: () => number;\n}\n\nconst realClock: Clock = {\n  setTimeout: (fn, ms) => window.setTimeout(fn, ms),\n  clearTimeout: (id) => window.clearTimeout(id),\n  now: () => Date.now(),\n};\n\ninterface EnhancedAIAssistantProps {\n  onQueryGenerate?: (query: string) => void;\n  onNavigate?: (path: string) => void;\n  enableVoice?: boolean;\n  enableProactiveSuggestions?: boolean;\n  transport?: AssistantTransport;\n  clock?: Clock;\n  typingDelayMs?: number; // indicator delay\n  debounceMs?: number; // input debounce\n}\n\nconst generateResponse = async (userMessage: string): Promise<Message> => {\n  await new Promise((resolve) => setTimeout(resolve, 1500));\n\n  const queryKeywords = ['find', 'show', 'search', 'query', 'get', 'list', 'analyze'];\n  const containsQueryRequest = queryKeywords.some((keyword) =>\n    userMessage.toLowerCase().includes(keyword),\n  );\n\n  let response = '';\n  let confidence = 0.85;\n\n  if (containsQueryRequest) {\n    response = `I understand you're looking for data. Let me help you construct an optimized query for that. Based on your request, I'd suggest focusing on these key entities and relationships.\n\nWould you like me to generate a specific Cypher query for this?`;\n    confidence = 0.92;\n  } else if (userMessage.toLowerCase().includes('help')) {\n    response = `I'm here to help you navigate and analyze your intelligence data. I can assist with:\n\n🔍 Query Generation: Convert natural language to optimized Cypher queries\n📊 Data Analysis: Identify patterns, anomalies, and insights\n🗺️ Navigation: Guide you to relevant tools and features\n\nWhat specific aspect would you like help with?`;\n  } else {\n    response = `I understand your question. Based on the current context and your investigation patterns, here are some insights that might be relevant to your analysis.\n\nLet me provide some targeted recommendations based on your query history.`;\n  }\n\n  return {\n    id: `msg-${Date.now()}`,\n    type: 'assistant',\n    content: response,\n    timestamp: new Date(),\n    metadata: {\n      confidence,\n      sources: ['Knowledge Base', 'Query History', 'Context Analysis'],\n    },\n  };\n};\n\nexport const EnhancedAIAssistant: React.FC<EnhancedAIAssistantProps> = ({\n  onQueryGenerate,\n  onNavigate,\n  enableVoice = true,\n  enableProactiveSuggestions = true,\n  transport,\n  clock = realClock,\n  typingDelayMs = 250,\n  debounceMs = 200,\n}) => {\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const abortRef = useRef<AbortController | null>(null);\n  const timers = useRef<number[]>([]);\n\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: 'welcome',\n      type: 'assistant',\n      content: `Hello! I'm IntelBot, your Intelligence Analysis Assistant. I'm here to help you with intelligent data analysis and navigation. How can I assist you today?`,\n      timestamp: new Date(),\n      metadata: {\n        confidence: 1.0,\n        sources: ['System'],\n      },\n    },\n  ]);\n\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(enableVoice);\n  const [isListening, setIsListening] = useState(false);\n  const [status, setStatus] = useState<'idle' | 'thinking' | 'streaming' | 'error'>('idle');\n  const [streamBuf, setStreamBuf] = useState('');\n  // Ref to avoid TDZ/closure issues when callbacks reference handlers defined later\n  const handleSendMessageRef = useRef<(text?: string) => void>(() => {});\n\n  // Voice control logic\n  const startVoice = useCallback(() => {\n    if (!voiceEnabled) return;\n    setIsListening(true);\n    if ((window as any).SpeechRecognition || (window as any).webkitSpeechRecognition) {\n      const SpeechRecognition =\n        (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.onstart = () => setIsListening(true);\n      recognition.onresult = (event: any) => {\n        const transcript = event.results[0][0].transcript;\n        handleSendMessageRef.current(transcript);\n      };\n      recognition.onend = () => setIsListening(false);\n      recognition.start();\n    }\n  }, [voiceEnabled]);\n\n  const stopVoice = useCallback(() => {\n    setIsListening(false);\n    // Abort any ongoing recognition if needed\n    if ((window as any).SpeechRecognition || (window as any).webkitSpeechRecognition) {\n      const SpeechRecognition =\n        (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\n      const recognition = new SpeechRecognition(); // Need to get the active instance if possible\n      // For simplicity, we'll just stop the current listening state.\n      // A more robust solution would involve storing the recognition instance.\n      // For now, the mock handles the `onend` call.\n    }\n  }, []);\n\n  const holdRef = useHoldToTalk(startVoice, stopVoice); // Integrate the hook\n\n  // 🔒 keep a ref to the latest stream buffer so the event handler sees fresh data\n  const streamRef = useRef('');\n  useEffect(() => {\n    streamRef.current = streamBuf;\n  }, [streamBuf]);\n\n  // Auto-scroll to bottom\n  useEffect(() => {\n    messagesEndRef.current?.scrollTo({\n      top: messagesEndRef.current.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, [messages]);\n\n  // ✅ subscribe exactly once per transport; no dependency on streamBuf\n  useEffect(() => {\n    if (!transport) return;\n    const unsubscribe = transport.on((evt) => {\n      if (abortRef.current?.signal.aborted) return;\n\n      switch (evt.type) {\n        case 'status':\n          setStatus(evt.value);\n          setIsTyping(evt.value === 'thinking' || evt.value === 'streaming');\n          break;\n        case 'token':\n          setStatus('streaming');\n          setIsTyping(true);\n          setStreamBuf((s) => s + evt.value);\n          break;\n        case 'done': {\n          const final = streamRef.current;\n          if (final) {\n            setMessages((m) => [\n              ...m,\n              {\n                id: `msg-${clock.now()}`,\n                type: 'assistant',\n                content: final,\n                timestamp: new Date(),\n                metadata: {\n                  confidence: 0.85,\n                  sources: ['AI Assistant'],\n                },\n              },\n            ]);\n            setStreamBuf('');\n            streamRef.current = '';\n          }\n          // 👇 microtask settle ensures DOM reflects final message before \"idle\"\n          Promise.resolve().then(() => setStatus('idle'));\n          setIsTyping(false);\n          break;\n        }\n        case 'error':\n          setStatus('error');\n          setIsTyping(false);\n          break;\n      }\n    });\n    return () => unsubscribe();\n  }, [transport, clock]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      abortRef.current?.abort();\n      timers.current.forEach(clock.clearTimeout);\n      timers.current = [];\n    };\n  }, [clock]);\n\n  const pushTimer = (id: number) => {\n    timers.current.push(id);\n  };\n\n  const handleSendMessage = useCallback(\n    async (text?: string) => {\n      const messageText = text || inputValue;\n      if (!messageText.trim()) return;\n\n      const userMessage: Message = {\n        id: `msg-${clock.now()}`,\n        type: 'user',\n        content: messageText,\n        timestamp: new Date(),\n      };\n\n      setMessages((prev) => [...prev, userMessage]);\n      if (!text) setInputValue(''); // Only clear if using current input\n\n      if (transport) {\n        // Use transport for testable async behavior\n        const id = clock.setTimeout(() => {\n          abortRef.current?.abort();\n          abortRef.current = new AbortController();\n          setStatus('thinking');\n          setIsTyping(true);\n\n          // Typing indicator delay – purely cosmetic, test-controlled\n          pushTimer(\n            clock.setTimeout(() => {\n              if (!abortRef.current?.signal.aborted) setStatus('streaming');\n            }, typingDelayMs),\n          );\n\n          transport.send(messageText, abortRef.current.signal);\n        }, debounceMs);\n        pushTimer(id);\n      } else {\n        // Fallback to original behavior for legacy usage\n        setIsTyping(true);\n        try {\n          const assistantResponse = await generateResponse(messageText);\n          setMessages((prev) => [...prev, assistantResponse]);\n        } catch (error) {\n          setMessages((prev) => [\n            ...prev,\n            {\n              id: `error-${clock.now()}`,\n              type: 'assistant',\n              content:\n                'I apologize, but I encountered an error processing your request. Please try again.',\n              timestamp: new Date(),\n              metadata: {\n                confidence: 0,\n                sources: ['Error Handler'],\n              },\n            },\n          ]);\n        } finally {\n          setIsTyping(false);\n        }\n      }\n    },\n    [inputValue, transport, clock, typingDelayMs, debounceMs],\n  );\n\n  // Keep ref in sync for callbacks defined earlier\n  useEffect(() => {\n    handleSendMessageRef.current = handleSendMessage;\n  }, [handleSendMessage]);\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleCopy = (content: string) => {\n    navigator.clipboard.writeText(content);\n  };\n\n  const MessageBubble: React.FC<{ message: Message }> = ({ message }) => {\n    const isUser = message.type === 'user';\n    const isSystem = message.type === 'system';\n\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: isUser ? 'row-reverse' : 'row',\n          gap: 1,\n          mb: 2,\n          alignItems: 'flex-start',\n        }}\n      >\n        <Avatar\n          sx={{\n            width: 32,\n            height: 32,\n            bgcolor: isUser ? 'primary.main' : 'secondary.main',\n          }}\n        >\n          {isUser ? <Person fontSize=\"small\" /> : <SmartToy fontSize=\"small\" />}\n        </Avatar>\n\n        <Paper\n          elevation={1}\n          sx={{\n            p: 2,\n            maxWidth: '70%',\n            bgcolor: isUser ? 'primary.main' : 'background.paper',\n            color: isUser ? 'primary.contrastText' : 'text.primary',\n            borderRadius: isUser ? '16px 16px 4px 16px' : '16px 16px 16px 4px',\n          }}\n        >\n          <Typography variant=\"body1\" sx={{ mb: 1, whiteSpace: 'pre-wrap' }}>\n            {message.content}\n          </Typography>\n\n          {message.metadata && (\n            <Box sx={{ mt: 1 }}>\n              {message.metadata.confidence && (\n                <Chip\n                  label={`${(message.metadata.confidence * 100).toFixed(0)}% confident`}\n                  size=\"small\"\n                  variant=\"outlined\"\n                  sx={{ mr: 1, mb: 1 }}\n                />\n              )}\n            </Box>\n          )}\n\n          {message.type === 'assistant' && (\n            <Box sx={{ mt: 1, display: 'flex', flexDirection: 'column', gap: 1 }}>\n              {/* Follow-up Actions */}\n              <Stack direction=\"row\" spacing={1} sx={{ flexWrap: 'wrap' }}>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onClick={() => alert('Generate query clicked!')}\n                >\n                  Generate Query\n                </Button>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onClick={() => alert('Export analysis clicked!')}\n                >\n                  Export Analysis\n                </Button>\n              </Stack>\n\n              {/* Feedback (Thumbs/Labels) */}\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  mt: 1,\n                }}\n              >\n                <Typography variant=\"caption\" color=\"text.secondary\">\n                  {message.timestamp.toLocaleTimeString()}\n                </Typography>\n\n                <Stack direction=\"row\" spacing={1}>\n                  <IconButton size=\"small\" onClick={() => handleCopy(message.content)}>\n                    <ContentCopy fontSize=\"small\" />\n                  </IconButton>\n\n                  {!isUser && (\n                    <>\n                      <IconButton\n                        size=\"small\"\n                        color=\"success\"\n                        onClick={() => alert('Feedback: Thumbs Up!')}\n                      >\n                        <ThumbUp fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton size=\"small\" onClick={() => alert('Feedback: Thumbs Down!')}>\n                        <ThumbDown fontSize=\"small\" />\n                      </IconButton>\n                    </>\n                  )}\n                </Stack>\n              </Box>\n            </Box>\n          )}\n        </Paper>\n      </Box>\n    );\n  };\n\n  return (\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      {/* Header */}\n      <Paper elevation={1} sx={{ p: 2, borderRadius: '12px 12px 0 0' }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            <Avatar sx={{ bgcolor: 'secondary.main' }}>\n              <SmartToy />\n            </Avatar>\n\n            <Box>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                IntelBot\n              </Typography>\n              <Typography\n                variant=\"caption\"\n                color=\"text.secondary\"\n                role=\"status\"\n                aria-label=\"assistant-status\"\n              >\n                Intelligence Analysis Assistant •{' '}\n                {status === 'thinking'\n                  ? 'Thinking...'\n                  : status === 'streaming'\n                    ? 'Typing...'\n                    : status === 'error'\n                      ? 'Error'\n                      : 'Online'}\n              </Typography>\n            </Box>\n          </Box>\n\n          <Stack direction=\"row\" spacing={1}>\n            <IconButton\n              ref={holdRef} // Attach the ref here\n              color={isListening ? 'primary' : 'default'}\n              // onClick is now handled by the useHoldToTalk hook's onStart/onEnd\n              // We'll keep a simplified onClick for direct toggling if needed, or remove if only hold-to-talk\n              onClick={() => {\n                if (isListening) {\n                  // If currently listening, a click should stop it\n                  stopVoice();\n                } else {\n                  // If not listening, a click should start it (for tap-to-talk behavior)\n                  startVoice();\n                }\n              }}\n              disabled={!voiceEnabled}\n              aria-label={isListening ? 'Stop Voice' : 'Start Voice'}\n            >\n              {isListening ? <Mic /> : <MicOff />}\n            </IconButton>\n\n            <IconButton aria-label=\"Settings\">\n              <Settings />\n            </IconButton>\n          </Stack>\n        </Box>\n      </Paper>\n\n      {/* Messages Area */}\n      <Box\n        sx={{\n          flex: 1,\n          overflow: 'auto',\n          p: 2,\n          bgcolor: 'background.default',\n        }}\n        role=\"log\"\n        aria-live=\"polite\"\n        data-testid=\"message-log\"\n      >\n        {messages.map((message) => (\n          <div key={message.id} role=\"article\" aria-label={message.type}>\n            <MessageBubble message={message} />\n          </div>\n        ))}\n\n        {streamBuf && (\n          <div role=\"article\" aria-label=\"assistant\">\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\n              <Avatar sx={{ width: 32, height: 32, bgcolor: 'secondary.main' }}>\n                <SmartToy fontSize=\"small\" />\n              </Avatar>\n              <Paper elevation={1} sx={{ p: 2, borderRadius: '16px 16px 16px 4px' }}>\n                <Typography variant=\"body2\">{streamBuf}</Typography>\n              </Paper>\n            </Box>\n          </div>\n        )}\n\n        {isTyping && (\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\n            <Avatar sx={{ width: 32, height: 32, bgcolor: 'secondary.main' }}>\n              <SmartToy fontSize=\"small\" />\n            </Avatar>\n            <Paper elevation={1} sx={{ p: 2, borderRadius: '16px 16px 16px 4px' }}>\n              <Typography variant=\"body2\">Typing...</Typography>\n            </Paper>\n          </Box>\n        )}\n\n        <div ref={messagesEndRef} />\n      </Box>\n\n      {/* Input Area */}\n      <Paper elevation={1} sx={{ p: 2, borderRadius: '0 0 12px 12px' }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <TextField\n            ref={inputRef}\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Ask me anything about your data...\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyPress={handleKeyPress}\n            disabled={isTyping}\n            inputProps={{\n              'aria-label': 'assistant-input',\n            }}\n            sx={{\n              '& .MuiOutlinedInput-root': {\n                borderRadius: 3,\n              },\n            }}\n          />\n\n          <IconButton\n            color=\"primary\"\n            onClick={() => handleSendMessage()}\n            disabled={!inputValue.trim() || isTyping}\n            sx={{ p: 1.5 }}\n            aria-label=\"send\"\n          >\n            <Send />\n          </IconButton>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default EnhancedAIAssistant;\n"],"version":3}