{"file":"/Users/brianlong/Developer/summit/server/src/transparency/GossipAuditor.ts","mappings":";;;AAAA,MAAa,aAAa;IAEd;IAIA;IALV,YACU,OAGP,EACO,GAAqC;QAJrC,YAAO,GAAP,OAAO,CAGd;QACO,QAAG,GAAH,GAAG,CAAkC;IAC5C,CAAC;IAEJ,KAAK,CAAC,SAAS;QACb,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QACxC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,UAAU,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;YAC5C,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC;QACvB,CAAC;QACD,OAAO,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;CACF;AAnBD,sCAmBC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/transparency/GossipAuditor.ts"],"sourcesContent":["export class GossipAuditor {\n  constructor(\n    private fetcher: {\n      getSTH: () => Promise<{ size: number; root: string }>;\n      getRange: (from: number, to: number) => Promise<string[]>;\n    },\n    private log: { alert: (msg: string) => void }\n  ) {}\n\n  async auditOnce() {\n    const sth = await this.fetcher.getSTH();\n    const range = await this.fetcher.getRange(0, sth.size);\n    const recomputed = range.join('');\n    if (recomputed !== sth.root) {\n      this.log.alert('transparency_log_mismatch');\n      return { ok: false };\n    }\n    return { ok: true, size: sth.size };\n  }\n}\n"],"version":3}