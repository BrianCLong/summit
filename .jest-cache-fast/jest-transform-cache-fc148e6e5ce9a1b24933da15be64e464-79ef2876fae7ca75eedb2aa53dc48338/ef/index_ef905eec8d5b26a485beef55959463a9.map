{"file":"/Users/brianlong/Developer/summit/packages/hrn/src/index.ts","mappings":";;AAaA,4BAYC;AAED,8BAGC;AAjBD,SAAgB,QAAQ,CAAC,SAAiB,EAAE,KAA0B,EAAE,UAAoB;IAC1F,2DAA2D;IAC3D,IAAI,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC;QAC7C,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;IACjE,CAAC;IACD,MAAM,KAAK,GAAG,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,uBAAuB;IACvE,OAAO;QACL,SAAS;QACT,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;QACpC,YAAY,EAAE,UAAU;QACxB,KAAK;KACN,CAAC;AACJ,CAAC;AAED,SAAgB,SAAS,CAAC,GAAQ,EAAE,MAA2B;IAC7D,kEAAkE;IAClE,OAAO,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,8BAA8B;AACxD,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/hrn/src/index.ts"],"sourcesContent":["export interface HIT {\n  subjectId: string;       // content or account\n  epoch: number;           // period\n  attestations: string[];  // attester sigs (blind or SD-JWT)\n  score: number;           // derived credibility\n}\n\nexport interface CredentialingNode {\n  id: string;\n  publicKey: string;\n  weight: number;\n}\n\nexport function issueHIT(subjectId: string, nodes: CredentialingNode[], signatures: string[]): HIT {\n  // Placeholder for actual threshold-signature or PBFT logic\n  if (signatures.length < nodes.length * (2/3)) {\n    throw new Error(\"Not enough weighted signatures to issue HIT\");\n  }\n  const score = signatures.length / nodes.length; // Simple score for MVP\n  return {\n    subjectId,\n    epoch: Math.floor(Date.now() / 1000),\n    attestations: signatures,\n    score\n  };\n}\n\nexport function verifyHIT(hit: HIT, _nodes: CredentialingNode[]): boolean {\n  // Placeholder for actual threshold-signature or PBFT verification\n  return hit.score > 0.5; // Simple verification for MVP\n}"],"version":3}