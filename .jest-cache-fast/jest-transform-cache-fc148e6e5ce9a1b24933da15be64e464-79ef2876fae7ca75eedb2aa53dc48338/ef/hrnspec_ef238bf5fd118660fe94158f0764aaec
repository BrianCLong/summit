c8457e3ba9fee6ac18e3886412677251
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = require("../src");
describe('HRN', () => {
    const nodes = [
        { id: 'node1', publicKey: 'pub1', weight: 1 },
        { id: 'node2', publicKey: 'pub2', weight: 1 },
        { id: 'node3', publicKey: 'pub3', weight: 1 },
    ];
    test('should issue and verify HIT with enough signatures', () => {
        const signatures = ['sig1', 'sig2']; // 2/3 of nodes
        const hit = (0, src_1.issueHIT)('subject1', nodes, signatures);
        expect(hit).toBeDefined();
        expect((0, src_1.verifyHIT)(hit, nodes)).toBe(true);
    });
    test('should throw error if not enough signatures', () => {
        const signatures = ['sig1']; // Less than 2/3
        expect(() => (0, src_1.issueHIT)('subject1', nodes, signatures)).toThrow("Not enough weighted signatures to issue HIT");
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3BhY2thZ2VzL2hybi90ZXN0cy9ocm4uc3BlYy50cyIsIm1hcHBpbmdzIjoiOztBQUFBLGdDQUE2QztBQUU3QyxRQUFRLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtJQUNuQixNQUFNLEtBQUssR0FBRztRQUNaLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUU7UUFDN0MsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRTtRQUM3QyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFO0tBQzlDLENBQUM7SUFFRixJQUFJLENBQUMsb0RBQW9ELEVBQUUsR0FBRyxFQUFFO1FBQzlELE1BQU0sVUFBVSxHQUFHLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBZTtRQUNwRCxNQUFNLEdBQUcsR0FBRyxJQUFBLGNBQVEsRUFBQyxVQUFVLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ3BELE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMxQixNQUFNLENBQUMsSUFBQSxlQUFTLEVBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNDLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLDZDQUE2QyxFQUFFLEdBQUcsRUFBRTtRQUN2RCxNQUFNLFVBQVUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsZ0JBQWdCO1FBQzdDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFBLGNBQVEsRUFBQyxVQUFVLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLDZDQUE2QyxDQUFDLENBQUM7SUFDL0csQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvYnJpYW5sb25nL0RldmVsb3Blci9zdW1taXQvcGFja2FnZXMvaHJuL3Rlc3RzL2hybi5zcGVjLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzc3VlSElULCB2ZXJpZnlISVQgfSBmcm9tICcuLi9zcmMnO1xuXG5kZXNjcmliZSgnSFJOJywgKCkgPT4ge1xuICBjb25zdCBub2RlcyA9IFtcbiAgICB7IGlkOiAnbm9kZTEnLCBwdWJsaWNLZXk6ICdwdWIxJywgd2VpZ2h0OiAxIH0sXG4gICAgeyBpZDogJ25vZGUyJywgcHVibGljS2V5OiAncHViMicsIHdlaWdodDogMSB9LFxuICAgIHsgaWQ6ICdub2RlMycsIHB1YmxpY0tleTogJ3B1YjMnLCB3ZWlnaHQ6IDEgfSxcbiAgXTtcblxuICB0ZXN0KCdzaG91bGQgaXNzdWUgYW5kIHZlcmlmeSBISVQgd2l0aCBlbm91Z2ggc2lnbmF0dXJlcycsICgpID0+IHtcbiAgICBjb25zdCBzaWduYXR1cmVzID0gWydzaWcxJywgJ3NpZzInXTsgLy8gMi8zIG9mIG5vZGVzXG4gICAgY29uc3QgaGl0ID0gaXNzdWVISVQoJ3N1YmplY3QxJywgbm9kZXMsIHNpZ25hdHVyZXMpO1xuICAgIGV4cGVjdChoaXQpLnRvQmVEZWZpbmVkKCk7XG4gICAgZXhwZWN0KHZlcmlmeUhJVChoaXQsIG5vZGVzKSkudG9CZSh0cnVlKTtcbiAgfSk7XG5cbiAgdGVzdCgnc2hvdWxkIHRocm93IGVycm9yIGlmIG5vdCBlbm91Z2ggc2lnbmF0dXJlcycsICgpID0+IHtcbiAgICBjb25zdCBzaWduYXR1cmVzID0gWydzaWcxJ107IC8vIExlc3MgdGhhbiAyLzNcbiAgICBleHBlY3QoKCkgPT4gaXNzdWVISVQoJ3N1YmplY3QxJywgbm9kZXMsIHNpZ25hdHVyZXMpKS50b1Rocm93KFwiTm90IGVub3VnaCB3ZWlnaHRlZCBzaWduYXR1cmVzIHRvIGlzc3VlIEhJVFwiKTtcbiAgfSk7XG59KTsiXSwidmVyc2lvbiI6M30=