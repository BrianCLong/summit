{"file":"/Users/brianlong/Developer/summit/server/tests/services/nlq.translator.test.ts","mappings":";;AAAA,kEAA+D;AAE/D,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,GAAG,GAAG,MAAM,uBAAU,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAChE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;QACjD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;QACvD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/tests/services/nlq.translator.test.ts"],"sourcesContent":["import { translator } from '../../src/services/nlq/translator';\n\ndescribe('NLQTranslator', () => {\n  it('translates person queries with tenant scoping', async () => {\n    const res = await translator.translate('Show all people', 't1');\n    expect(res.cypher).toContain('MATCH (n:Person)');\n    expect(res.cypher).toContain('n.tenantId = $tenantId');\n    expect(res.params.tenantId).toBe('t1');\n  });\n});\n"],"version":3}