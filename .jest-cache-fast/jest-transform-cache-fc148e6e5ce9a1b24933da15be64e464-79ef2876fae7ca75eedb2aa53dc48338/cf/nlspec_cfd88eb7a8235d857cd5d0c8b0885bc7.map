{"file":"/Users/brianlong/Developer/summit/packages/maestroflow/test/nl.spec.ts","mappings":";;AAAA,mDAA+C;AAAC,sCAAuC;AACvF,IAAI,CAAC,sCAAsC,EAAE,GAAE,EAAE;IAC/C,MAAM,CAAC,GAAG,IAAA,oBAAQ,EAAC,wDAAwD,CAAC,CAAC;IAC7E,MAAM,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAK,EAAC,EAAE,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC;IACvC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC9B,MAAM,CAAC,IAAA,eAAQ,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,EAAE,CAAA,CAAC,CAAC,KAAK,KAAG,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;AAC7D,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/maestroflow/test/nl.spec.ts"],"sourcesContent":["import { nlToFlow } from \"../src/nl/translate\"; import { flowLint } from \"../src/lint\";\ntest(\"nl→flow adds gate when confidence≥85\", ()=>{\n  const f = nlToFlow(\"On PR: build then test (TIA). Deploy if confidence≥85.\");\n  const ids = f.nodes.map((n:any)=>n.id);\n  expect(ids).toContain(\"gate\");\n  expect(flowLint(f).find(x=>x.level===\"error\")).toBeFalsy();\n});"],"version":3}