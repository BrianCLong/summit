dfbe486da86acae27b9bf367a840a410
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.quarantineDrop = exports.quarantineRetry = exports.evaluate = exports.createRule = void 0;
const post = async (url, body) => {
    const res = await fetch(url, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(body),
    });
    if (!res.ok)
        throw new Error(`Request failed: ${res.status}`);
    return res.json();
};
const createRule = (base, rule) => post(`${base}/dq/rules`, rule);
exports.createRule = createRule;
const evaluate = (base, payload, rules) => post(`${base}/dq/evaluate`, { payload, rules });
exports.evaluate = evaluate;
const quarantineRetry = (base, id) => post(`${base}/dq/quarantine/retry`, { item_id: id });
exports.quarantineRetry = quarantineRetry;
const quarantineDrop = (base, id, reason) => post(`${base}/dq/quarantine/drop`, { item_id: id, reason });
exports.quarantineDrop = quarantineDrop;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3BhY2thZ2VzL3Nkay9kYXRhLXF1YWxpdHktanMvc3JjL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7OztBQU9BLE1BQU0sSUFBSSxHQUFHLEtBQUssRUFBRSxHQUFXLEVBQUUsSUFBYSxFQUFFLEVBQUU7SUFDaEQsTUFBTSxHQUFHLEdBQUcsTUFBTSxLQUFLLENBQUMsR0FBRyxFQUFFO1FBQzNCLE1BQU0sRUFBRSxNQUFNO1FBQ2QsT0FBTyxFQUFFLEVBQUUsY0FBYyxFQUFFLGtCQUFrQixFQUFFO1FBQy9DLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztLQUMzQixDQUFDLENBQUM7SUFDSCxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFBRSxNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUM5RCxPQUFPLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUNwQixDQUFDLENBQUM7QUFFSyxNQUFNLFVBQVUsR0FBRyxDQUFDLElBQVksRUFBRSxJQUFVLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQTFFLFFBQUEsVUFBVSxjQUFnRTtBQUNoRixNQUFNLFFBQVEsR0FBRyxDQUFDLElBQVksRUFBRSxPQUFnQixFQUFFLEtBQWEsRUFBRSxFQUFFLENBQ3hFLElBQUksQ0FBQyxHQUFHLElBQUksY0FBYyxFQUFFLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7QUFEckMsUUFBQSxRQUFRLFlBQzZCO0FBQzNDLE1BQU0sZUFBZSxHQUFHLENBQUMsSUFBWSxFQUFFLEVBQVUsRUFBRSxFQUFFLENBQzFELElBQUksQ0FBQyxHQUFHLElBQUksc0JBQXNCLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUQxQyxRQUFBLGVBQWUsbUJBQzJCO0FBQ2hELE1BQU0sY0FBYyxHQUFHLENBQUMsSUFBWSxFQUFFLEVBQVUsRUFBRSxNQUFjLEVBQUUsRUFBRSxDQUN6RSxJQUFJLENBQUMsR0FBRyxJQUFJLHFCQUFxQixFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBRGpELFFBQUEsY0FBYyxrQkFDbUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3BhY2thZ2VzL3Nkay9kYXRhLXF1YWxpdHktanMvc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgUnVsZSB7XG4gIGlkOiBzdHJpbmc7XG4gIGZpZWxkOiBzdHJpbmc7XG4gIHR5cGU6IHN0cmluZztcbiAgcGFyYW1zPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj47XG59XG5cbmNvbnN0IHBvc3QgPSBhc3luYyAodXJsOiBzdHJpbmcsIGJvZHk6IHVua25vd24pID0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXG4gIH0pO1xuICBpZiAoIXJlcy5vaykgdGhyb3cgbmV3IEVycm9yKGBSZXF1ZXN0IGZhaWxlZDogJHtyZXMuc3RhdHVzfWApO1xuICByZXR1cm4gcmVzLmpzb24oKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVSdWxlID0gKGJhc2U6IHN0cmluZywgcnVsZTogUnVsZSkgPT4gcG9zdChgJHtiYXNlfS9kcS9ydWxlc2AsIHJ1bGUpO1xuZXhwb3J0IGNvbnN0IGV2YWx1YXRlID0gKGJhc2U6IHN0cmluZywgcGF5bG9hZDogdW5rbm93biwgcnVsZXM6IFJ1bGVbXSkgPT5cbiAgcG9zdChgJHtiYXNlfS9kcS9ldmFsdWF0ZWAsIHsgcGF5bG9hZCwgcnVsZXMgfSk7XG5leHBvcnQgY29uc3QgcXVhcmFudGluZVJldHJ5ID0gKGJhc2U6IHN0cmluZywgaWQ6IHN0cmluZykgPT5cbiAgcG9zdChgJHtiYXNlfS9kcS9xdWFyYW50aW5lL3JldHJ5YCwgeyBpdGVtX2lkOiBpZCB9KTtcbmV4cG9ydCBjb25zdCBxdWFyYW50aW5lRHJvcCA9IChiYXNlOiBzdHJpbmcsIGlkOiBzdHJpbmcsIHJlYXNvbjogc3RyaW5nKSA9PlxuICBwb3N0KGAke2Jhc2V9L2RxL3F1YXJhbnRpbmUvZHJvcGAsIHsgaXRlbV9pZDogaWQsIHJlYXNvbiB9KTtcbiJdLCJ2ZXJzaW9uIjozfQ==