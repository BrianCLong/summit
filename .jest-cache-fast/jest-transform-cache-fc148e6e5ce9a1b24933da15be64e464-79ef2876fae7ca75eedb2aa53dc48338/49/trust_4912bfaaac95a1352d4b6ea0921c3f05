80b03f1eaa641aec5b0077650f8d9ac8
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyTrustContract = verifyTrustContract;
exports.upsertTrustContract = upsertTrustContract;
const pg_1 = require("pg");
const pg = new pg_1.Pool({ connectionString: process.env.DATABASE_URL });
async function verifyTrustContract(tc) {
    if (new Date(tc.expiresAt) < new Date())
        throw new Error('contract expired');
    // TODO: Verify signature against provider's registered key (PKI/cosign)
    return true;
}
async function upsertTrustContract(tc) {
    await verifyTrustContract(tc);
    await pg.query(`INSERT INTO trust_contracts(id, provider, consumer, scope, residency, expires_at, signature)
     VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6)
     ON CONFLICT (provider, consumer, signature) DO NOTHING`, [tc.providerTenant, tc.consumerTenant, tc.scope, tc.residency, tc.expiresAt, tc.signature]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3NlcnZlci9zcmMvY29uZHVjdG9yL2NvbnRyYWN0cy90cnVzdC50cyIsIm1hcHBpbmdzIjoiOztBQWFBLGtEQUlDO0FBRUQsa0RBUUM7QUEzQkQsMkJBQTBCO0FBRTFCLE1BQU0sRUFBRSxHQUFHLElBQUksU0FBSSxDQUFDLEVBQUUsZ0JBQWdCLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDO0FBVzdELEtBQUssVUFBVSxtQkFBbUIsQ0FBQyxFQUFpQjtJQUN6RCxJQUFJLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLElBQUksRUFBRTtRQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUM3RSx3RUFBd0U7SUFDeEUsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRU0sS0FBSyxVQUFVLG1CQUFtQixDQUFDLEVBQWlCO0lBQ3pELE1BQU0sbUJBQW1CLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUIsTUFBTSxFQUFFLENBQUMsS0FBSyxDQUNaOzs0REFFd0QsRUFDeEQsQ0FBQyxFQUFFLENBQUMsY0FBYyxFQUFFLEVBQUUsQ0FBQyxjQUFjLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUMzRixDQUFDO0FBQ0osQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvYnJpYW5sb25nL0RldmVsb3Blci9zdW1taXQvc2VydmVyL3NyYy9jb25kdWN0b3IvY29udHJhY3RzL3RydXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvb2wgfSBmcm9tICdwZyc7XG5cbmNvbnN0IHBnID0gbmV3IFBvb2woeyBjb25uZWN0aW9uU3RyaW5nOiBwcm9jZXNzLmVudi5EQVRBQkFTRV9VUkwgfSk7XG5cbmV4cG9ydCB0eXBlIFRydXN0Q29udHJhY3QgPSB7XG4gIHByb3ZpZGVyVGVuYW50OiBzdHJpbmc7XG4gIGNvbnN1bWVyVGVuYW50OiBzdHJpbmc7XG4gIHNjb3BlOiBhbnk7XG4gIHJlc2lkZW5jeTogc3RyaW5nO1xuICBleHBpcmVzQXQ6IHN0cmluZztcbiAgc2lnbmF0dXJlOiBzdHJpbmc7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5VHJ1c3RDb250cmFjdCh0YzogVHJ1c3RDb250cmFjdCkge1xuICBpZiAobmV3IERhdGUodGMuZXhwaXJlc0F0KSA8IG5ldyBEYXRlKCkpIHRocm93IG5ldyBFcnJvcignY29udHJhY3QgZXhwaXJlZCcpO1xuICAvLyBUT0RPOiBWZXJpZnkgc2lnbmF0dXJlIGFnYWluc3QgcHJvdmlkZXIncyByZWdpc3RlcmVkIGtleSAoUEtJL2Nvc2lnbilcbiAgcmV0dXJuIHRydWU7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cHNlcnRUcnVzdENvbnRyYWN0KHRjOiBUcnVzdENvbnRyYWN0KSB7XG4gIGF3YWl0IHZlcmlmeVRydXN0Q29udHJhY3QodGMpO1xuICBhd2FpdCBwZy5xdWVyeShcbiAgICBgSU5TRVJUIElOVE8gdHJ1c3RfY29udHJhY3RzKGlkLCBwcm92aWRlciwgY29uc3VtZXIsIHNjb3BlLCByZXNpZGVuY3ksIGV4cGlyZXNfYXQsIHNpZ25hdHVyZSlcbiAgICAgVkFMVUVTIChnZW5fcmFuZG9tX3V1aWQoKSwgJDEsICQyLCAkMywgJDQsICQ1LCAkNilcbiAgICAgT04gQ09ORkxJQ1QgKHByb3ZpZGVyLCBjb25zdW1lciwgc2lnbmF0dXJlKSBETyBOT1RISU5HYCxcbiAgICBbdGMucHJvdmlkZXJUZW5hbnQsIHRjLmNvbnN1bWVyVGVuYW50LCB0Yy5zY29wZSwgdGMucmVzaWRlbmN5LCB0Yy5leHBpcmVzQXQsIHRjLnNpZ25hdHVyZV0sXG4gICk7XG59XG5cbiJdLCJ2ZXJzaW9uIjozfQ==