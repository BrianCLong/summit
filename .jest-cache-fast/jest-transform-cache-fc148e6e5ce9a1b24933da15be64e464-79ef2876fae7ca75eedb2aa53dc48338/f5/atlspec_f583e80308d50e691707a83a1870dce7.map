{"file":"/Users/brianlong/Developer/summit/packages/atl/tests/atl.spec.ts","mappings":";;AAAA,gCAA+C;AAC/C,mCAAoC;AAEpC,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;IACnB,IAAI,CAAC,gCAAgC,EAAE,GAAG,EAAE;QAC1C,MAAM,cAAc,GAAG;YACrB,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,IAAA,mBAAU,GAAE,EAAE,SAAS,EAAE,oBAAoB,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,EAAE;YAClM,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,IAAA,mBAAU,GAAE,EAAE,SAAS,EAAE,iBAAiB,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,EAAE;SACjM,CAAC;QACF,MAAM,KAAK,GAAG,IAAA,cAAQ,EAAC,cAAc,CAAC,CAAC;QACvC,MAAM,MAAM,GAAG,EAAE,WAAW,EAAE,IAAA,mBAAU,GAAE,EAAE,SAAS,EAAE,oBAAoB,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;QACrI,MAAM,MAAM,GAAG,IAAA,iBAAW,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAE1C,MAAM,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/packages/atl/tests/atl.spec.ts"],"sourcesContent":["import { trainATL, inferTariff } from '../src';\nimport { randomUUID } from 'crypto';\n\ndescribe('ATL', () => {\n  test('should train and infer tariffs', () => {\n    const historicalData = [\n      { fp: { contentHash: randomUUID(), formatSig: 'mime:1000:0:NOEXIF', timingSig: '12h:0', xformSig: 'nokpw', route: 'tip' }, outcome: { accepted: 1, disputed: 0, retracted: 0, beliefDecay: 0.1 } },\n      { fp: { contentHash: randomUUID(), formatSig: 'mime:500:0:EXIF', timingSig: '02h:1', xformSig: 'kpw', route: 'social' }, outcome: { accepted: 0, disputed: 1, retracted: 0, beliefDecay: 0.5 } },\n    ];\n    const model = trainATL(historicalData);\n    const testFp = { contentHash: randomUUID(), formatSig: 'mime:2000:1:NOEXIF', timingSig: '23h:0', xformSig: 'nokpw', route: 'email' };\n    const tariff = inferTariff(model, testFp);\n\n    expect(tariff).toHaveProperty('minProofLevel');\n    expect(tariff).toHaveProperty('rateLimit');\n    expect(tariff).toHaveProperty('throttleMs');\n  });\n});"],"version":3}