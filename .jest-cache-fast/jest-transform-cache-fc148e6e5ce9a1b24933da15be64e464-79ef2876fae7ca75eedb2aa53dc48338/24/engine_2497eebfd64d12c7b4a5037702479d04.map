{"file":"/Users/brianlong/Developer/summit/server/src/conductor/events/engine.ts","mappings":"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","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/conductor/events/engine.ts"],"sourcesContent":["import { Pool } from 'pg';\n\n// Optional kafka integration: load lazily to avoid hard dep when not used\nlet Kafka: any;\ntry { Kafka = require('kafkajs').Kafka; } catch {}\n\nconst pg = new Pool({ connectionString: process.env.DATABASE_URL });\nconst kafka = Kafka ? new Kafka({ clientId: 'conductor-events', brokers: (process.env.KAFKA || '').split(',').filter(Boolean) }) : null;\n\nexport async function startKafkaSource(src: { id: number; topic: string; group: string; runbook: string }) {\n  if (!kafka) throw new Error('kafkajs not available');\n  const consumer = kafka.consumer({ groupId: src.group });\n  await consumer.connect();\n  await consumer.subscribe({ topic: src.topic, fromBeginning: false });\n  await consumer.run({\n    eachMessage: async ({ partition, message }: any) => {\n      const key = message.key?.toString() || `${partition}:${message.offset}`;\n      const off = Number(message.offset);\n      const ok = await claimOffset(src, partition, off);\n      if (!ok) return; // already processed\n      await triggerRunbook(src.runbook, { eventKey: key, value: message.value?.toString() });\n      await storeOffset(src, partition, off);\n    },\n  });\n}\n\nasync function claimOffset(src: any, partition: number, offset: number) {\n  const { rowCount } = await pg.query(\n    `INSERT INTO stream_offset(runbook, source_id, partition, offset)\n     VALUES ($1,$2,$3,$4)\n     ON CONFLICT (runbook,source_id,partition) DO NOTHING`,\n    [src.runbook, src.id, partition, offset],\n  );\n  return rowCount > 0;\n}\nasync function storeOffset(src: any, partition: number, offset: number) {\n  await pg.query(\n    `UPDATE stream_offset SET offset=$1, updated_at=now() WHERE runbook=$2 AND source_id=$3 AND partition=$4`,\n    [offset, src.runbook, src.id, partition],\n  );\n}\n\nexport async function webhookHandler(req: any, res: any) {\n  const sig = req.headers['x-hub-signature-256'] || req.headers['x-intelgraph-signature'];\n  if (!verifyHmac(sig, req.rawBody, process.env.WEBHOOK_SECRET!)) return res.status(401).end();\n  await triggerRunbook(req.query.runbook, { eventKey: req.headers['x-event-id'], value: req.body });\n  res.sendStatus(202);\n}\nfunction verifyHmac(sig: string, body: Buffer, secret: string) {\n  // TODO: implement HMAC-SHA256 check\n  return Boolean(sig && body && secret);\n}\nasync function triggerRunbook(runbook: string, payload: any) {\n  // TODO: enqueue a run with payload\n}\n\n"],"version":3}