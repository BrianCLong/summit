{"file":"/Users/brianlong/Developer/summit/server/src/dp.ts","mappings":";;AAQA,0BAOC;AAED,0BAAsF;AAftF,SAAS,YAAY,CAAC,EAAE,GAAC,CAAC,EAAE,KAAK,GAAC,CAAC;IACjC,aAAa;IACb,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC;IAAC,OAAM,CAAC,KAAG,CAAC;QAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IAAC,OAAM,CAAC,KAAG,CAAC;QAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACtE,OAAO,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAC,IAAI,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;AAC5E,CAAC;AAED,SAAgB,OAAO,CAAC,GAAa;IACnC,IAAI,GAAG,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;QAChC,MAAM,CAAC,GAAG,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC;QACxC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IACD,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;IACpG,OAAO,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAChC,CAAC;AAED,SAAgB,OAAO,CAAC,KAAa,EAAE,GAAa,IAAI,OAAO,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/dp.ts"],"sourcesContent":["export type DpConfig = { epsilon: number; delta?: number; sensitivity: number; mechanism: 'laplace'|'gaussian' };\n\nfunction randomNormal(mu=0, sigma=1){\n  // Box-Muller\n  let u=0,v=0; while(u===0)u=Math.random(); while(v===0)v=Math.random();\n  return mu + sigma * Math.sqrt(-2.0*Math.log(u)) * Math.cos(2.0*Math.PI*v);\n}\n\nexport function dpNoise(cfg: DpConfig) {\n  if (cfg.mechanism === 'laplace') {\n    const b = cfg.sensitivity / cfg.epsilon;\n    return (Math.random() - 0.5) * 2 * b;\n  }\n  const sigma = Math.sqrt(2 * Math.log(1.25 / (cfg.delta || 1e-6))) * (cfg.sensitivity / cfg.epsilon);\n  return randomNormal(0, sigma);\n}\n\nexport function applyDp(count: number, cfg: DpConfig) { return count + dpNoise(cfg); }\n\n"],"version":3}