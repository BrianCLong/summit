{"file":"/Users/brianlong/Developer/summit/server/src/tests/entityResolution.normalization.test.ts","mappings":";;AAAA,iFAA8E;AAE9E,QAAQ,CAAC,uCAAuC,EAAE,GAAG,EAAE;IACrD,MAAM,GAAG,GAAG,IAAI,iDAAuB,EAAE,CAAC;IAC1C,MAAM,SAAS,GAAG,CAAC,KAAU,EAAE,EAAE,CAAE,GAAW,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;IAChF,MAAM,GAAG,GAAG,CAAC,KAAU,EAAE,EAAE,CAAE,GAAW,CAAC,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAEhF,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,KAAK,GAAG,SAAS,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC,CAAC;QAChE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;QACzB,MAAM,KAAK,GAAG,SAAS,CAAC,EAAE,GAAG,EAAE,iCAAiC,EAAE,CAAC,CAAC;QACpE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAChD,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC,CAAC;QAClE,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACpE,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/tests/entityResolution.normalization.test.ts"],"sourcesContent":["import { EntityResolutionService } from '../services/EntityResolutionService';\n\ndescribe('EntityResolutionService normalization', () => {\n  const svc = new EntityResolutionService();\n  const normalize = (input: any) => (svc as any).normalizeEntityProperties(input);\n  const key = (input: any) => (svc as any).generateCanonicalKey(normalize(input));\n\n  it('normalizes emails and aliases', () => {\n    const props = normalize({ email: 'User.Name+spam@Gmail.com ' });\n    expect(props.email).toBe('username@gmail.com');\n  });\n\n  it('normalizes urls', () => {\n    const props = normalize({ url: 'https://Example.com/Path/?utm=1' });\n    expect(props.url).toBe('example.com/path');\n  });\n\n  it('creates same key for equivalent values', () => {\n    const k1 = key({ name: 'José Ángel', email: 'USER@EXAMPLE.com' });\n    const k2 = key({ name: 'José  Angel', email: 'user@example.com' });\n    expect(k1).toBe(k2);\n  });\n});\n"],"version":3}