55fd75df3e8b04a52c4fd26e9fc9aaa9
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rankPaths = rankPaths;
function rankPaths(paths, opts = {}) {
    const { edgeWeights = {}, nodeCentrality = {}, strategy = "v2", weights = { length: 0.34, edgeType: 0.33, centrality: 0.33 }, } = opts;
    const maxCentrality = Math.max(...Object.values(nodeCentrality), 1);
    const maxEdgeWeight = Math.max(...Object.values(edgeWeights), 1);
    const ranked = paths.map((p) => {
        const length = 1; // current paths are single edges
        const lengthScoreRaw = 1 / length; // higher is better for shorter paths
        const edgeWeight = edgeWeights[p.type || ""] || 1;
        const edgeScoreRaw = edgeWeight / maxEdgeWeight;
        const centralityVal = ((nodeCentrality[p.from] || 0) + (nodeCentrality[p.to] || 0)) / 2;
        const centralityScoreRaw = centralityVal / maxCentrality;
        if (strategy === "v1") {
            const score = lengthScoreRaw;
            return {
                path: p,
                score,
                score_breakdown: { length: score, edgeType: 0, centrality: 0 },
            };
        }
        const breakdown = {
            length: lengthScoreRaw * weights.length,
            edgeType: edgeScoreRaw * weights.edgeType,
            centrality: centralityScoreRaw * weights.centrality,
        };
        return {
            path: p,
            score: breakdown.length + breakdown.edgeType + breakdown.centrality,
            score_breakdown: breakdown,
        };
    });
    return ranked.sort((a, b) => b.score - a.score);
}
exports.default = rankPaths;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3NlcnZlci9zcmMvc2VydmljZXMvUGF0aFJhbmtpbmdTZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7O0FBMEJBLDhCQThDQztBQTlDRCxTQUFnQixTQUFTLENBQ3ZCLEtBQVUsRUFDVixPQUF1QixFQUFFO0lBRXpCLE1BQU0sRUFDSixXQUFXLEdBQUcsRUFBRSxFQUNoQixjQUFjLEdBQUcsRUFBRSxFQUNuQixRQUFRLEdBQUcsSUFBSSxFQUNmLE9BQU8sR0FBRyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEdBQzdELEdBQUcsSUFBSSxDQUFDO0lBRVQsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEUsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFakUsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO1FBQzdCLE1BQU0sTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLGlDQUFpQztRQUNuRCxNQUFNLGNBQWMsR0FBRyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMscUNBQXFDO1FBQ3hFLE1BQU0sVUFBVSxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsRCxNQUFNLFlBQVksR0FBRyxVQUFVLEdBQUcsYUFBYSxDQUFDO1FBQ2hELE1BQU0sYUFBYSxHQUNqQixDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEUsTUFBTSxrQkFBa0IsR0FBRyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBRXpELElBQUksUUFBUSxLQUFLLElBQUksRUFBRSxDQUFDO1lBQ3RCLE1BQU0sS0FBSyxHQUFHLGNBQWMsQ0FBQztZQUM3QixPQUFPO2dCQUNMLElBQUksRUFBRSxDQUFDO2dCQUNQLEtBQUs7Z0JBQ0wsZUFBZSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQUU7YUFDL0QsQ0FBQztRQUNKLENBQUM7UUFFRCxNQUFNLFNBQVMsR0FBbUI7WUFDaEMsTUFBTSxFQUFFLGNBQWMsR0FBRyxPQUFPLENBQUMsTUFBTTtZQUN2QyxRQUFRLEVBQUUsWUFBWSxHQUFHLE9BQU8sQ0FBQyxRQUFRO1lBQ3pDLFVBQVUsRUFBRSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsVUFBVTtTQUNwRCxDQUFDO1FBRUYsT0FBTztZQUNMLElBQUksRUFBRSxDQUFDO1lBQ1AsS0FBSyxFQUFFLFNBQVMsQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsVUFBVTtZQUNuRSxlQUFlLEVBQUUsU0FBUztTQUMzQixDQUFDO0lBQ0osQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNsRCxDQUFDO0FBRUQsa0JBQWUsU0FBUyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbmxvbmcvRGV2ZWxvcGVyL3N1bW1pdC9zZXJ2ZXIvc3JjL3NlcnZpY2VzL1BhdGhSYW5raW5nU2VydmljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIFNjb3JlQnJlYWtkb3duIHtcbiAgbGVuZ3RoOiBudW1iZXI7XG4gIGVkZ2VUeXBlOiBudW1iZXI7XG4gIGNlbnRyYWxpdHk6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSYW5raW5nT3B0aW9ucyB7XG4gIGVkZ2VXZWlnaHRzPzogUmVjb3JkPHN0cmluZywgbnVtYmVyPjtcbiAgbm9kZUNlbnRyYWxpdHk/OiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+O1xuICBzdHJhdGVneT86IFwidjFcIiB8IFwidjJcIjtcbiAgd2VpZ2h0cz86IHsgbGVuZ3RoOiBudW1iZXI7IGVkZ2VUeXBlOiBudW1iZXI7IGNlbnRyYWxpdHk6IG51bWJlciB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFdoeVBhdGhMaWtlIHtcbiAgZnJvbTogc3RyaW5nO1xuICB0bzogc3RyaW5nO1xuICByZWxJZDogc3RyaW5nO1xuICB0eXBlPzogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgUmFua2VkUGF0aDxUPiB7XG4gIHBhdGg6IFQ7XG4gIHNjb3JlOiBudW1iZXI7XG4gIHNjb3JlX2JyZWFrZG93bjogU2NvcmVCcmVha2Rvd247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByYW5rUGF0aHM8VCBleHRlbmRzIFdoeVBhdGhMaWtlPihcbiAgcGF0aHM6IFRbXSxcbiAgb3B0czogUmFua2luZ09wdGlvbnMgPSB7fSxcbik6IFJhbmtlZFBhdGg8VD5bXSB7XG4gIGNvbnN0IHtcbiAgICBlZGdlV2VpZ2h0cyA9IHt9LFxuICAgIG5vZGVDZW50cmFsaXR5ID0ge30sXG4gICAgc3RyYXRlZ3kgPSBcInYyXCIsXG4gICAgd2VpZ2h0cyA9IHsgbGVuZ3RoOiAwLjM0LCBlZGdlVHlwZTogMC4zMywgY2VudHJhbGl0eTogMC4zMyB9LFxuICB9ID0gb3B0cztcblxuICBjb25zdCBtYXhDZW50cmFsaXR5ID0gTWF0aC5tYXgoLi4uT2JqZWN0LnZhbHVlcyhub2RlQ2VudHJhbGl0eSksIDEpO1xuICBjb25zdCBtYXhFZGdlV2VpZ2h0ID0gTWF0aC5tYXgoLi4uT2JqZWN0LnZhbHVlcyhlZGdlV2VpZ2h0cyksIDEpO1xuXG4gIGNvbnN0IHJhbmtlZCA9IHBhdGhzLm1hcCgocCkgPT4ge1xuICAgIGNvbnN0IGxlbmd0aCA9IDE7IC8vIGN1cnJlbnQgcGF0aHMgYXJlIHNpbmdsZSBlZGdlc1xuICAgIGNvbnN0IGxlbmd0aFNjb3JlUmF3ID0gMSAvIGxlbmd0aDsgLy8gaGlnaGVyIGlzIGJldHRlciBmb3Igc2hvcnRlciBwYXRoc1xuICAgIGNvbnN0IGVkZ2VXZWlnaHQgPSBlZGdlV2VpZ2h0c1twLnR5cGUgfHwgXCJcIl0gfHwgMTtcbiAgICBjb25zdCBlZGdlU2NvcmVSYXcgPSBlZGdlV2VpZ2h0IC8gbWF4RWRnZVdlaWdodDtcbiAgICBjb25zdCBjZW50cmFsaXR5VmFsID1cbiAgICAgICgobm9kZUNlbnRyYWxpdHlbcC5mcm9tXSB8fCAwKSArIChub2RlQ2VudHJhbGl0eVtwLnRvXSB8fCAwKSkgLyAyO1xuICAgIGNvbnN0IGNlbnRyYWxpdHlTY29yZVJhdyA9IGNlbnRyYWxpdHlWYWwgLyBtYXhDZW50cmFsaXR5O1xuXG4gICAgaWYgKHN0cmF0ZWd5ID09PSBcInYxXCIpIHtcbiAgICAgIGNvbnN0IHNjb3JlID0gbGVuZ3RoU2NvcmVSYXc7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwYXRoOiBwLFxuICAgICAgICBzY29yZSxcbiAgICAgICAgc2NvcmVfYnJlYWtkb3duOiB7IGxlbmd0aDogc2NvcmUsIGVkZ2VUeXBlOiAwLCBjZW50cmFsaXR5OiAwIH0sXG4gICAgICB9O1xuICAgIH1cblxuICAgIGNvbnN0IGJyZWFrZG93bjogU2NvcmVCcmVha2Rvd24gPSB7XG4gICAgICBsZW5ndGg6IGxlbmd0aFNjb3JlUmF3ICogd2VpZ2h0cy5sZW5ndGgsXG4gICAgICBlZGdlVHlwZTogZWRnZVNjb3JlUmF3ICogd2VpZ2h0cy5lZGdlVHlwZSxcbiAgICAgIGNlbnRyYWxpdHk6IGNlbnRyYWxpdHlTY29yZVJhdyAqIHdlaWdodHMuY2VudHJhbGl0eSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IHAsXG4gICAgICBzY29yZTogYnJlYWtkb3duLmxlbmd0aCArIGJyZWFrZG93bi5lZGdlVHlwZSArIGJyZWFrZG93bi5jZW50cmFsaXR5LFxuICAgICAgc2NvcmVfYnJlYWtkb3duOiBicmVha2Rvd24sXG4gICAgfTtcbiAgfSk7XG5cbiAgcmV0dXJuIHJhbmtlZC5zb3J0KChhLCBiKSA9PiBiLnNjb3JlIC0gYS5zY29yZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJhbmtQYXRocztcbiJdLCJ2ZXJzaW9uIjozfQ==