name: MVP-12 Governance & Crypto CI

on:
  pull_request:
    paths:
      - 'server/src/crypto/**'
      - 'server/src/dao/**'
      - 'server/src/governance/**'
      - 'db/migrations/**'
      - 'tests/crypto.spec.ts'
      - 'tests/rotation.spec.ts'
      - 'tests/governance.retention.e2e.spec.ts'
      - 'tests/isolation.fuzz.spec.ts'

jobs:
  isolation-fuzz:
    name: Isolation Fuzz Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      # In a real CI, you would start dependent services (DB, etc.) here
      # - name: Start services
      #   run: docker-compose up -d postgres neo4j
      - name: Install Dependencies
        run: npm ci
      - name: Build Code
        run: npm run build # Assuming a build step for TS -> JS
      - name: Run Isolation Fuzz Tests
        run: npm run test -- tests/isolation.fuzz.spec.ts

  crypto-and-rotation:
    name: Crypto & Rotation Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Run Crypto and Rotation Tests
        run: npm run test -- tests/crypto.spec.ts tests/rotation.spec.ts

  governance-e2e:
    name: Governance E2E Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Run Governance E2E Tests
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/testdb
        run: npm run test -- tests/governance.retention.e2e.spec.ts

  usage-agg:
    name: Usage Aggregator Integration Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
      zookeeper:
        image: bitnami/zookeeper:3.9
        ports:
          - 2181:2181
        env:
          ALLOW_ANONYMOUS_LOGIN: 'yes'
      kafka:
        image: bitnami/kafka:3.7
        ports:
          - 9092:9092
        env:
          KAFKA_CFG_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          ALLOW_PLAINTEXT_LISTENER: 'yes'
          KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092'
          KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Build Code
        run: npm run build
      - name: Run Usage Aggregator Test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
          KAFKA_BROKERS: localhost:9092
        run: npm run test -- tests/usage.aggregator.int.spec.ts
