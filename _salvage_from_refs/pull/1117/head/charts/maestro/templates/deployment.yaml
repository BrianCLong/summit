apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { include "maestro.fullname" . } }
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: { { include "maestro.name" . } }
  template:
    metadata:
      labels:
        app.kubernetes.io/name: { { include "maestro.name" . } }
    spec:
      serviceAccountName: { { include "maestro.serviceAccountName" . } }
      containers:
        - name: maestro
          image: '{{ .Values.image.repository }}:{{ .Values.image.tag }}'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet: { path: /readyz, port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
          livenessProbe:
            httpGet: { path: /healthz, port: 8080 }
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          startupProbe:
            httpGet: { path: /healthz, port: 8080 }
            failureThreshold: 30
            periodSeconds: 5
          envFrom:
            - secretRef: { name: maestro-secrets }
            - configMapRef: { name: maestro-config }
          resources:
            requests: { cpu: '250m', memory: '512Mi' }
            limits: { cpu: '1', memory: '1Gi' }
