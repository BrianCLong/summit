name: drill-restore
on:
  schedule:
    - cron: '0 7 * * 1' # weekly Monday 07:00 UTC
  workflow_dispatch: {}

jobs:
  pitr-restore-drill:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        if: ${{ secrets.AWS_PRODUCTION_ROLE && secrets.AWS_REGION }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_PRODUCTION_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_PRODUCTION_CLUSTER }}
      - name: Create temporary namespace
        run: |
          export NS=drill-restore-$(date +%Y%m%d%H%M%S)
          echo NS=$NS >> $GITHUB_ENV
          kubectl create ns $NS
      - name: Launch PITR Job
        env:
          NS: ${{ env.NS }}
        run: |
          cat <<'EOF' | kubectl -n "$NS" apply -f -
          apiVersion: batch/v1
          kind: Job
          metadata: { name: pitr-restore }
          spec:
            template:
              spec:
                restartPolicy: Never
                containers:
                  - name: wal-g
                    image: ghcr.io/wal-g/wal-g:latest
                    envFrom: [{ secretRef: { name: walg-creds } }]
                    command: ["bash","-lc"]
                    args:
                      - |
                        set -euo pipefail
                        DATA_DIR=/var/lib/postgresql/data
                        mkdir -p "$DATA_DIR" && wal-g backup-fetch "$DATA_DIR" LATEST
                        wal-g wal-fetch LATEST "$DATA_DIR/pg_wal" || true
                        echo "recovery_target_time='$(date -u --date='10 minutes ago' +%FT%TZ)'" >> "$DATA_DIR/postgresql.auto.conf"
                        echo "OK" > /drill_ok
          EOF
          kubectl -n "$NS" wait --for=condition=complete job/pitr-restore --timeout=20m
      - name: Smoke check marker
        run: |
          kubectl -n "$NS" logs job/pitr-restore | grep -q OK
      - name: Cleanup
        if: always()
        run: |
          kubectl delete ns "$NS" --wait=false
