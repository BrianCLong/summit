name: Auto-Bisect
on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
jobs:
  bisect:
    if: "${{ github.event.workflow_run.conclusion == 'failure' }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0, ref: "${{ github.event.workflow_run.head_branch }}" }
      - name: Extract failing test from artifacts (jest)
        run: |
          gh run download ${{ github.event.workflow_run.id }} -n jest-report || true
          FAIL=$(jq -r '.testResults[] | select(.status=="failed") | .name' jest-report.json | head -n1)
          echo "FAIL=$FAIL" >> $GITHUB_ENV
      - name: Bisect
        run: |
          git bisect start
          git bisect bad ${{ github.event.workflow_run.head_sha }}
          git bisect good origin/${{ github.event.workflow_run.head_branch }}~200 || true
          git bisect run bash -lc "pnpm i && npx jest --runTestsByPath \"$FAIL\""
          git bisect log > bisect.txt; git bisect reset
      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const log = fs.readFileSync('bisect.txt','utf8').split('\n').slice(0,80).join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo,
              issue_number: context.payload.workflow_run.pull_requests[0].number,
              body: "ðŸ”Ž **Auto-bisect** candidate range:\n\n```\n"+log+"\n```"
            });
