name: release
on:
  push:
    tags: [ 'v24.*' ]
concurrency:
  group: release-${{ github.ref_name }}
  cancel-in-progress: false
permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  validate-flavor:
    runs-on: ubuntu-latest
    steps:
      - name: Check CLUSTER_FLAVOR
        run: |
          case "${{ vars.CLUSTER_FLAVOR }}" in
            eks|gke|aks) echo "cluster flavor: ${{ vars.CLUSTER_FLAVOR }}" ;; 
            *)
              echo "::error::Set repo variable CLUSTER_FLAVOR to eks|gke|aks"
              exit 1
              ;; 
          esac

  build-publish:
    needs: validate-flavor
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3 # Updated to v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: build
        uses: docker/build-push-action@v5 # Updated to v5
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/intelgraph-server:${{ github.ref_name }}
      - name: Generate SBOM (syft)
        uses: anchore/syft-action@v0.21.0
        with: { image: ghcr.io/${{ github.repository_owner }}/intelgraph-server:${{ github.ref_name }}, output-file: sbom.syft.json, format: spdx-json }
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.6.0
      - name: Cosign sign image (keyless OIDC)
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign sign --yes ghcr.io/${{ github.repository_owner }}/intelgraph-server@${{ steps.build.outputs.digest }}
      - name: Cosign attest SBOM
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign attest --yes \
            --predicate sbom.syft.json \
            --type spdx \
            ghcr.io/${{ github.repository_owner }}/intelgraph-server@${{ steps.build.outputs.digest }}

  stage-verify:
    needs: build-publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Install & test
        run: |
          cd server
          npm ci
          npm run lint
          npm run typecheck
          npm test -- --ci --reporters=default --reporters=jest-junit
      - name: OPA test
        uses: open-policy-agent/setup-opa@v0.1.0 # Using a specific version for stability
      - run: opa test policy -v
      - name: SBOM + vuln scan
        uses: anchore/scan-action@v3 # Using a specific version for stability
        with: { path: ., fail-build: true, severity-cutoff: high }
      - name: Upload evidence (build/test)
        uses: actions/upload-artifact@v4
        with: { name: evidence-${{ github.ref_name }}, path: . }

  deploy-eks:
    if: ${{ vars.CLUSTER_FLAVOR == 'eks' }}
    needs: [stage-verify, build-publish]
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER: ${{ secrets.EKS_CLUSTER_NAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: aws-actions/eks-update-kubeconfig@v4
        with:
          cluster-name: ${{ env.EKS_CLUSTER }}
      - name: Helm canary 10% (pinned digest)
        run: |
          helm upgrade --install ig charts/intelgraph \
            -f charts/intelgraph/values.prod.yaml \
            --set image.tag=${{ github.ref_name }} \
            --set-string image.digest=${{ needs.build-publish.outputs.digest }} \
            --set featureFlags.v24.coherence=true
      - name: PagerDuty change
        run: |
          jq -n --arg ts "$(date -u +%FT%TZ)" '{"routing_key": env.PAGERDUTY_ROUTING_KEY, "event_action": "trigger", "payload":{"summary": "Deploy '${{ github.ref_name }}' canary 10%", "timestamp": $ts, "source": "github-actions", "severity": "info", "component": "intelgraph-server", "class": "deployment"}}' > pd.json
          curl -sS -X POST https://events.pagerduty.com/v2/enqueue -H 'Content-Type: application/json' -d @pd.json
        env: { PAGERDUTY_ROUTING_KEY: ${{ secrets.PAGERDUTY_ROUTING_KEY }} }

  deploy-gke:
    if: ${{ vars.CLUSTER_FLAVOR == 'gke' }}
    needs: [stage-verify, build-publish]
    runs-on: ubuntu-latest
    env:
      GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
      GKE_LOCATION: ${{ secrets.GKE_LOCATION }}
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v1 # Updated to v1
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/get-gke-credentials@v1 # Updated to v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_LOCATION }}
          project_id: ${{ env.PROJECT_ID }}
      - name: Helm canary 10% (pinned digest)
        run: |
          helm upgrade --install ig charts/intelgraph \
            -f charts/intelgraph/values.prod.yaml \
            --set image.tag=${{ github.ref_name }} \
            --set-string image.digest=${{ needs.build-publish.outputs.digest }} \
            --set featureFlags.v24.coherence=true
      - name: PagerDuty change
        run: |
          jq -n --arg ts "$(date -u +%FT%TZ)" '{"routing_key": env.PAGERDUTY_ROUTING_KEY, "event_action": "trigger", "payload":{"summary": "Deploy '${{ github.ref_name }}' canary 10%", "timestamp": $ts, "source": "github-actions", "severity": "info", "component": "intelgraph-server", "class": "deployment"}}' > pd.json
          curl -sS -X POST https://events.pagerduty.com/v2/enqueue -H 'Content-Type: application/json' -d @pd.json
        env: { PAGERDUTY_ROUTING_KEY: ${{ secrets.PAGERDUTY_ROUTING_KEY }} }

  deploy-aks:
    if: ${{ vars.CLUSTER_FLAVOR == 'aks' }}
    needs: [stage-verify, build-publish]
    runs-on: ubuntu-latest
    env:
      AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
      AKS_CLUSTER_NAME:  ${{ secrets.AKS_CLUSTER_NAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1 # Updated to v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - uses: azure/aks-set-context@v3 # Updated to v3
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
      - name: Helm canary 10% (pinned digest)
        run: |
          helm upgrade --install ig charts/intelgraph \
            -f charts/intelgraph/values.prod.yaml \
            --set image.tag=${{ github.ref_name }} \
            --set-string image.digest=${{ needs.build-publish.outputs.digest }} \
            --set featureFlags.v24.coherence=true
      - name: PagerDuty change
        run: |
          jq -n --arg ts "$(date -u +%FT%TZ)" '{"routing_key": env.PAGERDUTY_ROUTING_KEY, "event_action": "trigger", "payload":{"summary": "Deploy '${{ github.ref_name }}' canary 10%", "timestamp": $ts, "source": "github-actions", "severity": "info", "component": "intelgraph-server", "class": "deployment"}}' > pd.json
          curl -sS -X POST https://events.pagerduty.com/v2/enqueue -H 'Content-Type: application/json' -d @pd.json
        env: { PAGERDUTY_ROUTING_KEY: ${{ secrets.PAGERDUTY_ROUTING_KEY }} }