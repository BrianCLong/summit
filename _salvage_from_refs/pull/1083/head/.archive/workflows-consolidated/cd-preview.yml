name: CD Preview Environments

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    environment:
      name: preview-${{ github.event.pull_request.number }}
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@c9ef52556095b32f140b0c7d74474f53696d9000

      - name: Login to GHCR
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and deploy preview environment
        id: deploy
        run: |
          # Generate a unique name for the environment
          ENV_NAME="preview-${{ github.event.pull_request.number }}"
          COMPOSE_PROJECT_NAME="$ENV_NAME"

          # Create a temporary directory for the compose file
          mkdir -p /tmp/$ENV_NAME
          cp docker-compose.dev.yml /tmp/$ENV_NAME/docker-compose.yml

          # Bring up services
          docker compose -f /tmp/$ENV_NAME/docker-compose.yml up -d --build

          # Wait for server to be healthy
          SERVER_URL="http://localhost:4000"
          for i in {1..60}; do
            curl -fsS $SERVER_URL/health && break
            sleep 2
          done

          # Seed database (assuming seed script exists and can be run against the container)
          docker compose -f /tmp/$ENV_NAME/docker-compose.yml exec server npm run db:seed

          # Output URL (placeholder, actual URL depends on networking setup)
          echo "url=http://localhost:3000" >> $GITHUB_OUTPUT # Client URL

      - name: Comment PR with URL
        uses: actions/github-script@60a0d83
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview environment deployed! Access it here: ${{ steps.deploy.outputs.url }}`
            });

  teardown-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@c9ef52556095b32f140b0c7d74474f53696d9000

      - name: Teardown preview environment
        run: |
          ENV_NAME="preview-${{ github.event.pull_request.number }}"
          COMPOSE_PROJECT_NAME="$ENV_NAME"

          # Go to the temporary directory where the compose file was created
          cd /tmp/$ENV_NAME
          docker compose -f docker-compose.yml down -v