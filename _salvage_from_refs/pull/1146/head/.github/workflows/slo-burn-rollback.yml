name: slo-burn-rollback

permissions:
  contents: read
on:
  workflow_dispatch:
    inputs:
      runbook:
        description: Runbook name
        required: false
        default: conductor
      maxBurn:
        description: Max burn threshold
        required: false
        default: '0.5'

jobs:
  rollback-if-burning:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Check SLO burn
        id: check
        env:
          SLO_GATE_BASE: ${{ secrets.SLO_GATE_BASE || 'https://staging.intelgraph.example.com' }}
        run: |
          set +e
          node tools/ci/slo_gate.js --runbook "${{ github.event.inputs.runbook }}" --maxBurn "${{ github.event.inputs.maxBurn }}"
          echo "exit_code=$?" >> $GITHUB_OUTPUT
          exit 0
      - name: Install kubectl-argo-rollouts
        run: |
          VERSION=v1.6.2
          curl -sL -o kubectl-argo-rollouts https://github.com/argoproj/argo-rollouts/releases/download/${VERSION}/kubectl-argo-rollouts-linux-amd64
          sudo install -m 0755 kubectl-argo-rollouts /usr/local/bin/kubectl-argo-rollouts
      - name: Configure cluster
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_STAGING_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_STAGING_CLUSTER }}
      - name: Rollback if burning
        if: steps.check.outputs.exit_code != '0'
        run: |
          kubectl-argo-rollouts -n maestro undo rollout/maestro-server-rollout
      - name: Collect evidence
        run: |
          mkdir -p artifacts
          echo "runbook=${{ github.event.inputs.runbook }}" > artifacts/slo_rollback.txt
          date -u '+%FT%TZ' >> artifacts/slo_rollback.txt
      - name: Upload evidence
        uses: actions/upload-artifact@v4
        with:
          name: slo-rollback-evidence
          path: artifacts/slo_rollback.txt
      - name: Upload SLO evidence to WORM
        if: always()
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          BUCKET: ${{ secrets.AUDIT_WORM_BUCKET }}
        run: |
          if [ -n "$BUCKET" ]; then
            TS=$(date -u +%Y%m%dT%H%M%SZ)
            KEY="slo-evidence/${TS}-${GITHUB_SHA}.json"
            cat > evidence.json <<'EOF'
            {"source":"slo-burn-rollback","sha":"${GITHUB_SHA}","ts":"$(date -u +%FT%TZ)","runbook":"${{ github.event.inputs.runbook }}"}
            EOF
            aws s3api put-object --bucket "$BUCKET" --key "$KEY" \
              --object-lock-mode COMPLIANCE \
              --object-lock-retain-until-date "$(date -u -d '+365 days' +%Y-%m-%dT%H:%M:%SZ)" \
              --body evidence.json || true
            fi
