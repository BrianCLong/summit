# Maestro Conductor v24.4.0 - CI Trust Evidence Pipeline
# Epic E18: Provenance Integrity & Crypto Evidence - Signed manifests for all CI jobs

name: Trust Evidence Bundle

permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  COSIGN_VERSION: "2.2.2"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  generate-evidence:
    name: Generate Trust Evidence
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # for cosign
      attestations: write

    outputs:
      manifest-digest: ${{ steps.build-manifest.outputs.digest }}
      attestation-bundle: ${{ steps.attest.outputs.bundle-path }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Full history for provenance

    - name: Install cosign
      uses: sigstore/cosign-installer@v3
      with:
        cosign-release: v${{ env.COSIGN_VERSION }}

    with:
          node-version: '20'
          cache: 'pnpm'

    - name: Generate git provenance
      id: git-provenance
      run: |
        cat > git-provenance.json << EOF
        {
          "repository": "${{ github.repository }}",
          "ref": "${{ github.ref }}",
          "sha": "${{ github.sha }}",
          "actor": "${{ github.actor }}",
          "workflow": "${{ github.workflow }}",
          "runId": "${{ github.run_id }}",
          "runNumber": "${{ github.run_number }}",
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
          "eventName": "${{ github.event_name }}",
          "head": {
            "sha": "${{ github.sha }}",
            "message": "$(git log -1 --pretty=%s || echo 'Initial commit')",
            "author": "$(git log -1 --pretty=%an || echo 'Unknown')",
            "authorEmail": "$(git log -1 --pretty=%ae || echo 'unknown@example.com')",
            "committer": "$(git log -1 --pretty=%cn || echo 'Unknown')",
            "committerEmail": "$(git log -1 --pretty=%ce || echo 'unknown@example.com')",
            "timestamp": "$(git log -1 --pretty=%cI || date -u +%Y-%m-%dT%H:%M:%SZ)"
          },
          "changes": {
            "files": $(git diff --name-only HEAD~1 HEAD 2>/dev/null | jq -R -s -c 'split("\n")[:-1]' || echo '[]'),
            "additions": $(git diff --stat HEAD~1 HEAD 2>/dev/null | grep -o '[0-9]* insertion' | grep -o '[0-9]*' || echo "0"),
            "deletions": $(git diff --stat HEAD~1 HEAD 2>/dev/null | grep -o '[0-9]* deletion' | grep -o '[0-9]*' || echo "0")
          }
        }
        EOF
        echo "provenance-file=git-provenance.json" >> $GITHUB_OUTPUT

    - name: Build evidence manifest
      id: build-manifest
      run: |
        # Build comprehensive evidence manifest
        cat > evidence-manifest.json << EOF
        {
          "_type": "https://in-toto.io/Statement/v0.1",
          "subject": [
            {
              "name": "git-provenance.json",
              "digest": {
                "sha256": "$(sha256sum git-provenance.json | cut -d' ' -f1)"
              }
            }
          ],
          "predicateType": "https://slsa.dev/provenance/v1",
          "predicate": {
            "buildDefinition": {
              "buildType": "https://github.com/actions/workflow@v1",
              "externalParameters": {
                "workflow": {
                  "ref": "${{ github.ref }}",
                  "repository": "${{ github.repository }}",
                  "path": ".github/workflows/trust-evidence.yml"
                }
              },
              "internalParameters": {
                "runner": "ubuntu-latest"
              },
              "resolvedDependencies": [
                {
                  "uri": "${{ github.server_url }}/${{ github.repository }}",
                  "digest": {
                    "gitCommit": "${{ github.sha }}"
                  }
                }
              ]
            },
            "runDetails": {
              "builder": {
                "id": "https://github.com/actions/runner@v2"
              },
              "metadata": {
                "invocationId": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "startedOn": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
              }
            }
          }
        }
        EOF
        
        # Calculate manifest digest
        MANIFEST_DIGEST=$(sha256sum evidence-manifest.json | cut -d' ' -f1)
        echo "digest=$MANIFEST_DIGEST" >> $GITHUB_OUTPUT

    - name: Sign evidence manifest
      id: sign-manifest
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        # Sign the evidence manifest
        cosign sign-blob \
          --output-certificate=evidence-manifest.pem \
          --output-signature=evidence-manifest.sig \
          evidence-manifest.json

    - name: Verify signatures
      run: |
        # Verify the blob signature
        cosign verify-blob \
          --certificate=evidence-manifest.pem \
          --signature=evidence-manifest.sig \
          evidence-manifest.json
        
        echo "✅ Signature verification passed"

    - name: Upload evidence bundle
      uses: actions/upload-artifact@v4
      with:
        name: trust-evidence-${{ github.sha }}
        path: |
          evidence-manifest.json
          evidence-manifest.sig
          evidence-manifest.pem
          git-provenance.json
        retention-days: 90

    - name: Create evidence summary
      run: |
        cat > evidence-summary.md << EOF
        # 🔐 Trust Evidence Summary
        
        **Workflow**: ${{ github.workflow }}  
        **Run ID**: ${{ github.run_id }}  
        **Commit**: \`${{ github.sha }}\`  
        **Actor**: ${{ github.actor }}  
        **Timestamp**: $(date -u +%Y-%m-%dT%H:%M:%SZ)
        
        ## 📋 Evidence Components
        
        | Component | Status | Digest |
        |-----------|--------|---------|
        | Git Provenance | ✅ | \`$(sha256sum git-provenance.json | cut -d' ' -f1 | cut -c1-16)...\` |
        
        ## 🔏 Cryptographic Verification
        
        - **Manifest Digest**: \`${{ steps.build-manifest.outputs.digest }}\`
        - **Signature Algorithm**: ECDSA P-256 SHA-256
        - **Certificate Chain**: Sigstore (Fulcio)
        - **Transparency Log**: Rekor
        
        ## 🔍 Verification Commands
        
        \`\`\`bash
        # Download evidence bundle
        gh run download ${{ github.run_id }} -n trust-evidence-${{ github.sha }}
        
        # Verify manifest signature
        cosign verify-blob \\
          --certificate evidence-manifest.pem \\
          --signature evidence-manifest.sig \\
          evidence-manifest.json
        \`\`\`
        
        ---
        *This evidence bundle provides cryptographic proof of build integrity for Maestro Conductor v24.4.0*
        EOF
        
        cat evidence-summary.md >> $GITHUB_STEP_SUMMARY