name: OpenAPI Client Publish (GitHub Packages)
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: Version to publish (defaults to release tag)
        required: false

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Generate TS client SDK
        run: |
          npx -y openapi-typescript-codegen \
            --input openapi/export.yaml \
            --output tools/clients/generated-sdk \
            --client fetch --useOptions --exportCore true --exportServices true --exportModels true
      - name: Configure package for GitHub Packages
        run: |
          cd tools/clients/generated-sdk
          OWNER=${{ github.repository_owner }}
          VERSION=${{ github.event.release.tag_name || inputs.version || '0.0.0' }}
          npm pkg set name=@$OWNER/export-client >/dev/null
          npm pkg set version=$VERSION >/dev/null
          npm pkg set private=false >/dev/null
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" > .npmrc
          npm pkg set publishConfig.registry=https://npm.pkg.github.com >/dev/null
          npm publish --access public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to npmjs (optional)
        if: ${{ secrets.NPM_TOKEN != '' }}
        run: |
          cd tools/clients/generated-sdk
          # Use optional scope for public registry publish
          if [ -n "${NPM_SCOPE}" ]; then
            npm pkg set name=@${NPM_SCOPE}/export-client >/dev/null
          else
            npm pkg set name=intelgraph-export-client >/dev/null
          fi
          npm pkg set publishConfig.registry=https://registry.npmjs.org >/dev/null
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_SCOPE: ${{ secrets.NPM_SCOPE }}
