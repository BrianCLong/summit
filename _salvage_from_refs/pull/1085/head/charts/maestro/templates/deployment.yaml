apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "maestro.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "maestro.labels" . | nindent 4 }}
    app.kubernetes.io/component: orchestrator
  annotations:
    deployment.kubernetes.io/revision: "{{ .Release.Revision }}"
spec:
  replicas: {{ .Values.replicas | default 3 }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "maestro.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "maestro.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: orchestrator
        version: {{ .Values.image.tag | quote }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        {{- end }}
    spec:
      serviceAccountName: {{ include "maestro.serviceAccountName" . }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 60
      containers:
        - name: maestro
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.healthCheck.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.liveness.path }}
              port: {{ .Values.healthCheck.liveness.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.healthCheck.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.liveness.failureThreshold }}
            successThreshold: {{ .Values.healthCheck.liveness.successThreshold }}
          {{- end }}
          {{- if .Values.healthCheck.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.readiness.path }}
              port: {{ .Values.healthCheck.readiness.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.healthCheck.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.readiness.failureThreshold }}
            successThreshold: {{ .Values.healthCheck.readiness.successThreshold }}
          {{- end }}
          {{- if .Values.healthCheck.startup.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.healthCheck.startup.path }}
              port: {{ .Values.healthCheck.startup.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.healthCheck.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.startup.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.startup.failureThreshold }}
            successThreshold: {{ .Values.healthCheck.startup.successThreshold }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      dnsPolicy: ClusterFirst
