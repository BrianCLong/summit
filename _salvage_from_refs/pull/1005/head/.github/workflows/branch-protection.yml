name: Configure Branch Protection

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to protect"
        required: true
        default: "main"
      enforce_admins:
        description: "Enforce admins"
        required: false
        default: "true"
      require_linear_history:
        description: "Require linear history"
        required: false
        default: "true"
      required_approving_review_count:
        description: "Required PR reviews"
        required: false
        default: "1"

jobs:
  protect:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Derive repo env
        run: |
          echo "REPO_OWNER=${GITHUB_REPOSITORY%/*}" >> $GITHUB_ENV
          echo "REPO_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      - name: Apply protection rules
        env:
          TOKEN: ${{ secrets.ADMIN_TOKEN }}
          OWNER: ${{ env.REPO_OWNER }}
          REPO: ${{ env.REPO_NAME }}
          BRANCH: ${{ github.event.inputs.branch }}
          ENFORCE_ADMINS: ${{ github.event.inputs.enforce_admins }}
          LINEAR: ${{ github.event.inputs.require_linear_history }}
          REVIEWS: ${{ github.event.inputs.required_approving_review_count }}
        run: |
          if [ -z "$TOKEN" ]; then
            echo "Missing ADMIN_TOKEN secret with repo admin scope" >&2
            exit 1
          fi
          # Build JSON
          jq -n \
            --argjson enforce_admins $( [ "$ENFORCE_ADMINS" = "true" ] && echo true || echo false ) \
            --argjson linear $( [ "$LINEAR" = "true" ] && echo true || echo false ) \
            --argjson reviews ${REVIEWS:-1} \
            '{
              required_status_checks: null,
              enforce_admins: $enforce_admins,
              required_pull_request_reviews: { required_approving_review_count: $reviews },
              restrictions: null,
              require_linear_history: $linear,
              allow_force_pushes: false,
              allow_deletions: false
            }' > body.json
          curl -sSf -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token $TOKEN" \
            "https://api.github.com/repos/$OWNER/$REPO/branches/$BRANCH/protection" \
            --data @body.json

