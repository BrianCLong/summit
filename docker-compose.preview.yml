version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: intelgraph_preview
      POSTGRES_USER: preview_user
      POSTGRES_PASSWORD: preview_pass
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U preview_user -d intelgraph_preview']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

  neo4j:
    image: neo4j:5-enterprise
    environment:
      NEO4J_AUTH: neo4j/preview_pass
      NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes'
      NEO4J_server_memory_heap_initial__size: 512m
      NEO4J_server_memory_heap_max__size: 1g
    ports:
      - '7688:7687'
      - '7475:7474'
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test:
        ['CMD', 'cypher-shell', '-u', 'neo4j', '-p', 'preview_pass', 'RETURN 1']
      interval: 30s
      timeout: 10s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '4001:4000'
    environment:
      NODE_ENV: preview
      DATABASE_URL: postgresql://preview_user:preview_pass@postgres:5432/intelgraph_preview
      REDIS_URL: redis://redis:6379
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: preview_pass
      LOG_LEVEL: info
      CORS_ORIGINS: http://localhost:3001,http://localhost:3000
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/health']
      interval: 30s
      timeout: 10s
      retries: 5

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '3001:3000'
    environment:
      REACT_APP_API_URL: http://localhost:4001
      REACT_APP_GRAPHQL_URL: http://localhost:4001/graphql
      REACT_APP_WS_URL: ws://localhost:4001/graphql
    depends_on:
      server:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  neo4j_logs:

networks:
  default:
    name: intelgraph_preview
