# ================================
# IntelGraph Platform Configuration
# ================================

# Environment
NODE_ENV=development
PORT=4000
CLIENT_PORT=3000

# Application
APP_NAME=IntelGraph Platform
APP_VERSION=1.0.0
APP_URL=http://localhost:3000
API_URL=http://localhost:4000
# Vite client env vars
VITE_API_URL=http://localhost:4000/graphql
VITE_WS_URL=http://localhost:4000

# Telemetry
TELEMETRY_CONSENT=false
TELEMETRY_STORAGE=device # device|session
TELEMETRY_SAMPLE_PCT=100
TELEMETRY_SINK=stdout # stdout|file
TELEMETRY_FILE=telemetry.log

# Database - Neo4j
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=devpassword
NEO4J_DATABASE=neo4j

# Database - PostgreSQL
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=intelgraph_dev
POSTGRES_USER=intelgraph
POSTGRES_PASSWORD=devpassword

# Database - TimescaleDB
TIMESCALEDB_HOST=localhost
TIMESCALEDB_PORT=5433
TIMESCALEDB_DB=intelgraph_timeseries
TIMESCALEDB_USER=timescale
TIMESCALEDB_PASSWORD=devpassword

# Database - Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=devpassword
REDIS_DB=0

# Authentication
JWT_SECRET=your_jwt_secret_key_change_in_production_12345
JWT_EXPIRES_IN=24h
JWT_REFRESH_SECRET=your_refresh_secret_key_change_in_production_67890
JWT_REFRESH_EXPIRES_IN=7d

# Security
BCRYPT_ROUNDS=12
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
CORS_ORIGIN=http://localhost:3000

# File Storage
UPLOAD_PATH=./uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=jpg,jpeg,png,pdf,docx,xlsx

# Monitoring
LOG_LEVEL=info
ENABLE_METRICS=true
METRICS_PORT=9090

# Feature Flags
ENABLE_AI_FEATURES=true
ENABLE_REAL_TIME=true
ENABLE_ANALYTICS=true
ENABLE_PLUGINS=true

# Development
DEBUG=intelgraph:*
WEBPACK_DEV_SERVER=true
HOT_RELOAD=true

# Development
DEBUG=intelgraph:*
CHOKIDAR_USEPOLLING=true

# AI/ML Configuration
AI_MODELS_PATH=src/ai/models
AI_TEMP_PATH=/tmp/intelgraph
AI_PYTHON_PATH=venv/bin/python
AI_ENABLE_GPU=true
AI_MAX_CONCURRENT_JOBS=5
AI_BATCH_SIZE=32

# OCR Configuration
OCR_DEFAULT_ENGINE=tesseract
OCR_LANGUAGES=eng,deu,fra,spa,chi_sim
OCR_CONFIDENCE_THRESHOLD=0.6
OCR_ENHANCE_IMAGE=true

# Object Detection Configuration
OBJECT_DETECTION_MODEL=yolov8n.pt
OBJECT_DETECTION_CONFIDENCE=0.5
OBJECT_DETECTION_NMS_THRESHOLD=0.4
OBJECT_DETECTION_MAX_DETECTIONS=100

# Face Detection Configuration
FACE_DETECTION_MODEL=mtcnn
FACE_DETECTION_MIN_SIZE=20
FACE_DETECTION_CONFIDENCE=0.7
FACE_DETECTION_EXTRACT_FEATURES=true

# Speech Recognition Configuration
SPEECH_MODEL=whisper-base
SPEECH_LANGUAGES=en,de,fr,es,auto
SPEECH_ENABLE_DIARIZATION=false
SPEECH_ENHANCE_AUDIO=true
SPEECH_WORD_TIMESTAMPS=true

# Text Analysis Configuration
TEXT_ANALYSIS_MODEL=en_core_web_lg
TEXT_ANALYSIS_EXTRACT_ENTITIES=true
TEXT_ANALYSIS_SENTIMENT=true
TEXT_ANALYSIS_TOPICS=false
TEXT_ANALYSIS_LANGUAGE_DETECTION=true

# Embedding Configuration
EMBEDDING_MODEL=all-MiniLM-L6-v2
EMBEDDING_NORMALIZE=true
EMBEDDING_POOLING=mean
EMBEDDING_DIMENSION=384

# Vector Search Configuration
VECTOR_SIMILARITY_THRESHOLD=0.7
VECTOR_TOP_K=10
VECTOR_ENABLE_CLUSTERING=true

# ML Microservice (Legacy)
UVICORN_HOST=0.0.0.0
UVICORN_PORT=8081
REDIS_URL=redis://:devpassword@redis:6379/0 # Example for Docker Compose
JWT_PUBLIC_KEY=your_ml_jwt_public_key # Public key for ML service to verify JWTs
ML_WEBHOOK_SECRET=dev_ml_webhook_secret # Secret for ML webhook
USE_SPACY=false # Enable Spacy for NLP

# Feature Flags
DISABLE_SOCKET_AUTH=0 # Disable Socket.IO authentication (0 for enabled, 1 for disabled)
# Prov-ledger and gateway services
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASS=pass
OPA_URL=http://localhost:8181/v1/data/intelgraph/exports
PORT=4001
