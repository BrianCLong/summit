*** a/conductor-ui/frontend/src/maestro/api.ts
--- b/conductor-ui/frontend/src/maestro/api.ts
@@
 export function getRunComparePrevious(runId: string) {
   const base = (window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1';
   return fetch(`${base}/runs/${runId}/compare/previous`).then(r => r.json());
 }
+// EvalOps
+export const listEvalSuites = () => fetch(((window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1') + '/evals/suites').then(r=>r.json());
+export const runEvalSuite = (payload:any) => fetch(((window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1') + '/evals/run', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload||{}) }).then(r=>r.json());
+export const listScorecards = (p?:{suite?:string}) => {
+  const base = (window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1';
+  const qs = new URLSearchParams(); if (p?.suite) qs.set('suite', p.suite);
+  return fetch(`${base}/evals/scorecards?${qs}`).then(r=>r.json());
+};
+export const checkGate = (payload:any) => fetch(((window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1') + '/gates/check', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload||{}) }).then(r=>r.json());
+// Agent/HITL
+export const createAgentRun = () => fetch(((window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1') + '/agent/runs', { method:'POST' }).then(r=>r.json());
+export const getAgentRun = (id:string) => fetch(((window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1') + `/agent/runs/${id}`).then(r=>r.json());
+export const actOnAgentRun = (id:string, payload:any) => fetch(((window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1') + `/agent/runs/${id}/actions`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload||{}) }).then(r=>r.json());
+// Router decision
+export const getRoutingDecision = (runId:string, nodeId:string) => fetch(((window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1') + `/routing/decision/${runId}/${nodeId}`).then(r=>r.json());
+// AlertCenter correlated events
+export const getAlertCenterEvents = (p?:{type?:string;severity?:string;tenant?:string;provider?:string}) => {
+  const base = (window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1';
+  const qs = new URLSearchParams(); ['type','severity','tenant','provider'].forEach(k => { const v=(p as any)?.[k]; if (v) qs.set(k, String(v)); });
+  return fetch(`${base}/alertcenter/events?${qs}`).then(r=>r.json());
+};
