Epic ID,Epic,Priority,Story ID,Story Title,Description,Acceptance Criteria,API/Backend,UI/Frontend,Tests,Status,Estimate (pts),Owner,Depends On
E1,MCP-first tool interop,P0,E1-S1,MCP servers registry (CRUD),"Persist a registry of MCP servers with auth, scopes, health, and tags.",Create/read/update/delete servers; health check succeeds; scopes are persisted.,POST/GET/PUT/DELETE /api/maestro/v1/mcp/servers; GET /mcp/servers/:id/health,New page: pages/MCPRegistry.tsx; table + create dialog.,server unit tests; API contract tests; UI smoke.,Ready,5,,
E1,MCP-first tool interop,P0,E1-S2,Attach MCP server to run (session),Attach/detach MCP servers per run; bind scopes to a signed session token.,POST /runs/:id/mcp/sessions (attach); DELETE /runs/:id/mcp/sessions/:sid; evidence includes session meta.,RunDetail → Evidence shows attached servers and scopes; Node Inspector shows active tools.,integration test: denied tool without scope; UI test: Evidence renders.,Ready,5,,E1-S1,
E1,MCP-first tool interop,P0,E1-S3,Scoped tool invocation + audit,"Enforce per-tool scopes; log each invocation with tool, args hash, result hash.",POST /runs/:id/mcp/invoke; policy middleware validates scopes; writes audit event.,Node Inspector → 'Tools' subpanel lists invocations; Evidence lists audit entries.,security test: missing scope → 403; audit log content test.,Ready,5,,E1-S2,
E2,Remote graphs,P0,E2-S1,Remote node type & spec,"Introduce a 'remote' nodeKind with endpoint, queueing, retries, and checkpoint contract.",NodeKind=remote accepted in /pipelines and /runs; persisted with config.,DAG editor supports remote badge; tooltip explains endpoint and policy.,unit: schema validation; e2e: run executes remote node via stub.,Ready,5,3,,
E2,Remote graphs,P0,E2-S2,Lifecycle control (suspend/resume/kill),Control remote nodes during a run with safe state transitions.,POST /runs/:id/nodes/:nodeId/{suspend|resume|kill},RunDetail → Node actions menu; Timeline shows state changes.,e2e: suspend/resume/kill; state consistency on refresh.,Ready,3,,E2-S1,
E2,Remote graphs,P0,E2-S3,Resumability from last checkpoint,Restart failed/paused runs from the last successful checkpoint.,POST /runs/:id/resume?from=checkpoint; GET /runs/:id/checkpoints,RunDetail → 'Resume from checkpoint' button; list of checkpoints.,e2e: resume reproduces state; unit: checkpoint serialization.,Ready,5,,E2-S1,
E3,EvalOps gates,P0,E3-S1,Datasets (CRUD),"Create and manage datasets (golden tasks, labels, refs).",POST/GET/PUT/DELETE /evals/datasets,pages/EvalsDatasets.tsx; upload CSV/JSON; preview table.,unit: schema; ui: upload & preview.,Ready,3,3,,
E3,EvalOps gates,P0,E3-S2,Evaluators (CRUD),"Define evaluators (LLM-as-judge, metrics, custom).",POST/GET/PUT/DELETE /evals/evaluators,pages/EvalsEvaluators.tsx; picker for metrics & weights.,unit: evaluator registry; ui: form validations.,Ready,3,,E3-S1,
E3,EvalOps gates,P0,E3-S3,Gates & CI integration,Create gates with thresholds; wire to pipeline Validate and CI tab.,POST/GET/PUT/DELETE /evals/gates; POST /gates/check; emit CI annotation on fail.,RunDetail → Scorecards shows gate verdicts; CICD tab links back to results.,e2e: failing gate blocks canary/pin; annotation contains details.,Ready,5,,E3-S2,
E4,Routing+,P0,E4-S1,Pluggable strategies (latency/cost/rate/least-busy),Strategy registry configurable per route with weights.,GET/PUT /routing/strategies; strategies persisted per route.,RoutingStudio → 'Strategy' section with sliders & presets.,unit: strategy weights; e2e: strategy persists.,Ready,5,3,,
E4,Routing+,P0,E4-S2,Simulation & fault injection,Simulate route given traffic traces and inject 429/5xx to test fallbacks.,POST /routing/simulate; POST /routing/inject_fault,RoutingStudio → 'Simulate' drawer with charts; 'Inject fault' button.,e2e: fallback path recorded; ui: charts render.,Ready,5,,E4-S1,
E4,Routing+,P0,E4-S3,Canary auto-promote/demote by objectives,Tie Watchdog + Gates to auto-promote/demote pins by SLO/cost objectives.,PUT /routing/canary/config; events on promote/demote,RoutingStudio → Canary card; status & history.,integration: events flow; e2e: promote on green.,Ready,3,,"E4-S2,E3-S3",
E5,OTel tracing,P0,E5-S1,OTLP export from gateway & nodes,"Emit spans (run_id, node_id, model, tokens, latency, cost) to configured OTLP sink.",PUT /otel/config; spans include attributes per spec.,Observability → Trace viewer tab (simple list if no OTLP).,unit: attribute schema; e2e: spans received in collector.,Ready,5,3,,
E5,OTel tracing,P0,E5-S2,Span stitching across gateway→DAG→serving,Propagate traceparent; stitch spans through providers and serving lane.,middleware adds w3c trace context; serving clients emit child spans.,Trace viewer shows contiguous path with timing bars.,e2e: single trace across path; latency breakdown sums ~ total.,Ready,5,,E5-S1,
E6,Guardrails,P0,E6-S1,Policy definitions & pre/post rails,"Define rails (PII, jailbreak, toxicity) with actions: block/redact/allow.",POST/GET/PUT/DELETE /guardrails/policies; POST /guardrails/simulate,RunDetail → Guardrail panel; Policy Explain available.,unit: policy eval; e2e: simulate returns different outcomes.,Ready,5,3,,
E6,Guardrails,P0,E6-S2,Detector integrations (Lakera/NeMo placeholders),Adapter interfaces for detectors; mock connectors in stub.,Detector plugins under /guardrails/providers; wiring in policy engine.,UI shows which detectors fired and links to docs.,unit: plugin interface; ui: detector badges.,Ready,3,,E6-S1,
E7,Builder,P0,E7-S1,Templates registry & gallery,"Registry for starter templates (RAG bot, triage agent, research crew).",GET/POST /templates; GET /templates/:id,pages/Builder.tsx → gallery + details.,ui: renders gallery; unit: template schema.,Ready,3,3,,
E7,Builder,P0,E7-S2,Instantiate template → pipeline + PR,"Instantiate into a project, open a PR with pipeline, gates, and CI config.",POST /templates/:id/instantiate,Flow: pick template → name → Create; shows link to PR (stub).,e2e: pipeline appears; PR link stored.,Ready,5,,E7-S1,
E8,KB,P1,E8-S1,KB registry & connectors,Register KBs with connectors (S3/GDrive/Confluence/etc.) and sync policies.,POST/GET/PUT/DELETE /kb; POST /kb/:id/sync,pages/KB.tsx; connector cards; sync button.,unit: connector config; ui: list + sync.,Ready,5,3,,
E8,KB,P1,E8-S2,Retrieval eval integration,Hook KBs into EvalOps (RAG triad and hallucination checks).,POST /evals/run?k=kb_id&type=rag,Eval scorecards show retriever metrics.,e2e: eval run shows metrics; gate can include RAG triad.,Ready,5,,"E3-S2,E3-S3,E8-S1",
E9,Progressive delivery,P1,E9-S1,Traffic sharding/cohorts,"Shard traffic by cohorts (internal, beta, % rollouts).",PUT /routing/cohorts; GET /routing/traffic,RoutingStudio → Cohorts panel with sliders.,e2e: traffic follows cohorts; unit: config schema.,Ready,5,3,,
E9,Progressive delivery,P1,E9-S2,Auto-promote/rollback hooks,Tie promote/rollback to gates & SLOs (uses Watchdog).,Events: promote/rollback; thresholds configured per route.,RoutingStudio → status + history.,e2e: failing SLO triggers rollback; passing gates promote.,Ready,5,,"E9-S1,E4-S3",
E10,Chargeback,P1,E10-S1,Tags & cost allocation,"Per-run tags (team, project) and reports.",PUT /runs/:id/tags; GET /reports/costs?groupBy=tag,pages/CostsChargeback.tsx; export CSV.,unit: report agg; ui: download works.,Ready,3,3,,
E10,Chargeback,P1,E10-S2,Budgets per cost center + alerts,Budgets for tags; alerts integrate AlertCenter.,PUT /budgets/tags; alerts emit on breach.,Costs page shows budget status and recent alerts.,e2e: breach creates alert; ui: status badge.,Ready,3,,E10-S1,
E11,Serving metrics,P1,E11-S1,Prometheus ingest (vLLM/Ray/Triton/KServe),"Scrape/ingest selected metrics (queue depth, batch size, KV hit, p95).",GET /serving/metrics/prom (stub); mapping config under /serving/config,Observability → Serving trends charts.,e2e: metrics render; unit: mapping functions.,Ready,5,3,,
E11,Serving metrics,P1,E11-S2,SLOs & alerts for serving lane,Define SLOs on serving metrics; emit AlertCenter events on burn.,PUT /serving/slo; events to /alertcenter,Observability shows SLO badges & burn rate.,e2e: burn triggers alert; ui: badge changes.,Ready,3,,"E11-S1,E3-S3",
E12,Policy explain,P2,E12-S1,Unify PolicyExplain component,"Single component used in Router Decision, Plan Validate, Guardrails.",No new endpoint (reuse /policies/explain),Shared component under components/PolicyExplain; used in three surfaces.,ui: snapshot tests in each surface.,Ready,2,3,,
E12,Policy explain,P2,E12-S2,Cross-link rule IDs to docs,Clickable rule IDs open docs drawer.,GET /policies/docs/:ruleId (stub),Rule ID link opens side drawer with doc excerpt.,ui: link works; unit: docs stub resolves.,Ready,2,,E12-S1,
E13,Provenance,P2,E13-S1,Sign plan & outputs (Cosign),Sign pipeline plan and produced artifacts; store signatures and certs.,POST /provenance/sign; GET /runs/:id/evidence (extended),Evidence tab shows signatures & verify action.,e2e: verify passes; tamper → verify fails.,Ready,5,3,,
E13,Provenance,P2,E13-S2,Lineage graph,Graph linking inputs→steps→artifacts with signature edges.,GET /runs/:id/lineage,Evidence → 'Lineage' mini-graph view.,ui: renders graph; unit: shape validation.,Ready,3,,E13-S1,
E14,Bandit routing,P2,E14-S1,Reward pipeline & offline simulator,Collect rewards from eval scores & SLOs; run offline bandit simulation.,POST /routing/rewards; POST /routing/bandit/sim,RoutingStudio → 'Learning' tab with offline sim results.,unit: reward ingestion; e2e: sim produces expected charts.,Ready,5,3,,
E14,Bandit routing,P2,E14-S2,Online bandit with safety guards,Deploy epsilon-greedy/Thompson with cohort guardrails and auto-revert.,PUT /routing/bandit/config; events on anomalies,Learning tab shows live weights; auto-revert path logged.,e2e: weights adapt; safety guard halts on bad reward.,Ready,5,,"E14-S1,E4-S3",
