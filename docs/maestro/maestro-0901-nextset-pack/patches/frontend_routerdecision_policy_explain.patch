*** a/conductor-ui/frontend/src/maestro/components/RouteDecisionPanel.tsx
--- b/conductor-ui/frontend/src/maestro/components/RouteDecisionPanel.tsx
@@
-import React, { useEffect, useState } from 'react';
+import React, { useEffect, useState } from 'react';
 import { getRoutingDecision } from '../api';
+import PolicyExplainDialog from './PolicyExplainDialog';
@@
 export default function RouteDecisionPanel({ runId, nodeId }: { runId: string, nodeId: string }) {
   const [data, setData] = useState<any | null>(null);
   const [err, setErr] = useState<string | null>(null);
+  const [showExplain, setShowExplain] = useState(false);
+  const [explain, setExplain] = useState<any | null>(null);
@@
   useEffect(() => {
     getRoutingDecision(runId, nodeId).then(setData).catch(e=>setErr(String(e)));
   }, [runId, nodeId]);
@@
   return (
     <section className="mt-3 border rounded-xl p-3 bg-white shadow-sm" aria-label="Routing decision panel">
       <div className="text-sm">Node <span className="font-mono">{nodeId}</span> selected <b>{data.selected.model}</b></div>
       <div className="text-xs text-gray-600 mt-1">Reasons: {(data.reasons||[]).join(', ')}</div>
+      <div className="mt-2">
+        <button className="border rounded px-3 py-1" onClick={async ()=>{
+          // Reuse existing policy explain contract if available
+          try {
+            const base = (window as any).__MAESTRO_CFG__?.gatewayBase ?? '/api/maestro/v1';
+            const resp = await fetch(`${base}/policies/explain`, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ action:'route.select', runId, nodeId, candidate: data.selected?.model })});
+            const json = await resp.json();
+            setExplain(json);
+            setShowExplain(true);
+          } catch(e:any) {
+            setExplain({ allow:false, reasons:[String(e)] });
+            setShowExplain(true);
+          }
+        }}>Explain policy</button>
+      </div>
@@
     </section>
+    <PolicyExplainDialog open={showExplain} onClose={()=>setShowExplain(false)} data={explain} />
   );
 }
