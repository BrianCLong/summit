apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: maestro-secrets
  namespace: maestro-system
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: 'false'
spec:
  encryptedData:
    POSTGRES_URL: 'REDACTED_USE_KUBESEAL'
    REDIS_URL: 'REDACTED_USE_KUBESEAL'
    JWT_SECRET: 'REDACTED_USE_KUBESEAL'
    SESSION_SECRET: 'REDACTED_USE_KUBESEAL'
    AUTH0_DOMAIN: 'REDACTED_USE_KUBESEAL'
    AUTH0_CLIENT_ID: 'REDACTED_USE_KUBESEAL'
    AUTH0_CLIENT_SECRET: 'REDACTED_USE_KUBESEAL'
    AZURE_TENANT_ID: 'REDACTED_USE_KUBESEAL'
    AZURE_CLIENT_ID: 'REDACTED_USE_KUBESEAL'
    AZURE_CLIENT_SECRET: 'REDACTED_USE_KUBESEAL'
    GOOGLE_CLIENT_ID: 'REDACTED_USE_KUBESEAL'
    GOOGLE_CLIENT_SECRET: 'REDACTED_USE_KUBESEAL'
    BASE_URL: 'REDACTED_USE_KUBESEAL'
    OTEL_EXPORTER_OTLP_ENDPOINT: 'REDACTED_USE_KUBESEAL'
  template:
    metadata:
      name: maestro-secrets
      namespace: maestro-system
    type: Opaque
# To generate encrypted values:
# 1) kubectl -n kube-system get secret sealed-secrets-key -o yaml (or fetch public cert)
# 2) echo -n 'value' | kubeseal --cert pubkey.pem --format=yaml --name maestro-secrets --namespace maestro-system --from-file=/dev/stdin
# 3) Replace the encryptedData values above with outputs
