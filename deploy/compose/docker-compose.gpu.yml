services:
  # GPU-enabled ML Service
  intelgraph-ml-gpu:
    build:
      context: ./ml
      dockerfile: Dockerfile.gpu
    environment:
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8081
      - REDIS_URL=redis://:devpassword@redis:6379/0
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
      - ML_WEBHOOK_SECRET=${ML_WEBHOOK_SECRET:-dev_ml_webhook_secret}
      - USE_SPACY=true
      - CUDA_VISIBLE_DEVICES=0
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - redis
    ports:
      - "8081:8081"
    networks:
      - intelgraph-gpu

  # GPU ML Worker
  intelgraph-ml-worker-gpu:
    build:
      context: ./ml
      dockerfile: Dockerfile.gpu
    command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=INFO", "--concurrency=1"]
    environment:
      - REDIS_URL=redis://:devpassword@redis:6379/0
      - ML_WEBHOOK_SECRET=${ML_WEBHOOK_SECRET:-dev_ml_webhook_secret}
      - USE_SPACY=true
      - CUDA_VISIBLE_DEVICES=0
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - intelgraph-ml-gpu
      - redis
    networks:
      - intelgraph-gpu

  # Infrastructure services (using existing configs)
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass devpassword --appendonly yes
    volumes:
      - redis_gpu_data:/data
    ports:
      - "6379:6379"
    networks:
      - intelgraph-gpu

  neo4j:
    image: neo4j:5.9-community
    environment:
      - NEO4J_AUTH=neo4j/devpassword
      - NEO4J_dbms_memory_heap_initial__size=2G
      - NEO4J_dbms_memory_heap_max__size=4G
      - NEO4J_dbms_memory_pagecache_size=2G
    volumes:
      - neo4j_gpu_data:/data
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - intelgraph-gpu

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=intelgraph_gpu
      - POSTGRES_USER=intelgraph
      - POSTGRES_PASSWORD=devpassword
    volumes:
      - postgres_gpu_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - intelgraph-gpu

volumes:
  redis_gpu_data:
  neo4j_gpu_data:
  postgres_gpu_data:

networks:
  intelgraph-gpu:
    driver: bridge