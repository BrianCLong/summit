3664c75dbcabc86f7bcaec7f691ea73e
// server/server.ts
async function pingDatabase() {
    const start = Date.now();
    // In a real app, this would connect to the DB and run a simple query like `SELECT 1`.
    await new Promise(res => setTimeout(res, 50)); // Simulate DB ping latency
    const latency = Date.now() - start;
    console.log(`Database ping successful in ${latency}ms`);
    return { status: 'ok', latency };
}
async function healthCheck(req, res) {
    try {
        // Old: // TODO: ping DB/queue
        const dbStatus = await pingDatabase();
        res.send({ status: 'ok', dependencies: { database: dbStatus } });
    }
    catch (error) {
        res.status(503).send({ status: 'error', message: error.message });
    }
}
// Example usage
const app = {
    get: (path, handler) => { },
};
app.get("/healthz", healthCheck);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3NlcnZlci9zZXJ2ZXIudHMiLCJtYXBwaW5ncyI6IkFBQ0EsbUJBQW1CO0FBRW5CLEtBQUssVUFBVSxZQUFZO0lBQ3ZCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUN6QixzRkFBc0Y7SUFDdEYsTUFBTSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLDJCQUEyQjtJQUMxRSxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQ25DLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLE9BQU8sSUFBSSxDQUFDLENBQUM7SUFDeEQsT0FBTyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUM7QUFDckMsQ0FBQztBQUVELEtBQUssVUFBVSxXQUFXLENBQUMsR0FBUSxFQUFFLEdBQVE7SUFDekMsSUFBSSxDQUFDO1FBQ0QsOEJBQThCO1FBQzlCLE1BQU0sUUFBUSxHQUFHLE1BQU0sWUFBWSxFQUFFLENBQUM7UUFDdEMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsWUFBWSxFQUFFLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBQUMsT0FBTyxLQUFVLEVBQUUsQ0FBQztRQUNsQixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7QUFDTCxDQUFDO0FBRUQsZ0JBQWdCO0FBQ2hCLE1BQU0sR0FBRyxHQUFHO0lBQ1IsR0FBRyxFQUFFLENBQUMsSUFBWSxFQUFFLE9BQXFDLEVBQUUsRUFBRSxHQUFFLENBQUM7Q0FDbkUsQ0FBQztBQUNGLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbmxvbmcvRGV2ZWxvcGVyL3N1bW1pdC9zZXJ2ZXIvc2VydmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuLy8gc2VydmVyL3NlcnZlci50c1xuXG5hc3luYyBmdW5jdGlvbiBwaW5nRGF0YWJhc2UoKTogUHJvbWlzZTx7IHN0YXR1czogc3RyaW5nOyBsYXRlbmN5OiBudW1iZXIgfT4ge1xuICAgIGNvbnN0IHN0YXJ0ID0gRGF0ZS5ub3coKTtcbiAgICAvLyBJbiBhIHJlYWwgYXBwLCB0aGlzIHdvdWxkIGNvbm5lY3QgdG8gdGhlIERCIGFuZCBydW4gYSBzaW1wbGUgcXVlcnkgbGlrZSBgU0VMRUNUIDFgLlxuICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlcyA9PiBzZXRUaW1lb3V0KHJlcywgNTApKTsgLy8gU2ltdWxhdGUgREIgcGluZyBsYXRlbmN5XG4gICAgY29uc3QgbGF0ZW5jeSA9IERhdGUubm93KCkgLSBzdGFydDtcbiAgICBjb25zb2xlLmxvZyhgRGF0YWJhc2UgcGluZyBzdWNjZXNzZnVsIGluICR7bGF0ZW5jeX1tc2ApO1xuICAgIHJldHVybiB7IHN0YXR1czogJ29rJywgbGF0ZW5jeSB9O1xufVxuXG5hc3luYyBmdW5jdGlvbiBoZWFsdGhDaGVjayhyZXE6IGFueSwgcmVzOiBhbnkpIHtcbiAgICB0cnkge1xuICAgICAgICAvLyBPbGQ6IC8vIFRPRE86IHBpbmcgREIvcXVldWVcbiAgICAgICAgY29uc3QgZGJTdGF0dXMgPSBhd2FpdCBwaW5nRGF0YWJhc2UoKTtcbiAgICAgICAgcmVzLnNlbmQoeyBzdGF0dXM6ICdvaycsIGRlcGVuZGVuY2llczogeyBkYXRhYmFzZTogZGJTdGF0dXMgfSB9KTtcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAzKS5zZW5kKHsgc3RhdHVzOiAnZXJyb3InLCBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0pO1xuICAgIH1cbn1cblxuLy8gRXhhbXBsZSB1c2FnZVxuY29uc3QgYXBwID0ge1xuICAgIGdldDogKHBhdGg6IHN0cmluZywgaGFuZGxlcjogKHJlcTogYW55LCByZXM6IGFueSkgPT4gdm9pZCkgPT4ge30sXG59O1xuYXBwLmdldChcIi9oZWFsdGh6XCIsIGhlYWx0aENoZWNrKTtcbiJdLCJ2ZXJzaW9uIjozfQ==