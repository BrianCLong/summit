{"file":"/Users/brianlong/Developer/summit/server/server.ts","mappings":"AACA,mBAAmB;AAEnB,KAAK,UAAU,YAAY;IACvB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACzB,sFAAsF;IACtF,MAAM,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,2BAA2B;IAC1E,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;IACnC,OAAO,CAAC,GAAG,CAAC,+BAA+B,OAAO,IAAI,CAAC,CAAC;IACxD,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AACrC,CAAC;AAED,KAAK,UAAU,WAAW,CAAC,GAAQ,EAAE,GAAQ;IACzC,IAAI,CAAC;QACD,8BAA8B;QAC9B,MAAM,QAAQ,GAAG,MAAM,YAAY,EAAE,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IACrE,CAAC;IAAC,OAAO,KAAU,EAAE,CAAC;QAClB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IACtE,CAAC;AACL,CAAC;AAED,gBAAgB;AAChB,MAAM,GAAG,GAAG;IACR,GAAG,EAAE,CAAC,IAAY,EAAE,OAAqC,EAAE,EAAE,GAAE,CAAC;CACnE,CAAC;AACF,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/server.ts"],"sourcesContent":["\n// server/server.ts\n\nasync function pingDatabase(): Promise<{ status: string; latency: number }> {\n    const start = Date.now();\n    // In a real app, this would connect to the DB and run a simple query like `SELECT 1`.\n    await new Promise(res => setTimeout(res, 50)); // Simulate DB ping latency\n    const latency = Date.now() - start;\n    console.log(`Database ping successful in ${latency}ms`);\n    return { status: 'ok', latency };\n}\n\nasync function healthCheck(req: any, res: any) {\n    try {\n        // Old: // TODO: ping DB/queue\n        const dbStatus = await pingDatabase();\n        res.send({ status: 'ok', dependencies: { database: dbStatus } });\n    } catch (error: any) {\n        res.status(503).send({ status: 'error', message: error.message });\n    }\n}\n\n// Example usage\nconst app = {\n    get: (path: string, handler: (req: any, res: any) => void) => {},\n};\napp.get(\"/healthz\", healthCheck);\n"],"version":3}