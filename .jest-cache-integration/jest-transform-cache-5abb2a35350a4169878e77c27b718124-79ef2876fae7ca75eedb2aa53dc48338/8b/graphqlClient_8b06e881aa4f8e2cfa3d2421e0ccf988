031e8ad16558f35345fad5f4c66460a6
const { http } = require('./httpClient');
async function createGraphQLClient(app) {
    const client = http(app); // Will work for both cases: app provided (in-process) or TEST_BASE_URL set (external)
    return {
        query: async function (options = {}) {
            const { query = '', variables } = options;
            // If no query is provided, use a default (for backward compatibility with existing test)
            const actualQuery = query || '{ entity { id } }';
            const res = await client.post('/graphql').send({ query: actualQuery, variables });
            return {
                status: res.status,
                body: res.body,
                headers: res.headers,
            };
        },
        mutate: async function (options = {}) {
            const { query = '', variables } = options;
            const res = await client.post('/graphql').send({ query, variables });
            return {
                status: res.status,
                body: res.body,
                headers: res.headers,
            };
        },
        close: async function () {
            return undefined;
        },
    };
}
// For ES module compatibility as well
module.exports = { createGraphQLClient };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3Rlc3RzL2ludGVncmF0aW9uL3V0aWxzL2dyYXBocWxDbGllbnQudHMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUV6QyxLQUFLLFVBQVUsbUJBQW1CLENBQUMsR0FBRztJQUNwQyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxzRkFBc0Y7SUFFaEgsT0FBTztRQUNMLEtBQUssRUFBRSxLQUFLLFdBQVUsT0FBTyxHQUFHLEVBQUU7WUFDaEMsTUFBTSxFQUFFLEtBQUssR0FBRyxFQUFFLEVBQUUsU0FBUyxFQUFFLEdBQUcsT0FBTyxDQUFDO1lBQzFDLHlGQUF5RjtZQUN6RixNQUFNLFdBQVcsR0FBRyxLQUFLLElBQUksbUJBQW1CLENBQUM7WUFDakQsTUFBTSxHQUFHLEdBQUcsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztZQUNsRixPQUFPO2dCQUNMLE1BQU0sRUFBRSxHQUFHLENBQUMsTUFBTTtnQkFDbEIsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJO2dCQUNkLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTzthQUNyQixDQUFDO1FBQ0osQ0FBQztRQUNELE1BQU0sRUFBRSxLQUFLLFdBQVUsT0FBTyxHQUFHLEVBQUU7WUFDakMsTUFBTSxFQUFFLEtBQUssR0FBRyxFQUFFLEVBQUUsU0FBUyxFQUFFLEdBQUcsT0FBTyxDQUFDO1lBQzFDLE1BQU0sR0FBRyxHQUFHLE1BQU0sTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztZQUNyRSxPQUFPO2dCQUNMLE1BQU0sRUFBRSxHQUFHLENBQUMsTUFBTTtnQkFDbEIsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJO2dCQUNkLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTzthQUNyQixDQUFDO1FBQ0osQ0FBQztRQUNELEtBQUssRUFBRSxLQUFLO1lBQ1YsT0FBTyxTQUFTLENBQUM7UUFDbkIsQ0FBQztLQUNGLENBQUM7QUFDSixDQUFDO0FBRUQsc0NBQXNDO0FBQ3RDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbmxvbmcvRGV2ZWxvcGVyL3N1bW1pdC90ZXN0cy9pbnRlZ3JhdGlvbi91dGlscy9ncmFwaHFsQ2xpZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgaHR0cCB9ID0gcmVxdWlyZSgnLi9odHRwQ2xpZW50Jyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUdyYXBoUUxDbGllbnQoYXBwKSB7XG4gIGNvbnN0IGNsaWVudCA9IGh0dHAoYXBwKTsgLy8gV2lsbCB3b3JrIGZvciBib3RoIGNhc2VzOiBhcHAgcHJvdmlkZWQgKGluLXByb2Nlc3MpIG9yIFRFU1RfQkFTRV9VUkwgc2V0IChleHRlcm5hbClcblxuICByZXR1cm4ge1xuICAgIHF1ZXJ5OiBhc3luYyBmdW5jdGlvbihvcHRpb25zID0ge30pIHtcbiAgICAgIGNvbnN0IHsgcXVlcnkgPSAnJywgdmFyaWFibGVzIH0gPSBvcHRpb25zO1xuICAgICAgLy8gSWYgbm8gcXVlcnkgaXMgcHJvdmlkZWQsIHVzZSBhIGRlZmF1bHQgKGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5IHdpdGggZXhpc3RpbmcgdGVzdClcbiAgICAgIGNvbnN0IGFjdHVhbFF1ZXJ5ID0gcXVlcnkgfHwgJ3sgZW50aXR5IHsgaWQgfSB9JzsgXG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBjbGllbnQucG9zdCgnL2dyYXBocWwnKS5zZW5kKHsgcXVlcnk6IGFjdHVhbFF1ZXJ5LCB2YXJpYWJsZXMgfSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6IHJlcy5zdGF0dXMsXG4gICAgICAgIGJvZHk6IHJlcy5ib2R5LFxuICAgICAgICBoZWFkZXJzOiByZXMuaGVhZGVycyxcbiAgICAgIH07XG4gICAgfSxcbiAgICBtdXRhdGU6IGFzeW5jIGZ1bmN0aW9uKG9wdGlvbnMgPSB7fSkge1xuICAgICAgY29uc3QgeyBxdWVyeSA9ICcnLCB2YXJpYWJsZXMgfSA9IG9wdGlvbnM7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBjbGllbnQucG9zdCgnL2dyYXBocWwnKS5zZW5kKHsgcXVlcnksIHZhcmlhYmxlcyB9KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1cyxcbiAgICAgICAgYm9keTogcmVzLmJvZHksXG4gICAgICAgIGhlYWRlcnM6IHJlcy5oZWFkZXJzLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGNsb3NlOiBhc3luYyBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSxcbiAgfTtcbn1cblxuLy8gRm9yIEVTIG1vZHVsZSBjb21wYXRpYmlsaXR5IGFzIHdlbGxcbm1vZHVsZS5leHBvcnRzID0geyBjcmVhdGVHcmFwaFFMQ2xpZW50IH07XG4iXSwidmVyc2lvbiI6M30=