{"file":"/Users/brianlong/Developer/summit/tests/integration/api.test.js","mappings":"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","names":[],"sources":["/Users/brianlong/Developer/summit/tests/integration/api.test.js"],"sourcesContent":["// Mock the services/api module before importing\njest.mock('services/api');\n\ndescribe('api client contracts', () => {\n  const { createClient } = require('services/api');\n\n  beforeEach(() => {\n    // Reset mocks before each test\n    jest.clearAllMocks();\n  });\n\n  it('POST returns 202 and body', async () => {\n    const api = createClient();\n    const res = await api.post({ path: '/v1/jobs', body: { foo: 1 } });\n    expect(res.status).toBe(202);\n    expect(res.data).toEqual(expect.objectContaining({\n      method: 'POST',\n      path: '/v1/jobs',\n      body: { foo: 1 }\n    }));\n  });\n\n  it('handles 4xx gracefully', async () => {\n    const api = createClient();\n    \n    // Mock a rejection for this specific test\n    api.get.mockRejectedValueOnce(Object.assign(new Error('not found'), { status: 404 }));\n    \n    await expect(api.get({ path: '/v1/missing' })).rejects.toMatchObject({ status: 404 });\n  });\n\n  it('GET returns 200 and expected payload', async () => {\n    const api = createClient();\n    const res = await api.get({ path: '/v1/health' });\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual(expect.objectContaining({\n      method: 'GET',\n      path: '/v1/health'\n    }));\n  });\n\n  it('PUT returns 200 and updated payload', async () => {\n    const api = createClient();\n    const res = await api.put({ path: '/v1/entities/123', body: { name: 'updated' } });\n    expect(res.status).toBe(200);\n    expect(res.data).toEqual(expect.objectContaining({\n      method: 'PUT',\n      path: '/v1/entities/123',\n      body: { name: 'updated' }\n    }));\n  });\n\n  it('DELETE returns 204 and confirmation', async () => {\n    const api = createClient();\n    const res = await api.delete({ path: '/v1/entities/123' });\n    expect(res.status).toBe(204);\n    expect(res.data).toEqual(expect.objectContaining({\n      method: 'DELETE',\n      path: '/v1/entities/123'\n    }));\n  });\n});\n"],"version":3}