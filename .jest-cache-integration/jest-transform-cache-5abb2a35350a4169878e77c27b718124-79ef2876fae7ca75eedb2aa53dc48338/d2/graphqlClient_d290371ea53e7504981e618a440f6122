7625e87c979274f237641ab6499106ba
const { http } = require('./httpClient');
function createGraphQLClient(app) {
    const client = http(app);
    return {
        query: async function ({ query, variables }) {
            const res = await client.post('/graphql').send({ query, variables });
            return {
                status: res.status,
                body: res.body,
                headers: res.headers,
            };
        },
        mutate: async function ({ query, variables }) {
            const res = await client.post('/graphql').send({ query, variables });
            return {
                status: res.status,
                body: res.body,
                headers: res.headers,
            };
        },
        close: async function () {
            return undefined;
        },
    };
}
module.exports = { createGraphQLClient };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3Rlc3RzL2ludGVncmF0aW9uL3V0aWxzL2dyYXBocWxDbGllbnQudHMiLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUV6QyxTQUFTLG1CQUFtQixDQUFDLEdBQUc7SUFDOUIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRXpCLE9BQU87UUFDTCxLQUFLLEVBQUUsS0FBSyxXQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRTtZQUN4QyxNQUFNLEdBQUcsR0FBRyxNQUFNLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7WUFDckUsT0FBTztnQkFDTCxNQUFNLEVBQUUsR0FBRyxDQUFDLE1BQU07Z0JBQ2xCLElBQUksRUFBRSxHQUFHLENBQUMsSUFBSTtnQkFDZCxPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU87YUFDckIsQ0FBQztRQUNKLENBQUM7UUFDRCxNQUFNLEVBQUUsS0FBSyxXQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRTtZQUN6QyxNQUFNLEdBQUcsR0FBRyxNQUFNLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7WUFDckUsT0FBTztnQkFDTCxNQUFNLEVBQUUsR0FBRyxDQUFDLE1BQU07Z0JBQ2xCLElBQUksRUFBRSxHQUFHLENBQUMsSUFBSTtnQkFDZCxPQUFPLEVBQUUsR0FBRyxDQUFDLE9BQU87YUFDckIsQ0FBQztRQUNKLENBQUM7UUFDRCxLQUFLLEVBQUUsS0FBSztZQUNWLE9BQU8sU0FBUyxDQUFDO1FBQ25CLENBQUM7S0FDRixDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxPQUFPLEdBQUcsRUFBRSxtQkFBbUIsRUFBRSxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9icmlhbmxvbmcvRGV2ZWxvcGVyL3N1bW1pdC90ZXN0cy9pbnRlZ3JhdGlvbi91dGlscy9ncmFwaHFsQ2xpZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgaHR0cCB9ID0gcmVxdWlyZSgnLi9odHRwQ2xpZW50Jyk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUdyYXBoUUxDbGllbnQoYXBwKSB7XG4gIGNvbnN0IGNsaWVudCA9IGh0dHAoYXBwKTtcblxuICByZXR1cm4ge1xuICAgIHF1ZXJ5OiBhc3luYyBmdW5jdGlvbih7IHF1ZXJ5LCB2YXJpYWJsZXMgfSkge1xuICAgICAgY29uc3QgcmVzID0gYXdhaXQgY2xpZW50LnBvc3QoJy9ncmFwaHFsJykuc2VuZCh7IHF1ZXJ5LCB2YXJpYWJsZXMgfSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6IHJlcy5zdGF0dXMsXG4gICAgICAgIGJvZHk6IHJlcy5ib2R5LFxuICAgICAgICBoZWFkZXJzOiByZXMuaGVhZGVycyxcbiAgICAgIH07XG4gICAgfSxcbiAgICBtdXRhdGU6IGFzeW5jIGZ1bmN0aW9uKHsgcXVlcnksIHZhcmlhYmxlcyB9KSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBjbGllbnQucG9zdCgnL2dyYXBocWwnKS5zZW5kKHsgcXVlcnksIHZhcmlhYmxlcyB9KTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN0YXR1czogcmVzLnN0YXR1cyxcbiAgICAgICAgYm9keTogcmVzLmJvZHksXG4gICAgICAgIGhlYWRlcnM6IHJlcy5oZWFkZXJzLFxuICAgICAgfTtcbiAgICB9LFxuICAgIGNsb3NlOiBhc3luYyBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfSxcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7IGNyZWF0ZUdyYXBoUUxDbGllbnQgfTtcbiJdLCJ2ZXJzaW9uIjozfQ==