{"file":"/Users/brianlong/Developer/summit/tests/integration/utils/graphqlClient.ts","mappings":";;;AAYO,MAAM,mBAAmB,GAAG,KAAK,IAAgC,EAAE;IACxE,MAAM,QAAQ,GAA2B;QACvC,MAAM,EAAE,GAAG;QACX,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE;QAChC,OAAO,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE;KAChD,CAAC;IAEF,OAAO;QACL,KAAK,EAAE,KAAK,IAAI,EAAE,CAAC,QAAQ;QAC3B,MAAM,EAAE,KAAK,IAAI,EAAE,CAAC,QAAQ;QAC5B,KAAK,EAAE,KAAK,IAAI,EAAE,CAAC,SAAS;KAC7B,CAAC;AACJ,CAAC,CAAC;AAZW,QAAA,mBAAmB,uBAY9B","names":[],"sources":["/Users/brianlong/Developer/summit/tests/integration/utils/graphqlClient.ts"],"sourcesContent":["type GraphQLResponsePayload = {\n  status: number;\n  body: any;\n  headers: Record<string, string>;\n};\n\ntype GraphQLTestClient = {\n  query: () => Promise<GraphQLResponsePayload>;\n  mutate: () => Promise<GraphQLResponsePayload>;\n  close: () => Promise<void>;\n};\n\nexport const createGraphQLClient = async (): Promise<GraphQLTestClient> => {\n  const response: GraphQLResponsePayload = {\n    status: 200,\n    body: { data: { entity: null } },\n    headers: { 'content-type': 'application/json' },\n  };\n\n  return {\n    query: async () => response,\n    mutate: async () => response,\n    close: async () => undefined,\n  };\n};\n"],"version":3}