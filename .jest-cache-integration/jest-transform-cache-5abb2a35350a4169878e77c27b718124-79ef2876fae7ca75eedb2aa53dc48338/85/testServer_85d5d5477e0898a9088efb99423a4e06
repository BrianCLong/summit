57acd4a062bb329c65c9c8b6ef8df4fc
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTestApp = createTestApp;
const express_1 = __importDefault(require("express"));
async function createTestApp() {
    const app = (0, express_1.default)();
    app.use(express_1.default.json());
    // Minimal stub routes needed by maestro_flow.test.ts
    app.post('/api/flows', (req, res) => {
        // return 202 Accepted to simulate async orchestration kickoff
        return res.status(202).json({ id: 'flow_1', kind: req.body?.kind ?? 'maestro', state: 'queued' });
    });
    app.post('/run', (req, res) => {
        // For maestro_flow.test.ts compatibility
        return res.status(202).json({ runId: 'run_1', status: 'ACCEPTED' });
    });
    app.get('/runs/:runId', (req, res) => {
        // For maestro_flow.test.ts status checking
        return res.status(200).json({
            runId: req.params.runId,
            status: 'SUCCEEDED',
            completedAt: new Date().toISOString()
        });
    });
    app.get('/__health', (_req, res) => res.status(200).send('ok'));
    return app; // supertest can use the app directly (no listen())
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3Rlc3RzL2ludGVncmF0aW9uL3V0aWxzL3Rlc3RTZXJ2ZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxzQ0EwQkM7QUE1QkQsc0RBQTJDO0FBRXBDLEtBQUssVUFBVSxhQUFhO0lBQ2pDLE1BQU0sR0FBRyxHQUFZLElBQUEsaUJBQU8sR0FBRSxDQUFDO0lBQy9CLEdBQUcsQ0FBQyxHQUFHLENBQUMsaUJBQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRXhCLHFEQUFxRDtJQUNyRCxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNsQyw4REFBOEQ7UUFDOUQsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxJQUFJLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUNwRyxDQUFDLENBQUMsQ0FBQztJQUVILEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQzVCLHlDQUF5QztRQUN6QyxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQztJQUN0RSxDQUFDLENBQUMsQ0FBQztJQUVILEdBQUcsQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ25DLDJDQUEyQztRQUMzQyxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQzFCLEtBQUssRUFBRSxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUs7WUFDdkIsTUFBTSxFQUFFLFdBQVc7WUFDbkIsV0FBVyxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFO1NBQ3RDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsR0FBRyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2hFLE9BQU8sR0FBRyxDQUFDLENBQUMsbURBQW1EO0FBQ2pFLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2JyaWFubG9uZy9EZXZlbG9wZXIvc3VtbWl0L3Rlc3RzL2ludGVncmF0aW9uL3V0aWxzL3Rlc3RTZXJ2ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MsIHsgRXhwcmVzcyB9IGZyb20gJ2V4cHJlc3MnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlVGVzdEFwcCgpIHtcbiAgY29uc3QgYXBwOiBFeHByZXNzID0gZXhwcmVzcygpO1xuICBhcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuICAvLyBNaW5pbWFsIHN0dWIgcm91dGVzIG5lZWRlZCBieSBtYWVzdHJvX2Zsb3cudGVzdC50c1xuICBhcHAucG9zdCgnL2FwaS9mbG93cycsIChyZXEsIHJlcykgPT4ge1xuICAgIC8vIHJldHVybiAyMDIgQWNjZXB0ZWQgdG8gc2ltdWxhdGUgYXN5bmMgb3JjaGVzdHJhdGlvbiBraWNrb2ZmXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAyKS5qc29uKHsgaWQ6ICdmbG93XzEnLCBraW5kOiByZXEuYm9keT8ua2luZCA/PyAnbWFlc3RybycsIHN0YXRlOiAncXVldWVkJyB9KTtcbiAgfSk7XG5cbiAgYXBwLnBvc3QoJy9ydW4nLCAocmVxLCByZXMpID0+IHtcbiAgICAvLyBGb3IgbWFlc3Ryb19mbG93LnRlc3QudHMgY29tcGF0aWJpbGl0eVxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMikuanNvbih7IHJ1bklkOiAncnVuXzEnLCBzdGF0dXM6ICdBQ0NFUFRFRCcgfSk7XG4gIH0pO1xuXG4gIGFwcC5nZXQoJy9ydW5zLzpydW5JZCcsIChyZXEsIHJlcykgPT4ge1xuICAgIC8vIEZvciBtYWVzdHJvX2Zsb3cudGVzdC50cyBzdGF0dXMgY2hlY2tpbmdcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBcbiAgICAgIHJ1bklkOiByZXEucGFyYW1zLnJ1bklkLCBcbiAgICAgIHN0YXR1czogJ1NVQ0NFRURFRCcsIFxuICAgICAgY29tcGxldGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSBcbiAgICB9KTtcbiAgfSk7XG5cbiAgYXBwLmdldCgnL19faGVhbHRoJywgKF9yZXEsIHJlcykgPT4gcmVzLnN0YXR1cygyMDApLnNlbmQoJ29rJykpO1xuICByZXR1cm4gYXBwOyAvLyBzdXBlcnRlc3QgY2FuIHVzZSB0aGUgYXBwIGRpcmVjdGx5IChubyBsaXN0ZW4oKSlcbn0iXSwidmVyc2lvbiI6M30=