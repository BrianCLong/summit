{"file":"/Users/brianlong/Developer/summit/tests/integration/graphql.contract.test.ts","mappings":"AAAA,MAAM,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AACjE,MAAM,EAAE,oBAAoB,EAAE,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AAEtE,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,IAAI,GAAG,CAAC;IAER,SAAS,CAAC,GAAG,EAAE;QACb,GAAG,GAAG,oBAAoB,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,MAAM,MAAM,GAAG,MAAM,mBAAmB,CAAC,GAAG,CAAC,CAAC;QAC9C,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,iCAAiC;SACzC,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/tests/integration/graphql.contract.test.ts"],"sourcesContent":["const { createGraphQLClient } = require('./utils/graphqlClient');\nconst { createGraphQLTestApp } = require('./utils/graphqlTestServer');\n\ndescribe('graphql contract', () => {\n  let app;\n\n  beforeAll(() => {\n    app = createGraphQLTestApp();\n  });\n\n  it('schema introspection exposes expected fields', async () => {\n    const client = await createGraphQLClient(app);\n    const res = await client.query({\n      query: '{ __schema { types { name } } }'\n    });\n    expect(res.status).toBe(200);\n    const names = (res.body.data.__schema.types).map(t => t.name);\n    expect(names).toEqual(expect.arrayContaining(['Query']));\n  });\n});"],"version":3}