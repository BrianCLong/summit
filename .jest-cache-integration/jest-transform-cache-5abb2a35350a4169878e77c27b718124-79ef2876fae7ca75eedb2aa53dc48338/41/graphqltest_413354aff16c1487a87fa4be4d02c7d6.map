{"file":"/Users/brianlong/Developer/summit/server/src/tests/integration/graphql.test.ts","mappings":";;AAAA,0EAA6E;AAE7E,QAAQ,CAAC,sCAAsC,EAAE,GAAG,EAAE;IACpD,IAAI,MAAM,CAAC;IAEX,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,GAAG,MAAM,IAAA,mCAAmB,GAAE,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,IAAI,EAAE;QAClB,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QAEtC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC/C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/tests/integration/graphql.test.ts"],"sourcesContent":["import { createGraphQLClient } from '@tests/integration/utils/graphqlClient';\n\ndescribe('GraphQL Contract Tests (placeholder)', () => {\n  let client;\n\n  beforeAll(async () => {\n    client = await createGraphQLClient();\n  });\n\n  afterAll(async () => {\n    await client.close();\n  });\n\n  it('should fetch an entity by ID', async () => {\n    const response = await client.query();\n\n    expect(response.status).toBe(200);\n    expect(response.body.data).toBeDefined();\n    expect(response.body.data.entity).toBeNull();\n  });\n});\n"],"version":3}