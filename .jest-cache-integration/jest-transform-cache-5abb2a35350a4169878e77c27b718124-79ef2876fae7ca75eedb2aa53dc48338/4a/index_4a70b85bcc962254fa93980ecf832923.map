{"file":"/Users/brianlong/Developer/summit/server/src/graphql/index.ts","mappings":";;AAIA,oCAQC;AAZD,iEAAqD;AACrD,gDAAkE;AAClE,2CAAwC;AAEjC,KAAK,UAAU,YAAY,CAAC,GAAQ;IACzC,MAAM,MAAM,GAAG,IAAI,oCAAY,CAAC;QAC9B,QAAQ,EAAE,CAAC,iBAAQ,EAAE,oBAAS,CAAC;QAC/B,SAAS,EAAT,qBAAS;QACT,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAG,GAAW,CAAC,IAAI,EAAE,CAAC;KACpD,CAAC,CAAC;IACH,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,CAAC,eAAe,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;AACpD,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/graphql/index.ts"],"sourcesContent":["import { ApolloServer } from 'apollo-server-express';\nimport { schema as typeDefs, safeTypes } from './schema/index.ts';\nimport { resolvers } from './resolvers';\n\nexport async function mountGraphQL(app: any) {\n  const server = new ApolloServer({\n    typeDefs: [typeDefs, safeTypes],\n    resolvers,\n    context: ({ req }) => ({ user: (req as any).user }),\n  });\n  await server.start();\n  server.applyMiddleware({ app, path: '/graphql' });\n}\n"],"version":3}