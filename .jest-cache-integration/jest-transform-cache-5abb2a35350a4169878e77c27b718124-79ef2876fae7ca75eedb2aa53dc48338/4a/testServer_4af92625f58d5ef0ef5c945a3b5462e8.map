{"file":"/Users/brianlong/Developer/summit/tests/integration/utils/testServer.ts","mappings":";;AAGA,sCAuCC;AA1CD,2DAA2D;AAC3D,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAE5B,KAAK,UAAU,aAAa;IACjC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;IACtB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAExB,qDAAqD;IACrD,+EAA+E;IAC/E,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,IAAI,GAAG,GAAG,CAAC,CAAC;IAEZ,kDAAkD;IAClD,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QAClC,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG,EAAE,CAAC;QACxB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,IAAI,SAAS,CAAC;QACzC,MAAM,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;QAC1C,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QAChB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,4DAA4D;IAC5D,gCAAgC;IAChC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;QAChC,KAAK,MAAM,EAAE,IAAI,KAAK,EAAE,CAAC;YACvB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;YACtB,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ;gBAAE,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC;iBAC7C,IAAI,GAAG,CAAC,KAAK,KAAK,SAAS;gBAAE,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC;QAC3D,CAAC;QACD,OAAO,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,gCAAgC;IAChC,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACrC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,CAAC,GAAG;YAAE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;QAC9D,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAEhE,OAAO,GAAG,CAAC,CAAC,sDAAsD;AACpE,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/tests/integration/utils/testServer.ts"],"sourcesContent":["// For Jest compatibility, using require with destructuring\nconst express = require('express');\n\nexport async function createTestApp() {\n  const app = express();\n  app.use(express.json());\n\n  // --- Minimal in-memory flow engine for tests --- //\n  // Using an object instead of Map to avoid potential issues in Jest environment\n  const flows = {};\n  let seq = 0;\n\n  // Kick off a flow (async orchestration simulated)\n  app.post('/api/flows', (req, res) => {\n    const id = `f_${++seq}`;\n    const kind = req.body?.kind ?? 'maestro';\n    const rec = { id, kind, state: 'queued' };\n    flows[id] = rec;\n    return res.status(202).json(rec);\n  });\n\n  // Deterministic tick endpoint to advance all flows one step\n  // queued -> running -> complete\n  app.post('/__tick', (_req, res) => {\n    for (const id in flows) {\n      const rec = flows[id];\n      if (rec.state === 'queued') rec.state = 'running';\n      else if (rec.state === 'running') rec.state = 'complete';\n    }\n    return res.sendStatus(204);\n  });\n\n  // Inspect a specific flow by id\n  app.get('/api/flows/:id', (req, res) => {\n    const rec = flows[req.params.id];\n    if (!rec) return res.status(404).json({ error: 'not_found' });\n    return res.json(rec);\n  });\n\n  app.get('/__health', (_req, res) => res.status(200).send('ok'));\n\n  return app; // <-- supertest will wrap this directly (no listen())\n}"],"version":3}