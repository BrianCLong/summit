{"file":"/Users/brianlong/Developer/summit/server/src/tests/integration/graphql.test.ts","mappings":";;;;;AAAA,uDAAmD;AACnD,gFAAyD;AACzD,0EAA6E;AAE7E,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,IAAI,MAAM,CAAC;IAEX,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,GAAG,MAAM,IAAA,mCAAmB,EAAC;YACjC,QAAQ,EAAR,oBAAQ;YACR,SAAS,EAAT,kBAAS;SACV,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,IAAI,EAAE;QAClB,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,KAAK,GAAG;;;;;;;;KAQb,CAAC;QAEF,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAE/C,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC;QAC7C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QACzC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/tests/integration/graphql.test.ts"],"sourcesContent":["import { typeDefs } from '../../graphql/schema.js';\nimport resolvers from '../../graphql/resolvers/index.js';\nimport { createGraphQLClient } from '@tests/integration/utils/graphqlClient';\n\ndescribe('GraphQL Contract Tests', () => {\n  let client;\n\n  beforeAll(async () => {\n    client = await createGraphQLClient({\n      typeDefs,\n      resolvers,\n    });\n  });\n\n  afterAll(async () => {\n    await client.close();\n  });\n\n  it('should fetch an entity by ID', async () => {\n    const query = `\n      query {\n        entity(id: \"1\") {\n          id\n          type\n          props\n        }\n      }\n    `;\n\n    const response = await client.query({ query });\n\n    expect(response.status).toBe(200);\n    expect(response.body.errors).toBeUndefined();\n    expect(response.body.data).toBeDefined();\n    expect(response.body.data?.entity ?? null).toBeNull();\n  });\n});\n"],"version":3}