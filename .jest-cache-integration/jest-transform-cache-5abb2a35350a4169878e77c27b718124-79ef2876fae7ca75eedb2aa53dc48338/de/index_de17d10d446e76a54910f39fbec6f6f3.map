{"file":"/Users/brianlong/Developer/summit/server/src/config/index.js","mappings":"AAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAE3B,MAAM,MAAM,GAAG;IACb,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa;IAC1C,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;IAE9B,0BAA0B;IAC1B,KAAK,EAAE;QACL,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,uBAAuB;QACrD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,OAAO;QAC/C,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,aAAa;QACrD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,OAAO;KAChD;IAED,QAAQ,EAAE;QACR,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,WAAW;QAC9C,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,IAAI;QACvC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,gBAAgB;QACrD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,YAAY;QACnD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,aAAa;KACzD;IAED,KAAK,EAAE;QACL,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,WAAW;QAC3C,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,IAAI;QACpC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,aAAa;QACrD,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC;KAC9B;IAED,oBAAoB;IACpB,GAAG,EAAE;QACH,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,sBAAsB;QACxD,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,KAAK;QAC9C,aAAa,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAI,0BAA0B;QAC3E,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,sBAAsB,IAAI,IAAI;KAC7D;IAED,WAAW;IACX,MAAM,EAAE;QACN,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE;KAClD;IAED,gBAAgB;IAChB,SAAS,EAAE;QACT,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI;QACtE,WAAW,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,IAAI,GAAG;KAClE;IAED,OAAO;IACP,IAAI,EAAE;QACJ,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,uBAAuB;KAC3D;IACD,gBAAgB;IAChB,QAAQ,EAAE;QACR,kBAAkB,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB,KAAK,GAAG;QAC1D,kBAAkB,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB,KAAK,GAAG;KAC3D;CACF,CAAC;AAEF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","names":[],"sources":["/Users/brianlong/Developer/summit/server/src/config/index.js"],"sourcesContent":["require('dotenv').config();\n\nconst config = {\n  env: process.env.NODE_ENV || 'development',\n  port: process.env.PORT || 4000,\n  \n  // Database configurations\n  neo4j: {\n    uri: process.env.NEO4J_URI || 'bolt://localhost:7687',\n    username: process.env.NEO4J_USERNAME || 'neo4j',\n    password: process.env.NEO4J_PASSWORD || 'devpassword',\n    database: process.env.NEO4J_DATABASE || 'neo4j'\n  },\n  \n  postgres: {\n    host: process.env.POSTGRES_HOST || 'localhost',\n    port: process.env.POSTGRES_PORT || 5432,\n    database: process.env.POSTGRES_DB || 'intelgraph_dev',\n    username: process.env.POSTGRES_USER || 'intelgraph',\n    password: process.env.POSTGRES_PASSWORD || 'devpassword'\n  },\n  \n  redis: {\n    host: process.env.REDIS_HOST || 'localhost',\n    port: process.env.REDIS_PORT || 6379,\n    password: process.env.REDIS_PASSWORD || 'devpassword',\n    db: process.env.REDIS_DB || 0\n  },\n  \n  // JWT configuration\n  jwt: {\n    secret: process.env.JWT_SECRET || 'dev_jwt_secret_12345',\n    expiresIn: process.env.JWT_EXPIRES_IN || '24h',\n    refreshSecret: process.env.JWT_REFRESH_SECRET || 'dev_refresh_secret_67890',\n    refreshExpiresIn: process.env.JWT_REFRESH_EXPIRES_IN || '7d'\n  },\n  \n  // Security\n  bcrypt: {\n    rounds: parseInt(process.env.BCRYPT_ROUNDS) || 12\n  },\n  \n  // Rate limiting\n  rateLimit: {\n    windowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS) || 15 * 60 * 1000,\n    maxRequests: parseInt(process.env.RATE_LIMIT_MAX_REQUESTS) || 100\n  },\n  \n  // CORS\n  cors: {\n    origin: process.env.CORS_ORIGIN || 'http://localhost:3000'\n  },\n  // Feature flags\n  features: {\n    GRAPH_EXPAND_CACHE: process.env.GRAPH_EXPAND_CACHE !== '0',\n    AI_REQUEST_ENABLED: process.env.AI_REQUEST_ENABLED !== '0',\n  }\n};\n\nmodule.exports = config;\n"],"version":3}