diff --git a/policy/export/export.rego b/policy/export/export.rego
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/policy/export/export.rego
@@ -0,0 +1,92 @@
+package export
+
+# Decision entrypoint
+# Returns an object: {"effect": "allow"|"deny"|"step_up"|"allow_with_redactions", "redact_fields": [..], "reasons": [..], "simulated": bool, "note": string}
+
+default decision := {"effect": "deny", "redact_fields": [], "reasons": ["no_rules_evaluated"], "simulated": false}
+
+export_allowed_roles := { r | r := "admin" } ∪ { r | r := "exporter" }
+is_sensitive := input.bundle.sensitivity == "Sensitive" or input.bundle.sensitivity == "Restricted"
+
+has_export_perm {
+  some p
+  p := input.user.permissions[_]
+  p == "export"
+}
+
+in_allowed_role {
+  some r
+  r := input.user.roles[_]
+  r == export_allowed_roles[_]
+}
+
+is_pii_field[f] {
+  f := input.bundle.fields[_]
+  some l
+  l := f.labels[_]
+  startswith(l, "pii:")
+}
+
+is_explicit_mask[f] {
+  f := input.bundle.fields[_]
+  some m
+  m := input.options.dlp_mask_fields[_]
+  m == f.name
+}
+
+redact_fields := { f.name | f := input.bundle.fields[_]; is_pii_field[f] }
+explicit_masks := { f.name | f := input.bundle.fields[_]; is_explicit_mask[f] }
+all_masks := redact_fields ∪ explicit_masks
+
+reason["not_authorized"] { not has_export_perm }
+reason["role_not_allowed"] { not in_allowed_role }
+reason["step_up_required"] { is_sensitive; not input.webauthn_verified }
+
+base_effect := "allow" { has_export_perm; in_allowed_role; not is_sensitive }
+base_effect := "step_up" { has_export_perm; in_allowed_role; is_sensitive; not input.webauthn_verified }
+base_effect := "allow" { has_export_perm; in_allowed_role; is_sensitive; input.webauthn_verified }
+
+must_deny {
+  some r
+  r := reason[_]
+  r != "step_up_required"
+}
+
+result := {
+  "effect": "deny",
+  "redact_fields": [],
+  "reasons": [ r | r := reason[_] ],
+  "simulated": false,
+  "note": "Denied by policy"
+} { must_deny }
+
+result := {
+  "effect": "step_up",
+  "redact_fields": [],
+  "reasons": ["step_up_required"],
+  "simulated": false,
+  "note": "Sensitive export requires WebAuthn step‑up"
+} { not must_deny; base_effect == "step_up" }
+
+result := allow_obj {
+  not must_deny
+  base_effect == "allow"
+  allow_obj := {
+    "effect": eff,
+    "redact_fields": masks,
+    "reasons": ["dlp_redaction"] { count(masks) > 0 },
+    "simulated": false,
+    "note": note
+  }
+  masks := array.concat([], sort(all_masks))
+  eff := "allow_with_redactions" { count(masks) > 0 }
+  eff := "allow" { count(masks) == 0 }
+  note := sprintf("Allowed. Redactions: %v", [masks])
+}
+
+decision := sim_obj {
+  input.simulate
+  sim_obj := result with sim_obj.simulated as true
+}
+
+decision := result { not input.simulate }

diff --git a/policy/export/export_test.rego b/policy/export/export_test.rego
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/policy/export/export_test.rego
@@ -0,0 +1,53 @@
+package export
+
+import data.export
+
+test_deny_without_permission {
+  input := {
+    "user": {"permissions": [], "roles": ["exporter"]},
+    "bundle": {"sensitivity": "Public", "fields": []},
+    "options": {"dlp_mask_fields": []},
+    "webauthn_verified": false,
+    "simulate": false
+  }
+  decision := data.export.decision with input as input
+  decision.effect == "deny"
+  decision.reasons[_] == "not_authorized"
+}
+
+test_step_up_for_sensitive_without_webauthn {
+  input := {
+    "user": {"permissions": ["export"], "roles": ["exporter"]},
+    "bundle": {"sensitivity": "Sensitive", "fields": []},
+    "options": {"dlp_mask_fields": []},
+    "webauthn_verified": false,
+    "simulate": false
+  }
+  decision := data.export.decision with input as input
+  decision.effect == "step_up"
+}
+
+test_allow_with_redactions_for_pii {
+  input := {
+    "user": {"permissions": ["export"], "roles": ["exporter"]},
+    "bundle": {"sensitivity": "Internal", "fields": [{"name": "email", "labels": ["pii:email"]}]},
+    "options": {"dlp_mask_fields": []},
+    "webauthn_verified": true,
+    "simulate": false
+  }
+  decision := data.export.decision with input as input
+  decision.effect == "allow_with_redactions"
+  count(decision.redact_fields) == 1
+}
+
+test_simulate_sets_flag {
+  input := {
+    "user": {"permissions": ["export"], "roles": ["exporter"]},
+    "bundle": {"sensitivity": "Public", "fields": []},
+    "options": {"dlp_mask_fields": []},
+    "webauthn_verified": false,
+    "simulate": true
+  }
+  decision := data.export.decision with input as input
+  decision.simulated == true
+}

diff --git a/ops/grafana/dashboards/ga_core_dashboard.json b/ops/grafana/dashboards/ga_core_dashboard.json
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/ops/grafana/dashboards/ga_core_dashboard.json
@@ -0,0 +1,77 @@
+{
+  "title": "IntelGraph — SLO & Safety",
+  "timezone": "browser",
+  "editable": true,
+  "schemaVersion": 38,
+  "version": 1,
+  "refresh": "30s",
+  "time": { "from": "now-6h", "to": "now" },
+  "templating": {
+    "list": [
+      { "name": "env", "type": "query", "datasource": "Prometheus", "query": "label_values(requests_total, env)", "refresh": 2, "current": {"text": "prod", "value": "prod"} },
+      { "name": "service", "type": "query", "datasource": "Prometheus", "query": "label_values(requests_total, service)", "refresh": 2 }
+    ]
+  },
+  "panels": [
+    {
+      "type": "timeseries",
+      "title": "NLQ Parse p95 (ms)",
+      "datasource": "Prometheus",
+      "gridPos": { "h": 8, "w": 12, "x": 0, "y": 0 },
+      "targets": [
+        { "expr": "histogram_quantile(0.95, sum by (le) (rate(nlq_parse_latency_bucket{env=\"$env\",service=\"$service\"}[5m]))) * 1000" }
+      ]
+    },
+    {
+      "type": "timeseries",
+      "title": "NLQ Exec p95 (ms)",
+      "datasource": "Prometheus",
+      "gridPos": { "h": 8, "w": 12, "x": 12, "y": 0 },
+      "targets": [
+        { "expr": "histogram_quantile(0.95, sum by (le) (rate(nlq_exec_latency_bucket{env=\"$env\",service=\"$service\"}[5m]))) * 1000" }
+      ]
+    },
+    {
+      "type": "timeseries",
+      "title": "Ingest E2E p95 (s)",
+      "datasource": "Prometheus",
+      "gridPos": { "h": 7, "w": 12, "x": 0, "y": 8 },
+      "targets": [
+        { "expr": "histogram_quantile(0.95, sum by (le) (rate(ingest_e2e_seconds_bucket{env=\"$env\",service=\"$service\"}[5m])))" }
+      ]
+    },
+    {
+      "type": "timeseries",
+      "title": "Export Decisions (stacked)",
+      "datasource": "Prometheus",
+      "gridPos": { "h": 7, "w": 12, "x": 12, "y": 8 },
+      "fieldConfig": { "defaults": { "custom": { "stacking": { "mode": "normal" } } } },
+      "targets": [
+        { "expr": "sum(increase(export_decisions_total{env=\"$env\",service=\"$service\",decision=\"allow\"}[1h]))" , "legendFormat": "allow"},
+        { "expr": "sum(increase(export_decisions_total{env=\"$env\",service=\"$service\",decision=\"deny\"}[1h]))" , "legendFormat": "deny"},
+        { "expr": "sum(increase(export_decisions_total{env=\"$env\",service=\"$service\",decision=\"redact\"}[1h]))" , "legendFormat": "redact"},
+        { "expr": "sum(increase(export_decisions_total{env=\"$env\",service=\"$service\",decision=\"step_up\"}[1h]))" , "legendFormat": "step_up"}
+      ]
+    },
+    {
+      "type": "timeseries",
+      "title": "ER Precision/Recall",
+      "datasource": "Prometheus",
+      "gridPos": { "h": 7, "w": 12, "x": 0, "y": 15 },
+      "targets": [
+        { "expr": "avg(er_precision{env=\"$env\",service=\"$service\"})", "legendFormat": "precision" },
+        { "expr": "avg(er_recall{env=\"$env\",service=\"$service\"})", "legendFormat": "recall" }
+      ]
+    },
+    {
+      "type": "timeseries",
+      "title": "SLO Burn Rate (99% target)",
+      "datasource": "Prometheus",
+      "gridPos": { "h": 7, "w": 12, "x": 12, "y": 15 },
+      "targets": [
+        { "expr": "(sum(rate(requests_total{env=\"$env\",service=\"$service\",status=~\"5..|4..\"}[5m])) / sum(rate(requests_total{env=\"$env\",service=\"$service\"}[5m]))) / (1 - 0.99)", "legendFormat": "burn_5m" }
+      ],
+      "options": { "alertThreshold": true }
+    }
+  ]
+}

diff --git a/ops/grafana/provisioning/dashboards/ga-core/dashboard.yml b/ops/grafana/provisioning/dashboards/ga-core/dashboard.yml
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/ops/grafana/provisioning/dashboards/ga-core/dashboard.yml
@@ -0,0 +1,8 @@
+apiVersion: 1
+providers:
+  - name: 'ga-core'
+    type: file
+    disableDeletion: false
+    editable: true
+    options:
+      path: /etc/grafana/provisioning/dashboards/ga-core

diff --git a/project/pm/sprint25_jira.csv b/project/pm/sprint25_jira.csv
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/project/pm/sprint25_jira.csv
@@ -0,0 +1,71 @@
+Issue Id,Issue Type,Summary,Description,Assignee,Priority,Labels,Component/s,Epic Name,Epic Link,Parent Id,Story Points,Original Estimate,Fix Version/s
+EPIC-A, Epic,Governance & Security,"ABAC/OPA, simulation mode, step‑up (WebAuthn), audited decisions.",PM,High,"sprint-25;ga-core;hardening;guardrails","Policy;Security",Governance & Security,,,,,Sprint 25
+EPIC-B, Epic,Entity Resolution,"Merge adjudication queue, confidence bands, ER telemetry/XAI.",PM,High,"sprint-25;ga-core;hardening","Entity Resolution;Explainability",Entity Resolution,,,,,Sprint 25
+EPIC-C, Epic,Provenance & Export,"Round‑trip verifier CLI and transform chain viewer.",PM,High,"sprint-25;ga-core;provenance","Provenance;Export",Provenance & Export,,,,,Sprint 25
+EPIC-D, Epic,AI Copilot Safety,"NL→Cypher constraint layer, 20 golden intents, red‑team set.",PM,High,"sprint-25;ga-core;guardrails","NL2Cypher;Guardrails",AI Copilot Safety,,,,,Sprint 25
+EPIC-E, Epic,Performance & Reliability,"p95 targets, slow‑query killer tuning, streaming + cache.",PM,High,"sprint-25;ga-core;performance","SRE;Performance",Performance & Reliability,,,,,Sprint 25
+EPIC-F, Epic,Frontend Tri‑Pane & UX,"Saved views, annotations, provenance‑aware export v2.",PM,Medium,"sprint-25;ga-core;ux","WebApp;TriPane",Frontend Tri‑Pane & UX,,,,,Sprint 25
+EPIC-G, Epic,Connectors,"Scheduler/backoff and 5 connectors to PROD‑Ready.",PM,High,"sprint-25;ga-core;connectors","Connectors;Ingestion",Connectors,,,,,Sprint 25
+
+S-2001, Story,OPA Gatekeeper v2 (A-POL-002),"All POST/PUT/DELETE behind OPA; /simulate returns allow/deny+rule; OTP/WebAuthn step‑up; audit logs include policy version.",BE,High,"sprint-25;ga-core;policy","Policy;Security",,EPIC-A,,3, ,Sprint 25
+S-2002, Story,Policy Dev Workflow (A-POL-003),"Policies in repo with unit tests; PR checks run opa test; Stage dry‑run mode banner.",BE,Medium,"sprint-25;ga-core;policy","Policy;Security",,EPIC-A,,1.5, ,Sprint 25
+S-2003, Story,Merge Adjudication Queue (B-ER-010),"Queue with XAI feature attribution; approve/reject/soft‑split; undo; audited who/why.",FE,High,"sprint-25;ga-core;er","Entity Resolution;Explainability",,EPIC-B,,3.5, ,Sprint 25
+S-2004, Story,Auto‑merge Confidence Bands (B-ER-011),"Thresholds configurable; mid‑band→queue; high‑band→auto‑merge; telemetry exported.",BE,Medium,"sprint-25;ga-core;er","Entity Resolution",,EPIC-B,,1.5, ,Sprint 25
+S-2005, Story,Round‑Trip Verifier CLI (C-PROV-020),"verify-bundle re‑ingests and reproduces identical manifest; non‑zero exit on mismatch; offline OK.",BE,High,"sprint-25;ga-core;provenance","Provenance;Export",,EPIC-C,,2, ,Sprint 25
+S-2006, Story,Transform Chain Viewer (C-PROV-021),"UI shows source→transforms→sinks with IDs, timestamps, hashes; copy‑to‑clipboard claims.",FE,Medium,"sprint-25;ga-core;provenance","Provenance;Export",,EPIC-C,,1.5, ,Sprint 25
+S-2007, Story,NL→Cypher Constraint Layer (D-AI-030),"Schema/cost guards; unsafe ops return actionable explanations; undo guaranteed.",BE,High,"sprint-25;ga-core;nlq","NL2Cypher;Guardrails",,EPIC-D,,2, ,Sprint 25
+S-2008, Story,Golden Intents + Red‑Team Pack (D-AI-031),"20 intents with golden Cypher+fixtures; <2% unsafe pass‑through.",BE,High,"sprint-25;ga-core;nlq","NL2Cypher;Guardrails",,EPIC-D,,1.5, ,Sprint 25
+S-2009, Story,p95 Targets + Killer Tuning (E-OPS-040),"p95 preview ≤1.5s; execute ≤3.5s; killer thresholds tuned; user hints on kill.",SRE,High,"sprint-25;ga-core;performance","SRE;Performance",,EPIC-E,,2, ,Sprint 25
+S-2010, Story,Result Streaming & Caching (E-OPS-041),"Progressive streaming; cache HIT ≥40%; metrics on SLO board.",BE,High,"sprint-25;ga-core;performance","SRE;Performance",,EPIC-E,,2, ,Sprint 25
+S-2011, Story,Saved Views & Annotations (F-UX-050),"Save/pin views; annotate nodes/edges; provenance tooltips; keyboard shortcuts documented.",FE,Medium,"sprint-25;ga-core;ux","WebApp;TriPane",,EPIC-F,,2, ,Sprint 25
+S-2012, Story,Export w/ Provenance v2 (F-UX-051),"Export dialog shows allowed/blocked reasons; includes manifest+transforms; verify‑locally instructions.",FE,Medium,"sprint-25;ga-core;ux","WebApp;TriPane",,EPIC-F,,1.5, ,Sprint 25
+S-2013, Story,Connector Scheduler & Backoff (G-CON-060),"Per‑connector schedules; exponential backoff; rate‑limit observability.",Data,High,"sprint-25;ga-core;connectors","Connectors;Ingestion",,EPIC-G,,2, ,Sprint 25
+S-2014, Story,5 Connectors to PROD‑Ready (G-CON-061),"Mapping, sample, golden I/O tests, license notes, runbook; CI conformance green.",Data,High,"sprint-25;ga-core;connectors","Connectors;Ingestion",,EPIC-G,,3, ,Sprint 25
+
+T-3001, Sub-task,Implement OPA policy & gateways,"Wire POST/PUT/DELETE to OPA; add audit trail.",BE,High,"sprint-25;ga-core;policy","Policy;Security",,,S-2001,,16h,Sprint 25
+T-3002, Sub-task,DevSec review + policy hardening,"Threat model + Rego lint + deny reasons.",DevSec,Medium,"sprint-25;ga-core;policy","Security",,,S-2001,,4h,Sprint 25
+T-3003, Sub-task,QA testplan & cases for OPA,"/simulate, allow/deny, step‑up flows.",QA,Medium,"sprint-25;ga-core;policy","Policy",,,S-2001,,4h,Sprint 25
+
+T-3004, Sub-task,Policy repo + unit tests,"Add export.rego with tests; opa test in CI.",BE,Medium,"sprint-25;ga-core;policy","Policy",,,S-2002,,4h,Sprint 25
+T-3005, Sub-task,Security policy review,"DevSec checklist + PR gates.",DevSec,Medium,"sprint-25;ga-core;policy","Security",,,S-2002,,4h,Sprint 25
+T-3006, Sub-task,Docs: policy workflow,"README + Stage dry‑run banner.",Docs,Low,"sprint-25;ga-core;policy","Policy",,,S-2002,,4h,Sprint 25
+
+T-3007, Sub-task,Backend for adjudication queue,"APIs + audit entries.",BE,High,"sprint-25;ga-core;er","Entity Resolution",,,S-2003,,12h,Sprint 25
+T-3008, Sub-task,Frontend queue UI + XAI panel,"Feature attribution + undo.",FE,High,"sprint-25;ga-core;er","Explainability",,,S-2003,,12h,Sprint 25
+T-3009, Sub-task,QA for adjudication,"Approve/reject/soft‑split scenarios.",QA,Medium,"sprint-25;ga-core;er","Entity Resolution",,,S-2003,,4h,Sprint 25
+
+T-3010, Sub-task,Confidence bands & telemetry,"Config thresholds + emit metrics.",BE,Medium,"sprint-25;ga-core;er","Entity Resolution",,,S-2004,,8h,Sprint 25
+T-3011, Sub-task,QA confidence bands,"Band routing + auto‑merge edges.",QA,Low,"sprint-25;ga-core;er","Entity Resolution",,,S-2004,,4h,Sprint 25
+
+T-3012, Sub-task,Build verifier CLI,"Re‑ingest + hash manifest compare.",BE,High,"sprint-25;ga-core;provenance","Provenance",,,S-2005,,12h,Sprint 25
+T-3013, Sub-task,QA verifier offline tests,"Mismatch → non‑zero exit; fixtures.",QA,Medium,"sprint-25;ga-core;provenance","Export",,,S-2005,,4h,Sprint 25
+
+T-3014, Sub-task,Transform chain viewer UI,"IDs/timestamps/hashes + copy.",FE,Medium,"sprint-25;ga-core;provenance","Export",,,S-2006,,8h,Sprint 25
+T-3015, Sub-task,QA chain viewer,"Golden sample validates.",QA,Low,"sprint-25;ga-core;provenance","Provenance",,,S-2006,,4h,Sprint 25
+
+T-3016, Sub-task,Constraint layer implementation,"Schema + cost guards + undo.",BE,High,"sprint-25;ga-core;nlq","Guardrails",,,S-2007,,12h,Sprint 25
+T-3017, Sub-task,QA unsafe prompts,"Ensure actionable errors; rollback.",QA,Medium,"sprint-25;ga-core;nlq","NL2Cypher",,,S-2007,,4h,Sprint 25
+
+T-3018, Sub-task,Golden intents + fixtures,"20 intents + expected Cypher.",BE,High,"sprint-25;ga-core;nlq","NL2Cypher",,,S-2008,,8h,Sprint 25
+T-3019, Sub-task,Red‑team prompt pack,"Unsafe pass‑through <2%.",QA,Medium,"sprint-25;ga-core;nlq","Guardrails",,,S-2008,,4h,Sprint 25
+
+T-3020, Sub-task,Slow‑query killer tuning,"Thresholds + user hints.",SRE,High,"sprint-25;ga-core;performance","SRE",,,S-2009,,8h,Sprint 25
+T-3021, Sub-task,BE support for p95 targets,"Instrument + expose metrics.",BE,Medium,"sprint-25;ga-core;performance","Performance",,,S-2009,,4h,Sprint 25
+T-3022, Sub-task,QA perf suite,"Preview ≤1.5s; execute ≤3.5s.",QA,Medium,"sprint-25;ga-core;performance","Performance",,,S-2009,,4h,Sprint 25
+
+T-3023, Sub-task,Result streaming,"Server‑side streaming to tri‑pane.",BE,High,"sprint-25;ga-core;performance","SRE",,,S-2010,,8h,Sprint 25
+T-3024, Sub-task,Caching layer,"Query cache + metrics.",SRE,Medium,"sprint-25;ga-core;performance","Performance",,,S-2010,,4h,Sprint 25
+T-3025, Sub-task,QA streaming/cache,"Progressive load + cache HIT.",QA,Medium,"sprint-25;ga-core;performance","Performance",,,S-2010,,4h,Sprint 25
+
+T-3026, Sub-task,Saved views + annotations,"Persistence + a11y shortcuts.",FE,Medium,"sprint-25;ga-core;ux","WebApp;TriPane",,,S-2011,,12h,Sprint 25
+T-3027, Sub-task,QA saved views/annotations,"Keyboard + tooltip checks.",QA,Low,"sprint-25;ga-core;ux","WebApp",,,S-2011,,4h,Sprint 25
+
+T-3028, Sub-task,Export v2 UI,"Reasons + manifest+transforms; verify‑locally CTA.",FE,Medium,"sprint-25;ga-core;ux","WebApp;TriPane",,,S-2012,,8h,Sprint 25
+T-3029, Sub-task,QA export v2,"Allow/deny/redact flows.",QA,Low,"sprint-25;ga-core;ux","WebApp",,,S-2012,,4h,Sprint 25
+
+T-3030, Sub-task,Connector scheduler/backoff,"Schedules + exponential backoff + logs.",Data,High,"sprint-25;ga-core;connectors","Connectors",,,S-2013,,8h,Sprint 25
+T-3031, Sub-task,SRE observability for connectors,"Rate‑limit events metrics.",SRE,Medium,"sprint-25;ga-core;connectors","Ingestion",,,S-2013,,4h,Sprint 25
+T-3032, Sub-task,QA connector scheduling,"Retry/backoff scenarios.",QA,Low,"sprint-25;ga-core;connectors","Ingestion",,,S-2013,,4h,Sprint 25
+
+T-3033, Sub-task,Prep 5 connectors to PROD,"Mapping/sample/golden I/O/license notes/runbook.",Data,High,"sprint-25;ga-core;connectors","Connectors",,,S-2014,,16h,Sprint 25
+T-3034, Sub-task,QA 5 connectors to PROD,"Conformance CI is green.",QA,High,"sprint-25;ga-core;connectors","Connectors",,,S-2014,,8h,Sprint 25

diff --git a/.github/workflows/policy-ci.yml b/.github/workflows/policy-ci.yml
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/.github/workflows/policy-ci.yml
@@ -0,0 +1,22 @@
+name: Policy CI
+on:
+  push:
+    paths:
+      - 'policy/**.rego'
+      - 'policy/**.yaml'
+  pull_request:
+    paths:
+      - 'policy/**.rego'
+      - 'policy/**.yaml'
+jobs:
+  opa-test:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v4
+      - name: Set up OPA
+        uses: open-policy-agent/setup-opa@v2
+        with:
+          version: latest
+      - name: Run policy tests
+        run: |
+          opa test policy -v

diff --git a/docs/project_management/Sprint25_Handoff.md b/docs/project_management/Sprint25_Handoff.md
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/docs/project_management/Sprint25_Handoff.md
@@ -0,0 +1,8 @@
+# Sprint 25 — GA Core Hardening & Guardrails (Oct 6–17, 2025, America/Denver)
+
+Day‑1 artifacts and wiring:
+- `policy/export/export.rego` with unit tests; `opa test policy -v` in CI.
+- Grafana dashboard at `ops/grafana/dashboards/ga_core_dashboard.json` (provision via `ops/grafana/provisioning/...`).
+- Jira import CSV at `project/pm/sprint25_jira.csv` (Epics → Stories → Sub‑tasks).
+
+Flags (Stage for 2 days): adjudication, NL→Cypher guardrails, export verifier.

