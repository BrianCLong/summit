name: Build with SBOM & Provenance

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  release:
    types: [published, created]
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  packages: write
  attestations: write

jobs:
  build-and-attest:
    name: Build with SBOM & Provenance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for provenance

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build || echo "Build step may not exist yet"

      - name: Generate SBOM (CycloneDX)
        run: |
          # Install cyclonedx-cli
          npm install -g @cyclonedx/cyclonedx-npm

          # Generate SBOM in CycloneDX format
          cyclonedx-npm --output-file sbom.json --output-format JSON

          # Also generate human-readable version
          cyclonedx-npm --output-file sbom.xml --output-format XML

          echo "## 📦 SBOM Generated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Format**: CycloneDX 1.5" >> $GITHUB_STEP_SUMMARY
          echo "- **Files**: sbom.json, sbom.xml" >> $GITHUB_STEP_SUMMARY
          echo "- **Components**: $(jq '.components | length' sbom.json)" >> $GITHUB_STEP_SUMMARY

      - name: Calculate SBOM hash
        id: sbom_hash
        run: |
          SBOM_SHA256=$(sha256sum sbom.json | awk '{print $1}')
          echo "sbom_sha256=$SBOM_SHA256" >> $GITHUB_OUTPUT
          echo "**SBOM SHA256**: \`$SBOM_SHA256\`" >> $GITHUB_STEP_SUMMARY

      - name: Generate Provenance Attestation (SLSA)
        id: provenance
        run: |
          # Create SLSA-style provenance
          cat > provenance.json <<EOF
          {
            "_type": "https://in-toto.io/Statement/v0.1",
            "predicateType": "https://slsa.dev/provenance/v0.2",
            "subject": [
              {
                "name": "sbom.json",
                "digest": {
                  "sha256": "${{ steps.sbom_hash.outputs.sbom_sha256 }}"
                }
              }
            ],
            "predicate": {
              "builder": {
                "id": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
              },
              "buildType": "https://github.com/Attestations/GitHubActionsWorkflow@v1",
              "invocation": {
                "configSource": {
                  "uri": "git+${{ github.server_url }}/${{ github.repository }}@${{ github.ref }}",
                  "digest": {
                    "sha1": "${{ github.sha }}"
                  },
                  "entryPoint": ".github/workflows/build-sbom-provenance.yml"
                },
                "parameters": {},
                "environment": {
                  "github_actor": "${{ github.actor }}",
                  "github_sha": "${{ github.sha }}",
                  "github_ref": "${{ github.ref }}",
                  "github_workflow": "${{ github.workflow }}",
                  "github_run_id": "${{ github.run_id }}",
                  "github_run_number": "${{ github.run_number }}"
                }
              },
              "buildConfig": {
                "node_version": "20",
                "pnpm_version": "9"
              },
              "metadata": {
                "buildInvocationId": "${{ github.run_id }}-${{ github.run_number }}",
                "buildStartedOn": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
                "buildFinishedOn": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
                "completeness": {
                  "parameters": true,
                  "environment": true,
                  "materials": true
                },
                "reproducible": false
              },
              "materials": [
                {
                  "uri": "git+${{ github.server_url }}/${{ github.repository }}@${{ github.ref }}",
                  "digest": {
                    "sha1": "${{ github.sha }}"
                  }
                }
              ]
            }
          }
          EOF

          # Calculate provenance hash
          PROV_SHA256=$(sha256sum provenance.json | awk '{print $1}')
          echo "prov_sha256=$PROV_SHA256" >> $GITHUB_OUTPUT

          echo "## 🔐 Provenance Attestation Generated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Type**: SLSA Provenance v0.2" >> $GITHUB_STEP_SUMMARY
          echo "- **Builder**: GitHub Actions" >> $GITHUB_STEP_SUMMARY
          echo "- **SHA256**: \`$PROV_SHA256\`" >> $GITHUB_STEP_SUMMARY

      - name: Sign with Cosign (keyless)
        if: github.event_name == 'release' || github.ref == 'refs/heads/main'
        uses: sigstore/cosign-installer@v3

      - name: Create attestation bundle
        run: |
          # Create bundle directory
          mkdir -p attestation-bundle

          # Copy artifacts
          cp sbom.json attestation-bundle/
          cp sbom.xml attestation-bundle/
          cp provenance.json attestation-bundle/

          # Create checksums file
          cat > attestation-bundle/checksums.txt <<EOF
          # SBOM & Provenance Checksums
          # Generated: $(date -u +%Y-%m-%dT%H:%M:%SZ)
          # Commit: ${{ github.sha }}
          # Workflow: ${{ github.workflow }}
          # Run: ${{ github.run_id }}

          ## SBOM
          ${{ steps.sbom_hash.outputs.sbom_sha256 }}  sbom.json

          ## Provenance
          ${{ steps.provenance.outputs.prov_sha256 }}  provenance.json
          EOF

          echo "## 📋 Attestation Bundle Created" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Files:" >> $GITHUB_STEP_SUMMARY
          echo "- sbom.json" >> $GITHUB_STEP_SUMMARY
          echo "- sbom.xml" >> $GITHUB_STEP_SUMMARY
          echo "- provenance.json" >> $GITHUB_STEP_SUMMARY
          echo "- checksums.txt" >> $GITHUB_STEP_SUMMARY

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: |
            sbom.json
            sbom.xml
          retention-days: 90

      - name: Upload Provenance artifact
        uses: actions/upload-artifact@v4
        with:
          name: provenance
          path: provenance.json
          retention-days: 90

      - name: Upload Attestation Bundle
        uses: actions/upload-artifact@v4
        with:
          name: attestation-bundle
          path: attestation-bundle/
          retention-days: 90

      - name: Attach to Release
        if: github.event_name == 'release'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get release tag
          TAG_NAME=${GITHUB_REF#refs/tags/}

          # Upload SBOM
          gh release upload "$TAG_NAME" sbom.json sbom.xml --clobber || echo "Release upload may have failed"

          # Upload provenance
          gh release upload "$TAG_NAME" provenance.json --clobber || echo "Release upload may have failed"

          # Upload checksums
          gh release upload "$TAG_NAME" attestation-bundle/checksums.txt --clobber || echo "Release upload may have failed"

          echo "## ✅ Artifacts attached to release $TAG_NAME" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**SBOM SHA256**: \`${{ steps.sbom_hash.outputs.sbom_sha256 }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Provenance SHA256**: \`${{ steps.provenance.outputs.prov_sha256 }}\`" >> $GITHUB_STEP_SUMMARY

      - name: Print verification instructions
        run: |
          echo "## 🔍 Verification Instructions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "# Verify SBOM checksum" >> $GITHUB_STEP_SUMMARY
          echo "sha256sum sbom.json" >> $GITHUB_STEP_SUMMARY
          echo "# Should match: ${{ steps.sbom_hash.outputs.sbom_sha256 }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Verify provenance" >> $GITHUB_STEP_SUMMARY
          echo "sha256sum provenance.json" >> $GITHUB_STEP_SUMMARY
          echo "# Should match: ${{ steps.provenance.outputs.prov_sha256 }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
