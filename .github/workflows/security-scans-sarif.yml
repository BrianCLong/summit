name: Security Scans (SARIF)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Run weekly on Monday at 8 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript-typescript', 'python']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        id: codeql
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
          output: sarif-results
          upload: true

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif-results/${{ matrix.language }}.sarif
          category: codeql-${{ matrix.language }}

      - name: Upload SARIF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif-${{ matrix.language }}
          path: sarif-results/${{ matrix.language }}.sarif
          retention-days: 30

  trivy-fs:
    name: Trivy Filesystem Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          ignore-unfixed: true

      - name: Upload Trivy SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-fs-results.sarif'
          category: trivy-fs

      - name: Upload SARIF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-sarif
          path: trivy-fs-results.sarif
          retention-days: 30

  trivy-config:
    name: Trivy Config Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy config scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-config-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy Config SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-config-results.sarif'
          category: trivy-config

      - name: Upload SARIF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-config-sarif
          path: trivy-config-results.sarif
          retention-days: 30

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run npm audit
        continue-on-error: true
        run: |
          npm audit --json > npm-audit.json || true
          npm audit --audit-level=high || true

      - name: Upload npm audit results
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-results
          path: npm-audit.json
          retention-days: 30

  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_ENABLE_SUMMARY: true

      - name: Upload Gitleaks SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: gitleaks

  aggregate-results:
    name: Aggregate Security Results
    runs-on: ubuntu-latest
    needs: [codeql, trivy-fs, trivy-config, dependency-scan, gitleaks]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: security-results

      - name: Count critical vulnerabilities
        id: count
        run: |
          CRITICAL_COUNT=0

          # Count from SARIF files
          for sarif in security-results/**/*.sarif; do
            if [ -f "$sarif" ]; then
              COUNT=$(jq '[.runs[].results[] | select(.level == "error" or .level == "high")] | length' "$sarif" 2>/dev/null || echo 0)
              CRITICAL_COUNT=$((CRITICAL_COUNT + COUNT))
            fi
          done

          echo "critical_count=$CRITICAL_COUNT" >> $GITHUB_OUTPUT

          echo "## üîí Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Critical Vulnerabilities**: $CRITICAL_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ $CRITICAL_COUNT -eq 0 ]; then
            echo "‚úÖ **PASS**: 0 critical vulnerabilities" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **FAIL**: $CRITICAL_COUNT critical vulnerabilities found" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Action Required**: Review security alerts and update SECURITY_WAIVERS.md if needed" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Check waiver register
        run: |
          if [ -f "SECURITY_WAIVERS.md" ]; then
            echo "## üìã Security Waivers" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Waiver register exists: SECURITY_WAIVERS.md" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ‚ö†Ô∏è No Waiver Register" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Create SECURITY_WAIVERS.md to track accepted risks" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload aggregated results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: security-results/
          retention-days: 90

      - name: Fail on critical vulnerabilities
        if: steps.count.outputs.critical_count != '0'
        run: |
          echo "‚ùå Found ${{ steps.count.outputs.critical_count }} critical vulnerabilities"
          echo "Review the security alerts in GitHub Security tab"
          echo "Update SECURITY_WAIVERS.md to document any accepted risks"
          exit 1
