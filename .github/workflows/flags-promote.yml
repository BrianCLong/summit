name: Feature Flag Promotion

on:
  workflow_dispatch:
    inputs:
      flag_name:
        description: 'Feature flag to promote'
        required: true
        type: string
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - staging
          - prod
      rollout_percentage:
        description: 'Rollout percentage (0-100)'
        required: true
        type: number
        default: 10
      enable_globally:
        description: 'Enable flag globally (not just rollout)'
        required: false
        type: boolean
        default: false

jobs:
  validate-promotion:
    runs-on: ubuntu-latest
    outputs:
      can_promote: ${{ steps.validate.outputs.can_promote }}
      flag_exists: ${{ steps.validate.outputs.flag_exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install -g js-yaml ts-node typescript
      
      - name: Validate feature flag
        id: validate
        run: |
          # Check if flag exists
          if ./scripts/ffctl.ts get "${{ github.event.inputs.flag_name }}" >/dev/null 2>&1; then
            echo "can_promote=true" >> $GITHUB_OUTPUT
            echo "flag_exists=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Feature flag '${{ github.event.inputs.flag_name }}' exists"
          else
            echo "can_promote=false" >> $GITHUB_OUTPUT
            echo "flag_exists=false" >> $GITHUB_OUTPUT
            echo "‚ùå Feature flag '${{ github.event.inputs.flag_name }}' does not exist"
            exit 1
          fi
          
          # Validate percentage
          if [ "${{ github.event.inputs.rollout_percentage }}" -lt 0 ] || [ "${{ github.event.inputs.rollout_percentage }}" -gt 100 ]; then
            echo "can_promote=false" >> $GITHUB_OUTPUT
            echo "‚ùå Rollout percentage must be between 0 and 100"
            exit 1
          fi
      
      - name: Check promotion safety
        run: |
          # Additional safety checks for production promotions
          if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
            echo "üîç Performing additional safety checks for production promotion..."
            
            # Check if flag has been tested in staging
            STAGING_ROLLOUT=$(./scripts/ffctl.ts get "${{ github.event.inputs.flag_name }}" | grep -E "staging:.*%" | grep -oE "[0-9]+" || echo "0")
            
            if [ "$STAGING_ROLLOUT" -eq 0 ]; then
              echo "‚ö†Ô∏è WARNING: Flag has not been rolled out in staging"
              echo "::warning::Consider testing in staging before production promotion"
            else
              echo "‚úÖ Flag is active in staging at ${STAGING_ROLLOUT}%"
            fi
          fi

  promote-flag:
    needs: validate-promotion
    if: needs.validate-promotion.outputs.can_promote == 'true'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install -g js-yaml ts-node typescript
      
      - name: Promote feature flag rollout
        run: |
          echo "üéØ Promoting feature flag '${{ github.event.inputs.flag_name }}'"
          echo "   Environment: ${{ github.event.inputs.environment }}"
          echo "   Rollout: ${{ github.event.inputs.rollout_percentage }}%"
          echo "   Global enable: ${{ github.event.inputs.enable_globally }}"
          
          ./scripts/ffctl.ts rollout "${{ github.event.inputs.flag_name }}" "${{ github.event.inputs.environment }}" "${{ github.event.inputs.rollout_percentage }}"
      
      - name: Enable flag globally
        if: github.event.inputs.enable_globally == 'true'
        run: |
          echo "üåê Enabling flag globally..."
          ./scripts/ffctl.ts set "${{ github.event.inputs.flag_name }}" true
      
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add feature-flags/flags.yaml
          git commit -m "feat(flags): promote ${{ github.event.inputs.flag_name }} to ${{ github.event.inputs.environment }} at ${{ github.event.inputs.rollout_percentage }}%
          
          üéØ Feature Flag Promotion:
          - Flag: ${{ github.event.inputs.flag_name }}
          - Environment: ${{ github.event.inputs.environment }}
          - Rollout: ${{ github.event.inputs.rollout_percentage }}%
          - Global: ${{ github.event.inputs.enable_globally }}
          
          ü§ñ Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
      
      - name: Create monitoring issue
        if: github.event.inputs.environment == 'prod' && github.event.inputs.rollout_percentage > 50
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Monitor: Feature flag '${{ github.event.inputs.flag_name }}' promoted to ${{ github.event.inputs.rollout_percentage }}% in production`,
              body: `## Feature Flag Promotion Monitoring
              
              **Flag:** \`${{ github.event.inputs.flag_name }}\`
              **Environment:** production
              **Rollout:** ${{ github.event.inputs.rollout_percentage }}%
              **Promoted by:** @${{ github.actor }}
              **Promoted at:** ${new Date().toISOString()}
              
              ## Monitoring Checklist
              
              - [ ] Monitor error rates for 24h
              - [ ] Check performance metrics
              - [ ] Verify user feedback
              - [ ] Review logs for anomalies
              - [ ] Confirm feature is working as expected
              
              ## Rollback Plan
              
              If issues are detected, use the kill switch:
              \`\`\`bash
              ./scripts/ffctl.ts kill ${{ github.event.inputs.flag_name }}
              \`\`\`
              
              Or reduce rollout percentage:
              \`\`\`bash
              ./scripts/ffctl.ts rollout ${{ github.event.inputs.flag_name }} prod 0
              \`\`\`
              
              ---
              *This issue was automatically created by the flag promotion workflow.*`,
              labels: ['feature-flag', 'monitoring', 'production'],
              assignees: ['${{ github.actor }}']
            });

  emergency-killswitch:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Emergency kill switch notification
        run: |
          echo "üö® EMERGENCY: Feature flag promotion failed!"
          echo "Consider using the kill switch if the flag was partially deployed:"
          echo "  ./scripts/ffctl.ts kill ${{ github.event.inputs.flag_name }}"