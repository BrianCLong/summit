name: Federal ATO Evidence Generation
on:
  push:
    branches: [main]
    paths:
      - 'server/src/federal/**'
      - 'terraform/federal-buckets.tf'
      - 'terraform/modules/worm_bucket/**'
      - 'policy/**'
      - 'helm/intelgraph/**'
  pull_request:
    branches: [main]
    paths:
      - 'server/src/federal/**'
      - 'terraform/federal-buckets.tf'
      - 'terraform/modules/worm_bucket/**'
      - 'policy/**'
      - 'helm/intelgraph/**'
  workflow_dispatch:
    inputs:
      classification:
        description: 'Data classification level'
        required: true
        default: 'UNCLASSIFIED'
        type: choice
        options:
          - 'UNCLASSIFIED'
          - 'CONFIDENTIAL'
          - 'SECRET'
      generate_evidence:
        description: 'Generate ATO evidence bundle'
        required: false
        default: false
        type: boolean

env:
  FEDERAL_ENABLED: 'true'
  FIPS_MODE: 'true'
  AIRGAP_ENABLED: 'true'
  KUBE_NAMESPACE: 'intelgraph-federal'
  CLASSIFICATION: ${{ github.event.inputs.classification || 'UNCLASSIFIED' }}

jobs:
  federal-compliance-tests:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[federal]') || github.event.inputs.generate_evidence == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.28.0'

      - name: Create test Kubernetes cluster
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: federal-test
          config: |
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
            - role: control-plane
              kubeadmConfigPatches:
              - |
                kind: ClusterConfiguration
                apiServer:
                  extraArgs:
                    enable-admission-plugins: NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook
            networking:
              disableDefaultCNI: false
              podSubnet: "10.244.0.0/16"

      - name: Install Gatekeeper
        run: |
          kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/release-3.14/deploy/gatekeeper.yaml
          kubectl wait --for=condition=Ready pod -l control-plane=controller-manager -n gatekeeper-system --timeout=300s

      - name: Deploy OPA policies
        run: |
          kubectl apply -f policy/
          sleep 30

      - name: Create federal namespace
        run: |
          kubectl create namespace $KUBE_NAMESPACE || true
          kubectl label namespace $KUBE_NAMESPACE classification=$CLASSIFICATION

      - name: Deploy test federal workload
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: federal-test-secret
            namespace: $KUBE_NAMESPACE
            labels:
              classification: $CLASSIFICATION
          type: Opaque
          data:
            test-key: dGVzdC12YWx1ZQ==
          ---
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: federal-audit-storage
            namespace: $KUBE_NAMESPACE
            labels:
              type: worm-audit
              classification: $CLASSIFICATION
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi
          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: federal-conductor
            namespace: $KUBE_NAMESPACE
            labels:
              app: federal-conductor
              classification: $CLASSIFICATION
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: federal-conductor
            template:
              metadata:
                labels:
                  app: federal-conductor
                  classification: $CLASSIFICATION
              spec:
                containers:
                - name: conductor
                  image: node:20-alpine
                  command: ["sleep", "3600"]
                  env:
                  - name: FEDERAL_ENABLED
                    value: "true"
                  - name: FIPS_MODE
                    value: "true"
                  - name: CLASSIFICATION
                    value: $CLASSIFICATION
                  volumeMounts:
                  - name: audit-storage
                    mountPath: /data/audit
                  - name: offline-registry
                    mountPath: /data/registry
                volumes:
                - name: audit-storage
                  persistentVolumeClaim:
                    claimName: federal-audit-storage
                - name: offline-registry
                  emptyDir: {}
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: federal-health
            namespace: $KUBE_NAMESPACE
          spec:
            selector:
              app: federal-conductor
            ports:
            - port: 3000
              targetPort: 3000
          EOF

      - name: Wait for deployment
        run: |
          kubectl wait --for=condition=Ready pod -l app=federal-conductor -n $KUBE_NAMESPACE --timeout=300s

      - name: Run TypeScript tests
        run: npm run test:server

      - name: Validate HSM integration
        run: |
          cd server
          npm test -- --testPathPattern=federal --verbose

      - name: Generate ATO evidence bundle
        if: github.event.inputs.generate_evidence == 'true'
        run: |
          chmod +x tools/federal/make-evidence-pack.sh
          ./tools/federal/make-evidence-pack.sh --classification=$CLASSIFICATION --namespace=$KUBE_NAMESPACE

      - name: Upload evidence bundle
        if: github.event.inputs.generate_evidence == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: federal-ato-evidence-${{ env.CLASSIFICATION }}
          path: /tmp/intelgraph-federal-evidence-*.tar.gz
          retention-days: 90

      - name: Validate WORM compliance
        run: |
          echo "Validating WORM bucket configurations..."
          terraform -chdir=terraform validate
          terraform -chdir=terraform fmt -check

      - name: Run Gatekeeper policy tests
        run: |
          kubectl get constraints
          kubectl describe k8srequiredclassification
          kubectl describe k8srequiredairgap

      - name: Security scan
        uses: securecodewarrior/github-action-add-sarif@v1
        with:
          sarif-file: security-scan.sarif
        continue-on-error: true

      - name: Compliance summary
        run: |
          echo "## Federal Compliance Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Classification: $CLASSIFICATION" >> $GITHUB_STEP_SUMMARY
          echo "- FIPS Mode: Enabled" >> $GITHUB_STEP_SUMMARY
          echo "- Air-gap: Enabled" >> $GITHUB_STEP_SUMMARY
          echo "- Gatekeeper: $(kubectl get constraints --no-headers | wc -l) policies active" >> $GITHUB_STEP_SUMMARY
          echo "- Federal workloads: $(kubectl get pods -n $KUBE_NAMESPACE --no-headers | wc -l) running" >> $GITHUB_STEP_SUMMARY

  terraform-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.6.0'

      - name: Terraform Format Check
        run: terraform -chdir=terraform fmt -check

      - name: Terraform Validate
        run: |
          cd terraform
          terraform init -backend=false
          terraform validate

      - name: Validate WORM bucket module
        run: |
          cd terraform/modules/worm_bucket
          terraform init -backend=false
          terraform validate

      - name: WORM compliance check
        run: |
          echo "Checking WORM bucket configurations..."
          grep -r "COMPLIANCE" terraform/modules/worm_bucket/ || exit 1
          grep -r "20" terraform/federal-buckets.tf || exit 1
          echo "âœ… 20-year WORM compliance configured"

  slsa3-verification:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate SLSA-3 provenance
        uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
        with:
          base64-subjects: ${{ steps.hash.outputs.hash }}

      - name: Verify SLSA-3 provenance
        run: |
          echo "Verifying SLSA-3 provenance for federal components..."
          cd server/src/federal
          node -e "
            const { slsa3Verifier } = require('./slsa3-verifier.ts');
            console.log('SLSA-3 verifier loaded successfully');
          "
