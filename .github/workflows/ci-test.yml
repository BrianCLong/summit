name: ci-test

on:
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  scope:
    name: Determine changed areas
    runs-on: ubuntu-latest
    outputs:
      client: ${{ steps.filter.outputs.client }}
      server: ${{ steps.filter.outputs.server }}
      python: ${{ steps.filter.outputs.python }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            client:
              - "client/**"
              - "web/**"
              - "src/**"
            server:
              - "server/**"
              - "graphql/**"
              - "api/**"
            python:
              - "python/**"
              - "**/*.py"

  client-tests:
    name: Client tests
    needs: scope
    if: needs.scope.outputs.client == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.13.1'
          cache: 'pnpm'
      - run: corepack enable && corepack prepare pnpm@9.6.0 --activate
      - run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm -r build -- --no-sourcemap
      - name: Unit tests
        run: pnpm test -- --ci --reporters=default --reporters=github

  server-tests:
    name: Server tests
    needs: scope
    if: needs.scope.outputs.server == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.13.1'
          cache: 'pnpm'
      - run: corepack enable && corepack prepare pnpm@9.6.0 --activate
      - run: pnpm install --frozen-lockfile
      - name: Lint
        run: pnpm -r lint
      - name: Typecheck
        run: pnpm -r typecheck
      - name: Unit tests
        run: pnpm -r test -- --ci --reporters=default --reporters=github

  python-ml-tests:
    name: Python ML tests
    needs: scope
    if: needs.scope.outputs.python == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Poetry
        run: pip install poetry
      - name: Install deps
        run: |
          if [ -f python/pyproject.toml ]; then
            cd python
            poetry install --no-interaction --no-ansi
          fi
      - name: Run ML tests
        run: |
          if [ -f python/pyproject.toml ]; then
            cd python
            poetry run pytest -q
          fi
