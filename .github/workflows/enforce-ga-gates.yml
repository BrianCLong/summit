name: Enforce GA Gates Evidence
on:
  pull_request:
    types: [opened, edited, synchronize]
permissions:
  contents: read
  pull-requests: write
jobs:
  check-evidence:
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR template sections
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = context.payload.pull_request.body || '';
            const touched = ['Security/Tenancy','Reliability/Performance','Supply Chain/Evidence','Observability/SLOs','Accessibility/UX','Docs/Runbooks']
              .filter(k => body.includes(`- [x] ${k}`) || body.includes(`- [X] ${k}`));
            const evidence = body.match(/## Evidence[\s\S]*?##/m) || body.match(/## Evidence[\s\S]*$/m);
            const hasEvidence = evidence && evidence[0].trim().length > 20;
            if (!hasEvidence) {
              core.setFailed('Evidence section missing or empty.');
            }
            core.notice(`Gates checked: ${touched.join(', ') || 'none'}`);

  security-scan:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.body, 'Security/Tenancy')
    steps:
      - uses: actions/checkout@v4
      - name: Run ZAP baseline scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'http://localhost:5173'
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          allow_issue_writing: false

  accessibility-check:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.body, 'Accessibility/UX')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: |
          cd conductor-ui/frontend
          npm ci
      - name: Run axe accessibility tests
        run: |
          cd conductor-ui/frontend
          npm run test:a11y || echo "Accessibility tests failed - check reports"
      - name: Upload axe results
        uses: actions/upload-artifact@v4
        with:
          name: axe-results
          path: conductor-ui/frontend/axe-results/

  performance-budget:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.body, 'Reliability/Performance')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies and build
        run: |
          cd conductor-ui/frontend
          npm ci
          npm run build
      - name: Check bundle size
        run: |
          cd conductor-ui/frontend
          npx bundlesize
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './conductor-ui/frontend/lighthouserc.json'
          uploadArtifacts: true
