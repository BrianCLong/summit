name: security-and-ci
on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request: {}

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci
      # --- Client GraphQL: lint + precodegen + liveâ†’snapshot codegen + safelist verify ---
      - name: Lint GraphQL docs (client)
        run: npm -w client run lint
      - name: Precodegen duplicate check
        run: node scripts/find-duplicate-ops.mjs
      - name: Codegen (live)
        id: codegen_live
        continue-on-error: true
        env:
          GRAPHQL_CODEGEN_CONCURRENCY: '1'
        run: npm -w client run persist:queries
      - name: Codegen (snapshot fallback)
        if: ${{ steps.codegen_live.outcome == 'failure' }}
        env:
          GRAPHQL_CODEGEN_CONCURRENCY: '1'
          CODEGEN_SCHEMA: client/schema.graphql
        run: npm -w client run persist:queries
      - name: Determine schema source
        id: schema_src
        run: |
          if [ "${{ steps.codegen_live.outcome }}" = "success" ]; then
            echo "schema_source=live" >> "$GITHUB_OUTPUT"
          else
            echo "schema_source=snapshot" >> "$GITHUB_OUTPUT"
          fi
      - name: Count persisted operations
        id: ops
        run: |
          node -e "const fs=require('fs');const p='client/artifacts/graphql-ops.json';const j=JSON.parse(fs.readFileSync(p,'utf8'));const n=Array.isArray(j)?j.length:Object.keys(j).length;console.log('ops_count='+n)" >> "$GITHUB_OUTPUT"
      - name: Comment schema source on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        env:
          SCHEMA_SOURCE: ${{ steps.schema_src.outputs.schema_source }}
          OPS_COUNT: ${{ steps.ops.outputs.ops_count }}
        with:
          script: |
            const marker = '<!-- schema-source-badge -->';
            const src = (process.env.SCHEMA_SOURCE || 'unknown').toUpperCase();
            const ops = process.env.OPS_COUNT || '0';
            const color = src === 'LIVE' ? '2ea44f' : 'ffae42';
            const body = `${marker}
            **GraphQL Schema Source:** ![${src}](https://img.shields.io/badge/schema-${src}-${color}?logo=graphql)
            **Persisted Ops:** \`${ops}\``;

            const { context, github } = require('@actions/github');
            const { owner, repo } = context.repo;
            const issue_number = context.payload.pull_request.number;

            const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number });
            const existing = comments.find(c => c.body && c.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: existing.id, body });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body });
            }
      - name: Verify safelist covers client operations
        run: npm run verify:safelist
      - run: npm run build
      - run: npm run test:unit
      - name: Generate SBOM
        uses: CycloneDX/gh-node-module-generatebom@v2
        with:
          output: 'bom.xml'
      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
      - name: CodeQL Init
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: CodeQL Analyze
        uses: github/codeql-action/analyze@v3

  update-safelist:
    if: github.ref == 'refs/heads/main'
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          node scripts/extract-op-hashes.js > server/src/graphql/safelist.generated.json
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(gql): update safelist from CI"
