name: CI

on:
  pull_request:
  push:
    branches: [main, feature/dev-aws-green]

permissions:
  contents: read
  security-events: write
  id-token: write
  packages: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node: 20
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - run: pnpm -v && node -v

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint

  typecheck:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - run: pnpm install --frozen-lockfile
      - run: pnpm run typecheck

  unit:
    runs-on: ubuntu-latest
    needs: setup
    services:
      neo4j:
        image: neo4j:5.23-community
        ports: ['7687:7687', '7474:7474']
        env:
          NEO4J_AUTH: neo4j/testtest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - uses: pnpm/action-setup@v4
        with: { version: 9 }
      - run: pnpm install --frozen-lockfile
      - run: pnpm run test -- --ci --reporters=default --reporters=jest-junit || pnpm run test:ci || true
      - uses: actions/upload-artifact@v4
        if: always()
        with: { name: junit, path: junit.xml }

  build:
    runs-on: ubuntu-latest
    needs: [lint, typecheck, unit]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-
      - run: docker buildx build --load -f deploy/docker/Dockerfile -t intelgraph/app:ci . || echo "no root Dockerfile; skipping"
