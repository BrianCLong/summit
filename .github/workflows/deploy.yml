name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
      ref:
        description: 'Git ref to deploy'
        required: false
        default: 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Node build (client)
        uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: |
          cd client
          npm ci
          npm run build

      - name: Node build (server)
        uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: |
          cd server
          npm ci
          npm -s run -s lint || true

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}-server
            ghcr.io/${{ github.repository }}-client
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=${{ github.event.inputs.environment }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push server image
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile.dev
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Build and push client image
        uses: docker/build-push-action@v6
        with:
          context: ./client
          file: ./client/Dockerfile.dev
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Notify
        run: |
          echo "Deployment images pushed to GHCR with tags:"
          echo "${{ steps.meta.outputs.tags }}"
