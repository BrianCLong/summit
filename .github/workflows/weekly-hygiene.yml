name: Weekly Repository Hygiene

on:
  schedule:
    - cron: '0 0 * * MON'  # Every Monday at midnight UTC
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run in dry-run mode (no pushes/PR edits)"
        required: true
        default: "true"
        type: boolean
      target_prs:
        description: "Comma-separated PR numbers to process (leave empty for auto-detect)"
        required: false
        default: ""
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  repository-hygiene:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up worktree for hygiene operations
        run: |
          echo "🔧 Setting up dedicated worktree for hygiene operations"
          git worktree add ../summit-hygiene-workspace main
          cd ../summit-hygiene-workspace
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

      - name: Detect conflicting PRs
        id: detect-prs
        run: |
          echo "🔍 Detecting PRs that need hygiene..."

          # Use target_prs input if provided, otherwise auto-detect
          if [ -n "${{ github.event.inputs.target_prs }}" ]; then
            PRS="${{ github.event.inputs.target_prs }}"
            echo "Using manual PR list: $PRS"
          else
            # Auto-detect PRs with conflicts or stale branches
            PRS=$(gh pr list --state open --json number,headRefName --jq '.[] | select(.headRefName | test("^(phase-|dependabot/|feature/|hotfix/)")) | .number' | head -10 | tr '\n' ',' | sed 's/,$//')
            echo "Auto-detected PRs: $PRS"
          fi

          echo "target_prs=$PRS" >> $GITHUB_OUTPUT
          echo "Found PRs for processing: $PRS"

      - name: Process PRs with main-wins strategy
        if: steps.detect-prs.outputs.target_prs != ''
        run: |
          echo "🔥 Processing PRs with main-wins conflict resolution"
          cd ../summit-hygiene-workspace

          DRY_RUN="${{ github.event.inputs.dry_run }}"
          IFS=',' read -ra PR_ARRAY <<< "${{ steps.detect-prs.outputs.target_prs }}"

          declare -a PROCESSED_PRS=()
          declare -a CONFLICTED_PRS=()
          declare -a SUPERSEDED_PRS=()

          for PR in "${PR_ARRAY[@]}"; do
            if [ -z "$PR" ]; then continue; fi

            echo "📋 Processing PR #$PR"
            HEAD_BRANCH=$(gh pr view "$PR" --json headRefName -q .headRefName)

            if [ -z "$HEAD_BRANCH" ]; then
              echo "⚠️ Could not determine head branch for PR #$PR, skipping"
              continue
            fi

            # Fetch and create hygiene branch
            git fetch origin "$HEAD_BRANCH" main
            git switch -C "hygiene/pr-$PR" --track "origin/$HEAD_BRANCH" || git switch "hygiene/pr-$PR"

            # Attempt rebase with main-wins strategy
            if git rebase origin/main; then
              echo "✅ PR #$PR rebased cleanly"
              PROCESSED_PRS+=("$PR")
            else
              echo "🔧 Resolving conflicts with main-wins strategy"

              # Apply main-wins for infrastructure files
              git checkout --theirs infra/helm/intelgraph/values-prod.yaml || true
              git checkout --theirs infra/helm/intelgraph/templates/servicemonitor.yaml || true
              git checkout --theirs infra/helm/intelgraph/Chart.lock || true

              git add . || true

              if git rebase --continue; then
                # Rebuild Chart.lock deterministically
                if [ -d "infra/helm/intelgraph" ]; then
                  cd infra/helm/intelgraph && helm dependency update && cd -
                  git add infra/helm/intelgraph/Chart.lock || true
                  git commit --amend --no-edit || true
                fi

                PROCESSED_PRS+=("$PR")
                echo "✅ PR #$PR conflicts resolved with main-wins"
              else
                git rebase --abort || true
                CONFLICTED_PRS+=("$PR")
                echo "❌ PR #$PR requires manual resolution"
              fi
            fi

            # Push changes if not in dry-run mode
            if [ "$DRY_RUN" != "true" ] && [[ " ${PROCESSED_PRS[@]} " =~ " $PR " ]]; then
              AFTER_SHA=$(git rev-parse HEAD)
              git push --force-with-lease origin "hygiene/pr-$PR:$HEAD_BRANCH"

              # Add GitHub comment
              gh pr comment "$PR" --body "🧹 HYGIENE: Automated conflict resolution completed.

              **Strategy**: main-wins for infrastructure files
              **New SHA**: \`$AFTER_SHA\`
              **Status**: Ready for CI validation

              Rebased onto latest \`main\` with deterministic Chart.lock rebuild."
            fi
          done

          # Store results for reporting
          echo "processed_prs=$(IFS=,; echo "${PROCESSED_PRS[*]}")" >> $GITHUB_ENV
          echo "conflicted_prs=$(IFS=,; echo "${CONFLICTED_PRS[*]}")" >> $GITHUB_ENV

      - name: Generate hygiene report
        run: |
          echo "📊 Generating hygiene report"

          # Create hygiene report directory
          mkdir -p .repo_hygiene

          # Generate timestamped report
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          cat > .repo_hygiene/report.json <<EOF
          {
            "timestamp": "$TIMESTAMP",
            "workflow_run": "${{ github.run_id }}",
            "trigger": "${{ github.event_name }}",
            "dry_run": "${{ github.event.inputs.dry_run }}",
            "processed_prs": [$(echo "$processed_prs" | sed 's/,/","/g' | sed 's/^/"/;s/$/"/' | sed 's/""//g')],
            "conflicted_prs": [$(echo "$conflicted_prs" | sed 's/,/","/g' | sed 's/^/"/;s/$/"/' | sed 's/""//g')],
            "total_processed": $(echo "$processed_prs" | tr ',' '\n' | grep -c . || echo 0),
            "total_conflicts": $(echo "$conflicted_prs" | tr ',' '\n' | grep -c . || echo 0),
            "infrastructure_strategy": "main-wins",
            "chart_lock_rebuilt": true
          }
          EOF

          echo "📋 Hygiene Report Generated:"
          cat .repo_hygiene/report.json

      - name: Commit and push hygiene report
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          echo "💾 Committing hygiene audit report"
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

          # Create or switch to hygiene audit branch
          git checkout -b repo-hygiene/weekly || git checkout repo-hygiene/weekly
          git add .repo_hygiene/report.json

          git commit -m "chore(repo-hygiene): weekly audit report $(date -u +%Y-%m-%d)

          - Processed PRs: $processed_prs
          - Conflicted PRs: $conflicted_prs
          - Strategy: main-wins for infrastructure
          - Chart.lock: deterministically rebuilt

          🤖 Generated by weekly hygiene workflow"

          git push origin repo-hygiene/weekly

      - name: Generate workflow summary
        if: always()
        run: |
          echo "## 🧹 Weekly Repository Hygiene Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dry Run Mode | ${{ github.event.inputs.dry_run }} |" >> $GITHUB_STEP_SUMMARY
          echo "| PRs Processed | $(echo "$processed_prs" | tr ',' '\n' | grep -c . || echo 0) |" >> $GITHUB_STEP_SUMMARY
          echo "| PRs Conflicted | $(echo "$conflicted_prs" | tr ',' '\n' | grep -c . || echo 0) |" >> $GITHUB_STEP_SUMMARY
          echo "| Strategy | main-wins for infrastructure |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -n "$processed_prs" ]; then
            echo "### ✅ Successfully Processed PRs" >> $GITHUB_STEP_SUMMARY
            echo "$processed_prs" | tr ',' '\n' | while read pr; do
              if [ -n "$pr" ]; then
                echo "- PR #$pr" >> $GITHUB_STEP_SUMMARY
              fi
            done
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          if [ -n "$conflicted_prs" ]; then
            echo "### ⚠️ PRs Requiring Manual Resolution" >> $GITHUB_STEP_SUMMARY
            echo "$conflicted_prs" | tr ',' '\n' | while read pr; do
              if [ -n "$pr" ]; then
                echo "- PR #$pr" >> $GITHUB_STEP_SUMMARY
              fi
            done
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

          echo "### 📊 Audit Trail" >> $GITHUB_STEP_SUMMARY
          echo "- Report saved to: \`.repo_hygiene/report.json\`" >> $GITHUB_STEP_SUMMARY
          echo "- Audit branch: \`repo-hygiene/weekly\`" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow run: [\`${{ github.run_id }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY