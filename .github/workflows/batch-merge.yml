name: Merge Train (Analyze & Comment)

on:
  workflow_dispatch:
  schedule:
    - cron: '15 */12 * * *' # twice a day

permissions:
  contents: read
  pull-requests: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Scan open PRs
        id: scan
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const prs = await github.paginate(github.rest.pulls.list, {
              owner,
              repo,
              state: 'open',
              per_page: 100,
              sort: 'updated',
              direction: 'desc'
            });

            const payload = [];

            for (const pr of prs) {
              const labels = pr.labels.map((label) => label.name);
              const checks = await github.rest.checks.listForRef({
                owner,
                repo,
                ref: pr.head.sha,
                per_page: 100
              }).catch(() => ({ data: { check_runs: [] } }));

              const failing = (checks.data.check_runs || [])
                .filter((check) => check.conclusion === 'failure')
                .map((check) => check.name);

              payload.push({
                number: pr.number,
                title: pr.title,
                labels,
                failing
              });
            }

            core.setOutput('payload', JSON.stringify(payload));

      - name: Leave status comments
        if: steps.scan.outputs.payload != ''
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const payload = JSON.parse(process.env.PAYLOAD);

            for (const entry of payload) {
              const body = [
                '### Merge Train Status',
                '',
                `- Failing checks: ${entry.failing.length ? entry.failing.join(', ') : 'None'}`,
                `- Labels: ${entry.labels.length ? entry.labels.join(', ') : 'â€”'}`,
                '',
                '> Tip: Apply `ci:light` to run fast checks only. Use `ci:full` when you need the heavier lane.'
              ].join('\n');

              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: entry.number,
                body
              }).catch((error) => {
                if (error.status !== 403) {
                  core.warning(`Unable to comment on PR #${entry.number}: ${error.message}`);
                }
              });
            }
        env:
          PAYLOAD: ${{ steps.scan.outputs.payload }}

      - name: Log summary
        run: echo "Merge train analysis complete."