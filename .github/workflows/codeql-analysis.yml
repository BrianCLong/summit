name: 🔍 CodeQL Analysis
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Mondays

# Prevent concurrent CodeQL runs
concurrency:
  group: codeql-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: +security-and-quality
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.11.1'
        cache: 'pnpm'
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Build project
      run: pnpm build
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        output: sarif-results
        upload: true
    # CodeQL automatically uploads SARIF and this already has built-in fork protection

  eslint-sarif:
    name: ESLint SARIF Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event.pull_request.head.repo.fork == false || github.event_name != 'pull_request'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.11.1'
        cache: 'pnpm'
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Run ESLint SARIF
      run: |
        pnpm eslint . \
          --format @microsoft/eslint-formatter-sarif \
          --output-file eslint-results.sarif \
        || true
    - name: Upload ESLint SARIF (fork-safe guard)
      if: >
        always() &&
        github.event.pull_request.head.repo.fork == false &&
        hashFiles('**/*.sarif') != ''
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: eslint-results.sarif
        category: eslint

  typescript-sarif:
    name: TypeScript SARIF Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event.pull_request.head.repo.fork == false || github.event_name != 'pull_request'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.11.1'
        cache: 'pnpm'
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    - name: Generate TypeScript SARIF
      run: |
        # Convert TypeScript diagnostics to SARIF format
        npx tsc --noEmit --pretty false 2>&1 | \
        npx @microsoft/sarif-multitool convert --tool typescript --output typescript-results.sarif || true
    - name: Upload TypeScript SARIF (fork-safe guard)
      if: >
        always() &&
        github.event.pull_request.head.repo.fork == false &&
        hashFiles('**/*.sarif') != ''
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: typescript-results.sarif
        category: typescript
