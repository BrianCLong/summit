name: CI Validate

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['18.x', '20.x']
    steps:
      - uses: actions/checkout@c9ef52556095b32f140b0c7d74474f53696d9000
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      - name: Install root dependencies
        run: npm ci || npm install
      - name: Install client dependencies
        run: if [ -f client/package.json ]; then (cd client && npm ci || npm install); fi
      - name: Install server dependencies
        run: if [ -f server/package.json ]; then (cd server && npm ci || npm install); fi
      - name: Install Python dependencies
        run: |
          if [ -f python/pyproject.toml ]; then 
            pip install poetry
            (cd python && poetry install --no-interaction --no-ansi); 
          fi
      - name: Run ESLint
        run: npm run lint
      - name: Run Prettier check
        run: npm run format -- --check
      - name: Run TypeScript check
        run: npm run tsc -- --noEmit
      - name: GraphQL schema check/codegen dry-run
        run: echo "GraphQL schema check/codegen dry-run placeholder"
