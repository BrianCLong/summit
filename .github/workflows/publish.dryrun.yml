name: Publish Dry-Run (changed workspaces)

on:
  pull_request:
    branches: [main]

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Compute changed workspaces
        id: set
        shell: bash
        run: |
          set -euo pipefail
          base="${{ github.event.pull_request.base.sha }}"
          head="${{ github.sha }}"
          changed=$(git diff --name-only "$base" "$head" | tr '\n' '\0' | xargs -0 -n1 dirname | sort -u)
          pkgs=()
          for d in $changed; do
            if [[ "$d" =~ ^(apps|packages|services|contracts)/[^/]+ ]]; then
              root="${BASH_REMATCH[0]}"
              if [ -f "$root/package.json" ]; then pkgs+=("$root"); fi
            fi
          done
          pkgs=($(printf "%s\n" "${pkgs[@]}" | sort -u))
          if [ ${#pkgs[@]} -eq 0 ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            printf 'matrix={"include":[' >> $GITHUB_OUTPUT
            first=true
            for p in "${pkgs[@]}"; do
              $first || printf ',' >> $GITHUB_OUTPUT
              first=false
              printf '{"path":"%s"}' "$p" >> $GITHUB_OUTPUT
            done
            printf ']}' >> $GITHUB_OUTPUT
          fi
          echo "Changed: ${pkgs[*]}"

  pack:
    needs: detect
    if: needs.detect.outputs.matrix != '{"include":[]}'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix: ${{ fromJson(needs.detect.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-node@v4
        with: { node-version: '20.14.x', cache: 'pnpm' }
      - name: Install
        run: |
          corepack enable || true
          corepack prepare pnpm@9.12.3 --activate || true
          pnpm i --frozen-lockfile=false
      - name: Monorepo heal
        run: node scripts/monorepo_heal.mjs
      - name: Dry-run pack (strict)
        id: pack
        working-directory: ${{ matrix.path }}
        shell: bash
        run: |
          set -euo pipefail
          if npm pack --help | grep -q -- --json; then
            out=$(pnpm exec npm pack --dry-run --json)
            echo "$out" | jq . >/dev/null
            fileCount=$(echo "$out" | jq '.[0].files | length')
            [ "$fileCount" -gt 0 ] || { echo "::error::No files would be packed"; exit 1; }
          else
            pnpm exec npm pack --dry-run
          fi
