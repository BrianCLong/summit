name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write        # create releases, upload assets
  actions: read          # download artifacts from prior runs
  id-token: write        # (reserved for future provenance attestation)
  security-events: write # optional: upload SARIF if regenerating

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NODE_VERSION: '20'
      # Thresholds (kept in sync with CI)
      TRAJ_MIN_PASS_RATE: '0.95'
      GROUNDING_MIN_SCORE: '0.90'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Try to reuse CI evidence produced by the CI workflow for this commit SHA
      - name: Download CI Evidence Artifact
        id: dl_artifacts
        uses: dawidd6/action-download-artifact@v2
        continue-on-error: true
        with:
          commit: ${{ github.sha }}
          name: ci-evidence-${{ github.sha }}
          path: reports

      - name: Check if evidence exists
        id: have_reports
        run: |
          if [ -d "reports" ] && [ -n "$(ls -A reports || true)" ]; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      # Fallback: regenerate evidence if missing
      - name: Install deps (fallback)
        if: steps.have_reports.outputs.found == 'false'
        run: npm ci

      - name: Build (fallback)
        if: steps.have_reports.outputs.found == 'false'
        run: npm run build --if-present

      - name: Validate Trajectory (fallback)
        if: steps.have_reports.outputs.found == 'false'
        run: |
          mkdir -p reports
          npm run validate:trajectory --silent || true

      - name: Validate Grounding (fallback)
        if: steps.have_reports.outputs.found == 'false'
        run: |
          npm run validate:grounding --silent || true

      - name: Upload SARIF (fallback)
        if: steps.have_reports.outputs.found == 'false' && exists('reports/grounding.sarif')
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/grounding.sarif

      - name: Generate SBOM
        run: |
          npm i -D @cyclonedx/cyclonedx-npm
          npx @cyclonedx/cyclonedx-npm --output-format json --output-file sbom.json

      - name: Assemble Evidence Manifest & Checksums
        run: |
          mkdir -p evidence/release
          cat > evidence/release/manifest.json << 'JSON'
          {
            "kind": "ci-evidence",
            "sha": "${{ github.sha }}",
            "paths": [
              "reports/junit-trajectory.xml",
              "reports/trajectory-report.json",
              "reports/trajectory-summary.md",
              "reports/grounding.sarif",
              "reports/grounding-report.json",
              "reports/grounding-summary.md",
              "sbom.json"
            ]
          }
          JSON
          # checksums (ignore missing)
          for f in reports/junit-trajectory.xml reports/trajectory-report.json reports/trajectory-summary.md \
                   reports/grounding.sarif reports/grounding-report.json reports/grounding-summary.md \
                   sbom.json; do
            if [ -f "$f" ]; then
              shasum -a 256 "$f" >> evidence/release/SHA256SUMS
            fi
          done

      - name: Compose Release Notes (CI Evidence)
        id: notes
        uses: actions/github-script@v7
        env:
          TRAJ_MIN_PASS_RATE: ${{ env.TRAJ_MIN_PASS_RATE }}
          GROUNDING_MIN_SCORE: ${{ env.GROUNDING_MIN_SCORE }}
        with:
          script: |
            const fs = require('fs');
            const safeRead = p => fs.existsSync(p) ? fs.readFileSync(p, 'utf8') : '';
            const traj = safeRead('reports/trajectory-summary.md');
            const grd  = safeRead('reports/grounding-summary.md');
            const lines = [];
            lines.push(`# ${context.ref.replace('refs/tags/','')} — Release`);
            lines.push('');
            lines.push('## Highlights');
            lines.push('- CI Hardening: Trajectory + Grounding gates');
            lines.push('- Evidence bundle attached (JUnit, SARIF, JSON, SBOM)');
            lines.push('');
            lines.push('## CI Evidence');
            if (traj) { lines.push('### Trajectory'); lines.push(traj.trim()); lines.push(''); }
            if (grd)  { lines.push('### Grounding'); lines.push(grd.trim()); lines.push(''); }
            lines.push('### Gates');
            lines.push(`- Trajectory pass-rate ≥ ${process.env.TRAJ_MIN_PASS_RATE}`);
            lines.push(`- Grounding score ≥ ${process.env.GROUNDING_MIN_SCORE}`);
            const body = lines.join('\n');
            require('fs').writeFileSync('reports/release-notes.md', body);
            core.setOutput('body_path','reports/release-notes.md');

      - name: Create GitHub Release & Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: ${{ steps.notes.outputs.body_path }}
          files: |
            reports/junit-trajectory.xml
            reports/trajectory-report.json
            reports/trajectory-summary.md
            reports/grounding.sarif
            reports/grounding-report.json
            reports/grounding-summary.md
            sbom.json
            evidence/release/manifest.json
            evidence/release/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify published release assets
        run: |
          python3 tools/verify_release.py \
            --tag "${{ github.ref_name }}" \
            --require \
              reports/junit-trajectory.xml \
              reports/trajectory-report.json \
              reports/trajectory-summary.md \
              reports/grounding.sarif \
              reports/grounding-report.json \
              reports/grounding-summary.md \
              sbom.json \
              evidence/release/manifest.json \
              evidence/release/SHA256SUMS

      - name: Attest Build Provenance (slsa-framework)
        uses: slsa-framework/slsa-github-generator/.github/actions/generator@v2.0.0 # Corrected to standard action version
        with: {}