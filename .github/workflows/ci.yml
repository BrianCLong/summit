name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  id-token: write
  security-events: write   # for SARIF
  checks: write            # to publish JUnit

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      NODE_VERSION: '20'
      TRAJ_MIN_PASS_RATE: '0.95'          # fail if < 95%
      TRAJ_MAX_STEP_ERR: '0.02'           # fail if > 2% step mismatches
      GROUNDING_MIN_SCORE: '0.90'         # average grounding quality
      GROUNDING_MAX_GAPS: '0'             # missing-citation count allowed
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Unit Tests
        run: npm test --if-present -- --reporter=junit --reporter-options output=reports/junit-unit.xml || true

      - name: Build
        run: npm run build --if-present

      # === Trajectory Golden-Set ===
      - name: Trajectory Validation
        run: node scripts/run-trajectory-tests.js \
             --input tests/trajectory \
             --junit reports/junit-trajectory.xml \
             --json reports/trajectory-report.json \
             --md reports/trajectory-summary.md \
             --min-pass ${{ env.TRAJ_MIN_PASS_RATE }} \
             --max-step-err ${{ env.TRAJ_MAX_STEP_ERR }}

      # === Grounding Verifier ===
      - name: Grounding Verification
        run: node scripts/run-grounding-verifier.js \
             --input tools/check-grounding/cases \
             --sarif reports/grounding.sarif \
             --json reports/grounding-report.json \
             --md reports/grounding-summary.md \
             --min-score ${{ env.GROUNDING_MIN_SCORE }} \
             --max-gaps ${{ env.GROUNDING_MAX_GAPS }}

      - name: Upload Reports (Artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: ci-evidence-${{ github.sha }}
          if-no-files-found: warn
          path: |
            reports/**
            evidence/**

      - name: Publish SARIF (Grounding)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/grounding.sarif

      - name: Post PR Comment (Summary)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const traj = fs.existsSync('reports/trajectory-summary.md') ? fs.readFileSync('reports/trajectory-summary.md','utf8') : '';
            const gr = fs.existsSync('reports/grounding-summary.md') ? fs.readFileSync('reports/grounding-summary.md','utf8') : '';
            const body = `### CI Evidence\n\n**Trajectory**\n\n${traj}\n\n**Grounding**\n\n${gr}`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

  # Optional: Canary Gate job to enforce SLO/Cost tripwires before merge-to-main deploys
  canary-gate:
    needs: build-test-validate
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
      - name: Evaluate SLO/Cost Tripwires
        run: |
          node scripts/canary-gate.js \
            --slo-reports evidence/slo/*.json \
            --cost-reports evidence/cost/*.json \
            --error-budget-threshold 0.4 \
            --replication-lag-threshold 60
