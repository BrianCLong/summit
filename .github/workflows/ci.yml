name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write

jobs:
  lint:
    name: Lint (JS/TS + Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---- JS/TS Lint & Format ----
      - name: Setup Node
        if: ${{ hashFiles('**/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
      - name: Install JS deps
        if: ${{ hashFiles('**/package.json') != '' }}
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi
      - name: ESLint
        if: ${{ hashFiles('**/.eslintrc*') != '' }}
        run: npx eslint . --max-warnings=0
      - name: Prettier (check)
        if: ${{ hashFiles('**/.prettierrc*') != '' }}
        run: npx prettier . --check

      # ---- Python Lint ----
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python deps
        run: |
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install --upgrade ruff
      - name: Ruff (lint)
        run: ruff check .

      # ---- GraphQL Schema Lint (optional, config-driven) ----
      - name: GraphQL schema lint
        if: ${{ hashFiles('.graphql-schema-linterrc.yml') != '' }}
        run: npx graphql-schema-linter --config .graphql-schema-linterrc.yml

  unit:
    name: Unit Tests (JS/TS + Python)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # JS/TS
      - name: Setup Node
        if: ${{ hashFiles('**/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
      - name: Install JS deps
        if: ${{ hashFiles('**/package.json') != '' }}
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi
      - name: Run JS/TS tests
        if: ${{ hashFiles('**/package.json') != '' }}
        run: |
          if npm run | grep -qE '^ *test( |:)'; then npm test -- --ci --reporter=dot; else echo "No JS tests"; fi

      # Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python deps
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install -q pytest
      - name: Run Python tests
        run: |
          if [ -d tests ] || ls -1 **/*_test.py **/test_*.py 2>/dev/null | grep -q .; then pytest -q; else echo "No Python tests"; fi

  e2e_smoke:
    name: E2E Smoke (Playwright)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        if: ${{ hashFiles('**/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
      - name: Install deps
        if: ${{ hashFiles('**/package.json') != '' }}
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi
      - name: Install Playwright browsers
        if: ${{ hashFiles('**/playwright.config.*') != '' }}
        run: npx playwright install --with-deps
      - name: Run smoke
        if: ${{ hashFiles('**/playwright.config.*') != '' }}
        run: |
          if npm run | grep -qE '^ *(e2e:smoke|test:e2e|e2e)( |:)'; then             (npm run e2e:smoke 2>/dev/null || npm run test:e2e 2>/dev/null || npm run e2e);           else             echo "No E2E smoke configured";           fi

  codeql:
    name: CodeQL (JS/TS + Python)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript-typescript', 'python']
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3
