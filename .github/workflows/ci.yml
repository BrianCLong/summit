name: CI
on:
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]

concurrency:
  group: ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      security-events: write
      actions: read
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: intelgraph
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s
      neo4j:
        image: neo4j:5.22
        env: { NEO4J_AUTH: neo4j/test }
        ports: ['7687:7687', '7474:7474']

    steps:
      - uses: actions/checkout@a5ac7e51b4109f5124f9564e9f05e504dfbe8c05 # v4.1.7
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4.0.2
        with: { node-version: '18.20.4', cache: 'npm' }

      - name: Enable Corepack (Yarn)
        run: corepack enable

      - uses: actions/setup-python@8dbde3f5ebb81608341338596a749ea681585504 # v5.1.0
        with: { python-version: '3.12' }

      - name: Install JS deps
        run: |
          if [ -f yarn.lock ]; then yarn --immutable; else npm ci; fi

      - name: Install Python deps
        run: pip install -r requirements.txt

      - name: Display tool versions
        run: cat tools/versions.md

      - name: commitlint (PR commits & title)
        uses: wagoid/commitlint-github-action@81ba6f721d1fa337eea857333431901513241515 # v6.0.1

      - name: Lint (JS/TS & Python)
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      - name: Unit tests (JS & Py) with coverage
        run: |
          npm test -- --coverage
          pytest --cov-fail-under=85

      - name: GraphQL schema diff
        run: npm run graphql:schema:check

      - name: Postgres (Prisma) migrate + generate
        if: ${{ hashFiles('packages/db/prisma/schema.prisma') != '' }}
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/intelgraph
        run: |
          npm run db:pg:generate
          npm run db:pg:migrate
          npm run db:pg:status

      - name: Postgres (Knex) migrate
        if: ${{ hashFiles('packages/db/knex/knexfile.cjs') != '' }}
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/intelgraph
        run: npm run db:knex:migrate

      - name: Neo4j migrations
        env:
          NEO4J_URI: bolt://localhost:7687
          NEO4J_USER: neo4j
          NEO4J_PASSWORD: test
        run: npm run db:neo4j:migrate

      - name: Prisma schema drift check
        if: ${{ hashFiles('packages/db/prisma/schema.prisma') != '' }}
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/intelgraph
        run: npm run db:prisma:diff

      - name: Knex migration smoke test
        if: ${{ hashFiles('packages/db/knex/knexfile.cjs') != '' }}
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/intelgraph
        run: npm run db:knex:smoke

      - name: actionlint (GitHub Workflows)
        uses: reviewdog/action-actionlint@256e554de0010a009397c9abc77855f634cf7353 # v1.4.0

      - name: hadolint (Dockerfiles)
        uses: hadolint/hadolint-action@1351d990f755c059477a23de95d89302567c04f3 # v3.1.0
        with: { dockerfile: '**/Dockerfile' }

      - name: Trivy (dependency & fs scan)
        uses: aquasecurity/trivy-action@b95621a837499832c705591a4924e4b10b34332e # 0.16.0
        with:
          scan-type: fs
          ignore-unfixed: true
          severity: HIGH,CRITICAL

      - name: gitleaks (secrets)
        uses: gitleaks/gitleaks-action@3e644d5f43f3243a27503c90600d4a84228541c7 # v2.3.0
        with: { args: --no-git -v }

      - name: License check (JS)
        run: npx license-checker --production --excludePrivatePackages --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC"

      - name: Build
        run: if [ -f yarn.lock ]; then yarn build; else npm run build; fi

      - name: Upload coverage
        uses: actions/upload-artifact@a8a3f3054ee345891c80fa8aa84a2b65b824e06a # v4.3.3
        with: { name: coverage, path: coverage }
name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - run: pip install -r requirements.txt
    - run: pytest prov-ledger/tests/ -v
