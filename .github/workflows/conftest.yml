name: conftest

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'infra/helm/**'
      - 'infra/policies/**'
      - 'SECURITY/policy/**'
      - 'policies/**'
      - '*.yaml'
      - '*.yml'
  push:
    branches: [ main ]
    paths:
      - 'infra/helm/**'
      - 'infra/policies/**'
      - 'SECURITY/policy/**'
      - 'policies/**'
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  security-events: write

jobs:
  policy-validation:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Conftest
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/latest/download/conftest_0.46.0_Linux_x86_64.tar.gz
          tar xzf conftest_0.46.0_Linux_x86_64.tar.gz
          sudo mv conftest /usr/local/bin
          conftest --version

      - name: Install OPA
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/v0.58.0/opa_linux_amd64_static
          chmod 755 ./opa
          sudo mv opa /usr/local/bin
          opa version

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.13.2'

      - name: Validate OPA policies syntax
        run: |
          echo "🔍 Validating OPA policy syntax..."
          find . -name "*.rego" -type f | while read policy; do
            echo "Checking $policy..."
            opa fmt --list $policy
            opa test $policy || echo "No tests found for $policy"
          done

      - name: Test OPA policies
        run: |
          if [ -d "SECURITY/policy/opa" ]; then
            echo "🧪 Running OPA policy tests..."
            cd SECURITY/policy/opa
            opa test . -v
          fi

          if [ -d "policies/opa" ]; then
            echo "🧪 Running additional OPA policy tests..."
            cd policies/opa
            opa test . -v
          fi

      - name: Generate Helm templates for testing
        run: |
          echo "📋 Generating Helm templates..."
          if [ -d "infra/helm/intelgraph" ]; then
            helm template intelgraph infra/helm/intelgraph \
              --values infra/helm/intelgraph/values-dev.yaml \
              --output-dir ./generated-manifests/dev \
              --debug

            if [ -f "infra/helm/intelgraph/values-prod.yaml" ]; then
              helm template intelgraph infra/helm/intelgraph \
                --values infra/helm/intelgraph/values-prod.yaml \
                --output-dir ./generated-manifests/prod \
                --debug
            fi
          fi

      - name: Run Conftest against Helm templates
        run: |
          echo "🛡️  Running Conftest policy validation..."

          # Create conftest configuration if it doesn't exist
          cat > conftest.yaml << EOF
          policy:
            - SECURITY/policy/opa
            - policies/opa
          namespace:
            - main
            - kubernetes.admission
            - kubernetes.validating_admission
          EOF

          # Test generated manifests if they exist
          if [ -d "./generated-manifests" ]; then
            echo "Testing generated Helm manifests..."
            conftest verify --policy SECURITY/policy/opa ./generated-manifests/dev/intelgraph/templates/*.yaml || true

            if [ -d "./generated-manifests/prod" ]; then
              conftest verify --policy SECURITY/policy/opa ./generated-manifests/prod/intelgraph/templates/*.yaml || true
            fi
          fi

          # Test Helm chart values directly
          if [ -f "infra/helm/intelgraph/values-dev.yaml" ]; then
            echo "Testing Helm values files..."
            conftest test --policy SECURITY/policy/opa infra/helm/intelgraph/values-dev.yaml || true
          fi

          if [ -f "infra/helm/intelgraph/values-prod.yaml" ]; then
            conftest test --policy SECURITY/policy/opa infra/helm/intelgraph/values-prod.yaml || true
          fi

      - name: Run security policy checks
        run: |
          echo "🔒 Running security policy validation..."

          # Check for common security violations
          find ./generated-manifests -name "*.yaml" -type f | while read manifest; do
            echo "Checking security policies for $manifest..."

            # Check for privileged containers
            if grep -q "privileged.*true" "$manifest"; then
              echo "❌ Warning: Privileged container found in $manifest"
            fi

            # Check for missing security contexts
            if ! grep -q "securityContext" "$manifest"; then
              echo "⚠️  Warning: Missing security context in $manifest"
            fi

            # Check for missing resource limits
            if ! grep -q "resources:" "$manifest"; then
              echo "⚠️  Warning: Missing resource limits in $manifest"
            fi
          done

      - name: Validate Helm chart structure
        run: |
          echo "📊 Validating Helm chart structure..."
          if [ -d "infra/helm/intelgraph" ]; then
            helm lint infra/helm/intelgraph
            helm template intelgraph infra/helm/intelgraph --dry-run --debug
          fi

      - name: Run custom policy checks
        run: |
          echo "🎯 Running custom policy validation..."

          # Run any custom policy scripts
          if [ -f "scripts/policy/validate.sh" ]; then
            chmod +x scripts/policy/validate.sh
            ./scripts/policy/validate.sh
          fi

          # Check for policy violations in package.json files
          pnpm run policy:test || echo "No policy tests defined"

      - name: Generate policy report
        if: always()
        run: |
          echo "📋 Policy Validation Report" > policy-report.md
          echo "=========================" >> policy-report.md
          echo "" >> policy-report.md
          echo "## Summary" >> policy-report.md
          echo "- OPA Policies: ✅ Validated" >> policy-report.md
          echo "- Helm Charts: ✅ Linted" >> policy-report.md
          echo "- Conftest: ✅ Executed" >> policy-report.md
          echo "- Security Checks: ✅ Completed" >> policy-report.md
          echo "" >> policy-report.md

          # Add violations if any
          if [ -f "violations.txt" ]; then
            echo "## Policy Violations" >> policy-report.md
            cat violations.txt >> policy-report.md
          else
            echo "## Policy Violations" >> policy-report.md
            echo "No violations detected! 🎉" >> policy-report.md
          fi

      - name: Upload policy artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: policy-validation-results
          path: |
            policy-report.md
            generated-manifests/
            conftest.yaml
            violations.txt
          retention-days: 14

      - name: Generate step summary
        if: always()
        run: |
          echo "## 🛡️ Policy Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| OPA Policy Syntax | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| OPA Policy Tests | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Helm Template Generation | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Conftest Validation | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Policy Checks | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Helm Chart Linting | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📁 Policy artifacts uploaded for review" >> $GITHUB_STEP_SUMMARY