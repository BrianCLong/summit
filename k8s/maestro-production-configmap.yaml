apiVersion: v1
kind: ConfigMap
metadata:
  name: maestro-config
  namespace: intelgraph-prod
  labels:
    app.kubernetes.io/name: maestro
    app.kubernetes.io/component: config
    app.kubernetes.io/version: '2.0.0-prod'
data:
  app.yaml: |
    server:
      port: 8080
      host: 0.0.0.0
      timeout: 30s
      environment: production
      gracefulShutdownTimeoutMs: 30000

    orchestration:
      enabled: true
      maxConcurrentSources: 15
      defaultStrategy: consensus
      timeoutSeconds: 300
      retryAttempts: 3
      backoffMultiplier: 2

    premium:
      enabled: true
      budgetThreshold: 5.0
      routingStrategy: thompson_sampling
      modelSelection:
        gpt4: 0.3
        claude3: 0.4
        gemini: 0.3

    compliance:
      enabled: true
      auditTrail: true
      policyDecisionPoint:
        url: "http://pdp.security:8181"
        timeout: 5s
      requiredPurposes:
        - intelligence_analysis
        - research
        - documentation
        - development

    webScraping:
      enabled: true
      maxConcurrentRequests: 10
      timeoutSeconds: 30
      retryAttempts: 2
      allowedDomains: []
      blockedDomains:
        - "facebook.com"
        - "twitter.com"
        - "tiktok.com"
      
    cache:
      type: redis
      ttl: 3600
      maxSize: 1000
      keyPrefix: "maestro:"

    rateLimit:
      global: 1000
      perTenant: 100
      perUser: 50
      window: 60
      burst: 200

    monitoring:
      metrics:
        enabled: true
        path: "/metrics"
        port: 9090
      tracing:
        enabled: true
        endpoint: "http://otel-collector.monitoring:4317"
        sampleRate: 0.1
      logging:
        level: info
        format: json
        enableAccessLog: true

    security:
      cors:
        origins:
          - "https://intelgraph.ai"
          - "https://app.intelgraph.ai"
          - "https://maestro.intelgraph.ai"
        methods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        headers:
          - "Content-Type"
          - "Authorization"
          - "X-Requested-With"
      authentication:
        jwt:
          issuer: "maestro.intelgraph.ai"
          audience: "maestro-api"
          expirySeconds: 3600
      authorization:
        rbac:
          enabled: true
          defaultRole: "viewer"

    features:
      enableAdvancedSynthesis: true
      enableContradictionResolution: true
      enableProvenanceTracking: true
      enableBudgetEnforcement: true
      enableQualityScoring: true

  production.json: |
    {
      "nodeEnv": "production",
      "service": {
        "name": "maestro-orchestrator",
        "version": "2.0.0-prod",
        "environment": "production"
      },
      "database": {
        "maxConnections": 20,
        "connectionTimeoutMs": 5000,
        "idleTimeoutMs": 30000,
        "ssl": true,
        "sslMode": "require"
      },
      "redis": {
        "maxRetriesPerRequest": 3,
        "retryDelayOnFailover": 100,
        "maxRetriesPerRequest": 3,
        "connectTimeout": 5000,
        "lazyConnect": true
      },
      "performance": {
        "maxOldSpaceSize": 2048,
        "uvThreadpoolSize": 128,
        "gcInterval": 300000
      }
    }

  nginx.conf: |
    upstream maestro-backend {
        least_conn;
        server maestro-orchestrator-svc.maestro-system.svc.cluster.local:80 max_fails=3 fail_timeout=30s;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=burst_limit:10m rate=1000r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    server {
        listen 80;
        server_name maestro.intelgraph.ai;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Rate limiting
        limit_req zone=api_limit burst=200 nodelay;
        limit_conn conn_limit 50;
        
        # Health checks (no rate limit)
        location ~ ^/(healthz|readyz)$ {
            access_log off;
            proxy_pass http://maestro-backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Metrics (authenticated)
        location /metrics {
            allow 10.0.0.0/8;
            deny all;
            proxy_pass http://maestro-backend:9090;
        }
        
        # API endpoints
        location /api/ {
            limit_req zone=burst_limit burst=500 nodelay;
            proxy_pass http://maestro-backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            client_max_body_size 50m;
        }
    }

  log4j2.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="INFO">
      <Appenders>
        <Console name="Console" target="SYSTEM_OUT">
          <PatternLayout pattern="%d{ISO8601} [%t] %-5level %logger{36} - %msg%n"/>
        </Console>
        <RollingFile name="FileAppender" fileName="/app/logs/maestro.log"
                     filePattern="/app/logs/maestro-%d{yyyy-MM-dd}-%i.log.gz">
          <PatternLayout>
            <pattern>%d{ISO8601} [%t] %-5level %logger{36} - %msg%n</pattern>
          </PatternLayout>
          <Policies>
            <TimeBasedTriggeringPolicy />
            <SizeBasedTriggeringPolicy size="100 MB"/>
          </Policies>
          <DefaultRolloverStrategy max="10"/>
        </RollingFile>
      </Appenders>
      <Loggers>
        <Logger name="maestro" level="INFO" additivity="false">
          <AppenderRef ref="Console"/>
          <AppenderRef ref="FileAppender"/>
        </Logger>
        <Root level="WARN">
          <AppenderRef ref="Console"/>
          <AppenderRef ref="FileAppender"/>
        </Root>
      </Loggers>
    </Configuration>

  fluentbit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf

    [INPUT]
        Name              tail
        Path              /app/logs/*.log
        Parser            json
        Tag               maestro.logs
        Refresh_Interval  5
        Mem_Buf_Limit     50MB

    [OUTPUT]
        Name  forward
        Match maestro.*
        Host  fluentd.logging.svc.cluster.local
        Port  24224
        tls   on
        tls.verify on
        tls.ca_file /etc/ssl/certs/ca-certificates.crt
