# Deprecated husky setup removed

set -euo pipefail

start_ts=$(date +%s)
repo_root="$(git rev-parse --show-toplevel 2>/dev/null || pwd)"
cd "$repo_root"

echo "üîç Running pre-push checks (precodegen ‚Üí persist:queries [live‚Üísnapshot] ‚Üí verify:safelist ‚Üí lint)"

# 0) Detect package manager (defaults to npm); allow PKG=pnpm / yarn
PKG="npm"

# 1) Precodegen: fail fast on duplicate GraphQL operation names
echo "üß© Precodegen: checking for duplicate operation names..."
node scripts/find-duplicate-ops.mjs

# 2) Persisted ops + types (try LIVE schema, fallback to SNAPSHOT)
echo "üìù Regenerating GraphQL types and persisted operations (live schema)‚Ä¶"
set +e
(cd client && GRAPHQL_CODEGEN_CONCURRENCY=1 "$PKG" run persist:queries)
live_rc=$?
set -e

if [ "$live_rc" -ne 0 ]; then
  echo "‚ö†Ô∏è  Live schema codegen failed. Attempting snapshot fallback‚Ä¶"
  SNAPSHOT="client/schema.graphql"
  if [ ! -f "$SNAPSHOT" ]; then
    if [ "${PREPUSH_SCHEMA_AUTOUPDATE:-}" = "1" ]; then
      echo "üß™ Snapshot missing ‚Äî trying to fetch from live API via 'npm run schema:update'‚Ä¶"
      set +e
      "$PKG" run schema:update
      update_rc=$?
      set -e
      if [ "$update_rc" -ne 0 ] || [ ! -f "$SNAPSHOT" ]; then
        echo "‚ùå Snapshot update failed or still missing at $SNAPSHOT."
        echo "   Tip: run 'npm run schema:update' when online to populate it."
        exit 1
      fi
    else
      echo "‚ùå Snapshot not found at $SNAPSHOT."
      echo "   Tip: run 'npm run schema:update' once when online (or set PREPUSH_SCHEMA_AUTOUPDATE=1)."
      exit 1
    fi
  fi
  (cd client && GRAPHQL_CODEGEN_CONCURRENCY=1 CODEGEN_SCHEMA="$SNAPSHOT" "$PKG" run persist:queries)
  echo "‚úÖ Codegen succeeded using snapshot schema."
else
  echo "‚úÖ Codegen succeeded using live schema."
fi

# 3) Safelist verification (APQ parity)
echo "‚úÖ Verifying safelist covers all client operations‚Ä¶"
"$PKG" run verify:safelist

# 4) Lint (includes .graphql)
echo "üîß Linting client to catch raw gql literals and style issues‚Ä¶"
(cd client && "$PKG" run lint)

end_ts=$(date +%s)
echo "‚úÖ Pre-push checks passed in $((end_ts - start_ts))s"
