---
apiVersion: v1
kind: Namespace
metadata:
  name: vault
  labels:
    pod-security.kubernetes.io/enforce: baseline
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-auth
  namespace: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-auth-tokenreview
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: vault-auth
    namespace: vault
---
apiVersion: v1
kind: Namespace
metadata:
  name: intelgraph
  labels:
    pod-security.kubernetes.io/enforce: baseline
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: intelgraph-vault-agent-config
  namespace: intelgraph
  labels:
    app.kubernetes.io/name: intelgraph
    app.kubernetes.io/part-of: intelgraph
  annotations:
    hashicorp.com/template-config: 'true'
    trivy.security.aquasec.com/ignore: AVD-KSV-0109
    trivy.security.aquasec.com/ignore-comment: Template only references logical secret keys; rendered by Vault agents.
data:
  config.hcl: |
    exit_after_auth = false
    pid_file = "/tmp/vault-agent.pid"

    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "intelgraph-prod"
        }
      }

      sink "file" {
        config = {
          path = "/home/vault/.token"
        }
      }
    }

    template {
      source      = "/vault/templates/app.env"
      destination = "/vault/secrets/app.env"
      command     = "/bin/sh -c 'chmod 0400 /vault/secrets/app.env'"
    }
  templates/app.env: |
    {{- with secret "secret/data/intelgraph/prod/api-gateway" -}}
    {{- range $key, $value := .Data.data }}
    {{ $key | upper }}={{ $value }}
    {{- end }}
    {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-ca
  namespace: intelgraph
  annotations:
    cert.hashicorp.com/usage: ca
stringData:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    <replace-with-real-vault-ca>
    -----END CERTIFICATE-----
