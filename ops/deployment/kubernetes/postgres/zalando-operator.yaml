apiVersion: v1
kind: Namespace
metadata:
  name: database-operators
  labels:
    app.kubernetes.io/name: database-operators
    app.kubernetes.io/part-of: summit-data-plane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-operator
  namespace: database-operators
  labels:
    app.kubernetes.io/name: postgres-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: postgres-operator
  labels:
    app.kubernetes.io/name: postgres-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
  - nonResourceURLs: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: postgres-operator
  labels:
    app.kubernetes.io/name: postgres-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: postgres-operator
subjects:
  - kind: ServiceAccount
    name: postgres-operator
    namespace: database-operators
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-operator
  namespace: database-operators
  labels:
    app.kubernetes.io/name: postgres-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
data:
  config.yaml: |
    watched_namespace: ""
    enable_shm_volume: true
    enable_team_superuser: true
    resync_period_seconds: 30
    sidecars:
      exporter:
        image: ghcr.io/zalando/postgres-operator:latest
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 20m
            memory: 64Mi
    teams_api:
      enable_admin_role_for_users: true
      enable_team_superuser: true
      enable_pod_disruption_budget: true
      team_admin_role: "summit-db-admin"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-operator
  namespace: database-operators
  labels:
    app.kubernetes.io/name: postgres-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres-operator
        app.kubernetes.io/component: controller
        app.kubernetes.io/part-of: summit-data-plane
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: postgres-operator
      containers:
        - name: postgres-operator
          image: ghcr.io/zalando/postgres-operator:v1.10.1
          imagePullPolicy: IfNotPresent
          args:
            - "--config-file=/etc/postgres-operator/config/config.yaml"
          ports:
            - containerPort: 8080
              name: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: config
              mountPath: /etc/postgres-operator/config
      volumes:
        - name: config
          configMap:
            name: postgres-operator
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-operator-metrics
  namespace: database-operators
  labels:
    app.kubernetes.io/name: postgres-operator
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: summit-data-plane
spec:
  selector:
    app.kubernetes.io/name: postgres-operator
  ports:
    - name: http
      port: 8080
      targetPort: metrics
