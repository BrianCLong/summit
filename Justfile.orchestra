set shell := ["/bin/bash", "-cu"]

# Full boot + smoke + RAG stats + status
orchestra:
    just --justfile Justfile.ai ai-up
    echo "==> Six-word health checks"
    bash tools/ai_check6.sh
    echo "==> RAG build & stats"
    mkdir -p rag/corpus
    just --justfile Justfile.rag rag-build
    python3 tools/rag_stats.py || true
    echo "==> Status"
    bash tools/status-mini.sh

# Quick pass (no rebuild)
orchestra-fast:
    just --justfile Justfile.ai ai-up
    echo "==> Six-word health checks"
    bash tools/ai_check6.sh
    echo "==> Status"
    bash tools/status-mini.sh

# Include Neo4j guard in the dance (disposable DB)
orchestra-guard:
    just --justfile Justfile.neo4j neo4j-guard

# Keep Neo4j up so you can poke around
orchestra-guard-keep:
    KEEP_DB=1 just --justfile Justfile.neo4j neo4j-guard

orchestra-smoke:
    bash tools/smoke.sh

backup:
    bash tools/backup.sh

restore ARCHIVE:
    bash tools/restore.sh "{{ARCHIVE}}"

# --- Browser dashboard ---
dash-refresh:
    python3 tools/status_json.py

dash-open:
    python3 -m http.server -d dashboard 8008 >/tmp/orch_dash.log 2>&1 & echo $! > /tmp/orch_dash.pid
    sleep 0.2
    open -a "Google Chrome" "http://127.0.0.1:8008" || open "http://127.0.0.1:8008"

dash-stop:
    test -f /tmp/orch_dash.pid && kill "$(cat /tmp/orch_dash.pid)" && rm /tmp/orch_dash.pid || true

# --- Symphony CLI shortcuts ---
symphony-status:
    python3 tools/symphony.py orchestrator status

symphony-smoke:
    python3 tools/symphony.py pipeline run --smoke

symphony-policy:
    python3 tools/symphony.py policy show
