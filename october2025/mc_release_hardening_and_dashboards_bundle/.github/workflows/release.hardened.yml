name: release.hardened
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  build:
    name: Build & SBOM
    runs-on: ubuntu-latest
    outputs:
      sbom_path: sbom.json
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - name: Install
        run: |
          corepack enable
          pnpm i --frozen-lockfile
      - name: Build
        run: |
          pnpm -w build || pnpm build
      - name: Generate SBOM (CycloneDX)
        run: |
          npx @cyclonedx/cyclonedx-npm --output-file sbom.json --output-format json
          test -s sbom.json
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          if-no-files-found: error

  provenance:
    name: SLSA Provenance
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    permissions:
      id-token: write
      contents: write
      actions: read
      attestations: write
    with:
      base64-subject: ${{ secrets.PROVENANCE_SUBJECT_B64 || '' }}
      compile-generator: true

  verify-release:
    name: Verify SBOM & Provenance
    runs-on: ubuntu-latest
    needs: [build, provenance]
    steps:
      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: .
      - name: Verify SBOM exists
        run: |
          test -s sbom.json || (echo 'SBOM missing' && exit 1)
      - name: Verify provenance attestation presence
        run: |
          echo "Note: The SLSA generator uploads attestations to the release. Ensure policy checks enforce this."
      - name: Gate release on evidence
        run: |
          echo "Evidence present. Proceeding."

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [verify-release]
    steps:
      - uses: actions/checkout@v4
      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: .
      - name: Release with SBOM attached
        uses: softprops/action-gh-release@v2
        with:
          files: |
            sbom.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
