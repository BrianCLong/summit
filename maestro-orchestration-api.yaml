openapi: 3.0.0
info:
  title: Maestro Orchestration API
  version: 1.0.0
  description: API for managing and orchestrating Maestro runs, pipelines, and related resources.
  contact:
    name: Maestro Team
    email: maestro@intelgraph.io
servers:
  - url: /api/maestro/v1
    description: Maestro API Gateway
paths:
  /runs:
    get:
      operationId: listRuns
      summary: List all Maestro runs
      tags:
        - Runs
      responses:
        '200':
          description: A list of runs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Run'
    post:
      operationId: createRun
      summary: Create a new Maestro run
      tags:
        - Runs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRunRequest'
      responses:
        '201':
          description: Run created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
  /runs/{runId}:
    get:
      operationId: getRunById
      summary: Get a Maestro run by ID
      tags:
        - Runs
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
          description: ID of the run to retrieve
      responses:
        '200':
          description: Run details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Run'
        '404':
          description: Run not found
  /runs/deprecated-endpoint:
    get:
      operationId: getDeprecatedRuns
      summary: Get a list of deprecated runs (DEPRECATED)
      tags:
        - Runs
      deprecated: true
      description: This endpoint is deprecated and will be removed in future versions. Please use /runs instead.
      x-deprecated-alternatives:
        - /runs
      responses:
        '200':
          description: A list of runs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Run'
      # Example of Sunset header (would be set by the server, not in OpenAPI spec)
      # headers:
      #   Sunset: "Fri, 31 Dec 2025 23:59:59 GMT"
  /pipelines:
    get:
      operationId: listPipelines
      summary: List all Maestro pipelines
      tags:
        - Pipelines
      responses:
        '200':
          description: A list of pipelines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pipeline'
  /budgets/tenant:
    get:
      operationId: getTenantBudget
      summary: Get a tenant's budget details
      tags:
        - Budgets
      parameters:
        - name: tenant
          in: query
          required: true
          schema:
            type: string
          description: Tenant ID
      responses:
        '200':
          description: Tenant budget information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
  /alertcenter/events:
    get:
      operationId: listAlertEvents
      summary: List all alert events
      tags:
        - Alerts
      responses:
        '200':
          description: A list of alert events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AlertEvent'
  /handoff/fastlane:
    post:
      operationId: submitFastlaneHandoff
      summary: Submit a fastlane handoff request for expedited processing
      tags:
        - Handoff
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlaneHandoffRequest'
      responses:
        '200':
          description: Handoff request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlaneHandoffResponse'
        '429':
          description: Rate limit exceeded or fastlane capacity full
components:
  schemas:
    Run:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the run
        pipeline:
          type: string
          description: Name of the pipeline executed
        status:
          type: string
          description: Current status of the run (e.g., Queued, Running, Succeeded, Failed)
        durationMs:
          type: number
          format: int64
          description: Duration of the run in milliseconds
        cost:
          type: number
          format: float
          description: Cost incurred by the run in USD
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the run was created
        traceId:
          type: string
          description: OpenTelemetry Trace ID associated with the run
          nullable: true
      required:
        - id
        - pipeline
        - status
    CreateRunRequest:
      type: object
      properties:
        pipelineId:
          type: string
          description: ID of the pipeline to run
        estimatedCost:
          type: number
          format: float
          description: Estimated cost of the run for budget checks
      required:
        - pipelineId
        - estimatedCost
    Pipeline:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the pipeline
        name:
          type: string
          description: Name of the pipeline
        version:
          type: string
          description: Version of the pipeline
        owner:
          type: string
          description: Owner of the pipeline
      required:
        - id
        - name
    Budget:
      type: object
      properties:
        tenant:
          type: string
          description: Tenant ID
        monthlyUsd:
          type: number
          format: float
          description: Monthly budget in USD
        currentSpend:
          type: number
          format: float
          description: Current spend for the month in USD
        policy:
          $ref: '#/components/schemas/BudgetPolicy'
      required:
        - tenant
        - monthlyUsd
    BudgetPolicy:
      type: object
      properties:
        type:
          type: string
          enum: ['hard', 'soft']
          description: Type of budget enforcement
        limit:
          type: number
          format: float
          description: Budget limit in USD
        grace:
          type: number
          format: float
          description: Grace percentage for soft caps (0.0 - 1.0)
      required:
        - type
        - limit
    FastlaneHandoffRequest:
      type: object
      properties:
        requestId:
          type: string
          description: Unique request ID for tracking
        priority:
          type: string
          enum: ['urgent', 'high', 'normal']
          description: Priority level for fastlane processing
        agentId:
          type: string
          description: ID of the agent making the handoff request
        signalStrength:
          type: number
          format: float
          description: Signal strength indicating urgency (0.0-1.0)
        payload:
          type: object
          description: Request payload data
          additionalProperties: true
      required:
        - requestId
        - agentId
        - signalStrength
    FastlaneHandoffResponse:
      type: object
      properties:
        requestId:
          type: string
          description: Unique request ID echoed back
        accepted:
          type: boolean
          description: Whether the fastlane request was accepted
        estimatedLatencyMs:
          type: number
          format: int64
          description: Estimated processing latency in milliseconds
        queuePosition:
          type: integer
          description: Position in the fastlane queue
      required:
        - requestId
        - accepted
    AlertEvent:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the alert event
        type:
          type: string
          description: Type of alert (e.g., billing, supply-chain, slo, friction)
        severity:
          type: string
          description: Severity of the alert (e.g., critical, warning, info)
        title:
          type: string
          description: Short summary of the alert
        body:
          type: string
          description: Detailed description of the alert
        ts:
          type: number
          format: int64
          description: Timestamp of the alert event in milliseconds (epoch)
        frictionMetrics:
          type: object
          description: Friction-specific metrics when type is 'friction'
          properties:
            latencyMs:
              type: number
              format: int64
              description: Measured latency in milliseconds
            retryCount:
              type: integer
              description: Number of retries attempted
            errorRate:
              type: number
              format: float
              description: Error rate as a percentage (0.0-1.0)
        meta:
          type: object
          description: Additional metadata related to the alert
          additionalProperties: true
      required:
        - id
        - type
        - severity
        - title
        - ts
