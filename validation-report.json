{
  "timestamp": "2025-08-18T16:03:09.222Z",
  "summary": {
    "total": 42,
    "passed": 36,
    "failed": 6,
    "successRate": 86
  },
  "details": [
    {
      "name": "PostgreSQL Connection",
      "status": "PASS",
      "details": "Connected successfully"
    },
    {
      "name": "Table: users",
      "status": "PASS",
      "details": "Schema exists"
    },
    {
      "name": "Table: investigations",
      "status": "FAIL",
      "details": "Missing from schema"
    },
    {
      "name": "Table: entities",
      "status": "PASS",
      "details": "Schema exists"
    },
    {
      "name": "Table: relationships",
      "status": "PASS",
      "details": "Schema exists"
    },
    {
      "name": "Table: copilot_runs",
      "status": "PASS",
      "details": "Schema exists"
    },
    {
      "name": "PostgreSQL Database",
      "status": "FAIL",
      "details": "relation \"investigations\" does not exist"
    },
    {
      "name": "Neo4j Connection",
      "status": "PASS",
      "details": "Neo4j Connected"
    },
    {
      "name": "Neo4j Constraints",
      "status": "PASS",
      "details": "Entity uniqueness constraint verified"
    },
    {
      "name": "Neo4j Write Test",
      "status": "PASS",
      "details": "Node created: test-1755532988669"
    },
    {
      "name": "Neo4j Cleanup",
      "status": "PASS",
      "details": "Test nodes removed"
    },
    {
      "name": "Redis Connection",
      "status": "PASS",
      "details": "Connected successfully"
    },
    {
      "name": "Redis Read/Write",
      "status": "PASS",
      "details": "Set/Get operations working"
    },
    {
      "name": "Redis Session Storage",
      "status": "PASS",
      "details": "Session data: {\"userId\":\"test-user\",\"timestamp\":\"1755532989200\",\"role\":\"analyst\"}"
    },
    {
      "name": "GraphQL Schema File",
      "status": "PASS",
      "details": "Schema definition found"
    },
    {
      "name": "GraphQL Resolvers",
      "status": "PASS",
      "details": "Resolver definitions found"
    },
    {
      "name": "GraphQL Type: User",
      "status": "FAIL",
      "details": "Type definition missing"
    },
    {
      "name": "GraphQL Type: Investigation",
      "status": "FAIL",
      "details": "Type definition missing"
    },
    {
      "name": "GraphQL Type: Entity",
      "status": "FAIL",
      "details": "Type definition missing"
    },
    {
      "name": "GraphQL Type: Relationship",
      "status": "FAIL",
      "details": "Type definition missing"
    },
    {
      "name": "GraphQL Type: Query",
      "status": "PASS",
      "details": "Type definition found"
    },
    {
      "name": "GraphQL Type: Mutation",
      "status": "PASS",
      "details": "Type definition found"
    },
    {
      "name": "Security: JWT_SECRET",
      "status": "PASS",
      "details": "Environment variable configured"
    },
    {
      "name": "Security: JWT_REFRESH_SECRET",
      "status": "PASS",
      "details": "Environment variable configured"
    },
    {
      "name": "Security: ALLOWED_ORIGINS",
      "status": "PASS",
      "details": "Environment variable configured"
    },
    {
      "name": "Security: RATE_LIMIT_MAX",
      "status": "PASS",
      "details": "Environment variable configured"
    },
    {
      "name": "JWT Secret Strength",
      "status": "PASS",
      "details": "Secret meets minimum length requirements"
    },
    {
      "name": "Security Configuration File",
      "status": "PASS",
      "details": "Production security config found"
    },
    {
      "name": "Database Performance",
      "status": "PASS",
      "details": "10 concurrent queries in 18ms"
    },
    {
      "name": "Docker Compose File",
      "status": "PASS",
      "details": "Configuration file found"
    },
    {
      "name": "Docker Service: postgres",
      "status": "PASS",
      "details": "Service defined"
    },
    {
      "name": "Docker Service: neo4j",
      "status": "PASS",
      "details": "Service defined"
    },
    {
      "name": "Docker Service: redis",
      "status": "PASS",
      "details": "Service defined"
    },
    {
      "name": "Docker Service: server",
      "status": "PASS",
      "details": "Service defined"
    },
    {
      "name": "Docker Health Checks",
      "status": "PASS",
      "details": "Health check configurations found"
    },
    {
      "name": "Docker Profiles",
      "status": "PASS",
      "details": "Optional service profiles configured"
    },
    {
      "name": "Helm Chart Directory",
      "status": "PASS",
      "details": "Helm charts found"
    },
    {
      "name": "Helm Values File",
      "status": "PASS",
      "details": "values.yaml found"
    },
    {
      "name": "Helm: Container Image",
      "status": "PASS",
      "details": "Configuration present"
    },
    {
      "name": "Helm: Service Configuration",
      "status": "PASS",
      "details": "Configuration present"
    },
    {
      "name": "Helm: Ingress Configuration",
      "status": "PASS",
      "details": "Configuration present"
    },
    {
      "name": "Helm: Environment Variables",
      "status": "PASS",
      "details": "Configuration present"
    }
  ]
}