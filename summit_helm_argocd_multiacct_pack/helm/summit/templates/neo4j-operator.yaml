{{- if and .Values.databaseFailover.enabled .Values.databaseFailover.neo4j.enabled }}
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.databaseFailover.neo4j.operator.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.databaseFailover.neo4j.operator.namespace }}
    app.kubernetes.io/part-of: summit-data-plane
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: neo4j-operator
  namespace: {{ .Values.databaseFailover.neo4j.operator.namespace }}
  labels:
    app.kubernetes.io/name: neo4j-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: neo4j-operator
  labels:
    app.kubernetes.io/name: neo4j-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
  - nonResourceURLs: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: neo4j-operator
  labels:
    app.kubernetes.io/name: neo4j-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: neo4j-operator
subjects:
  - kind: ServiceAccount
    name: neo4j-operator
    namespace: {{ .Values.databaseFailover.neo4j.operator.namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo4j-operator
  namespace: {{ .Values.databaseFailover.neo4j.operator.namespace }}
  labels:
    app.kubernetes.io/name: neo4j-operator
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: summit-data-plane
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: neo4j-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: neo4j-operator
        app.kubernetes.io/component: controller
        app.kubernetes.io/part-of: summit-data-plane
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.databaseFailover.neo4j.operator.scrapePort }}"
    spec:
      serviceAccountName: neo4j-operator
      containers:
        - name: neo4j-operator
          image: {{ .Values.databaseFailover.neo4j.operator.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.databaseFailover.neo4j.operator.scrapePort }}
              name: metrics
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: neo4j-operator
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.databaseFailover.neo4j.operator.scrapePort }}
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.databaseFailover.neo4j.operator.scrapePort }}
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: neo4j-operator-metrics
  namespace: {{ .Values.databaseFailover.neo4j.operator.namespace }}
  labels:
    app.kubernetes.io/name: neo4j-operator
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: summit-data-plane
spec:
  selector:
    app.kubernetes.io/name: neo4j-operator
  ports:
    - name: http
      port: {{ .Values.databaseFailover.neo4j.operator.scrapePort }}
      targetPort: metrics
{{- end }}
