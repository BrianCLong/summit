version: '3.8'

services:
  # Frontend Development Server
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:4000
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true
    tty: true
    networks:
      - intelgraph-dev

  # Backend Development Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    volumes:
      - ./server:/app
      - /app/node_modules
    ports:
      - "4000:4000"
      - "9229:9229" # Debug port
    environment:
      - NODE_ENV=development
      - DEBUG=intelgraph:*
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=devpassword
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=intelgraph
      - POSTGRES_PASSWORD=devpassword
      - POSTGRES_DB=intelgraph_dev
      - REDIS_HOST=redis
      - REDIS_PASSWORD=devpassword
      - JWT_SECRET=dev_jwt_secret_12345
      - JWT_REFRESH_SECRET=dev_refresh_secret_67890
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - neo4j
      - postgres
      - redis
    networks:
      - intelgraph-dev

  # Graph Database
  neo4j:
    image: neo4j:5.9-community
    environment:
      - NEO4J_AUTH=neo4j/devpassword
      - NEO4J_dbms_memory_heap_initial__size=512M
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    volumes:
      - neo4j_dev_data:/data
      - neo4j_dev_logs:/logs
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - intelgraph-dev

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=intelgraph_dev
      - POSTGRES_USER=intelgraph
      - POSTGRES_PASSWORD=devpassword
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./deploy/docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - intelgraph-dev

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass devpassword
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - intelgraph-dev

  # Database Administration
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - intelgraph-dev

volumes:
  neo4j_dev_data:
  neo4j_dev_logs:
  postgres_dev_data:
  redis_dev_data:

networks:
  intelgraph-dev:
    driver: bridge
