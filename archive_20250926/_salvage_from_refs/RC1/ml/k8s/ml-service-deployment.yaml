apiVersion: apps/v1
kind: Deployment
metadata:
  name: intelgraph-ml-service
  labels:
    app: intelgraph-ml
    component: ml-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: intelgraph-ml
      component: ml-service
  template:
    metadata:
      labels:
        app: intelgraph-ml
        component: ml-service
    spec:
      nodeSelector:
        accelerator: nvidia-tesla-v100  # GPU nodes
      containers:
      - name: ml-service
        image: intelgraph/ml-service:gpu-latest
        ports:
        - containerPort: 8000
        env:
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: ML_SERVICE_PORT
          value: "8000"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ml-secrets
              key: redis-url
        - name: NEO4J_URI
          valueFrom:
            secretKeyRef:
              name: ml-secrets
              key: neo4j-uri
        resources:
          requests:
            memory: "4Gi"
            cpu: "2"
            nvidia.com/gpu: 1
          limits:
            memory: "16Gi"
            cpu: "8"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/detailed
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: gpu-metrics
          mountPath: /dev
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: ml-model-cache
      - name: gpu-metrics
        hostPath:
          path: /dev
---
apiVersion: v1
kind: Service
metadata:
  name: intelgraph-ml-service
  labels:
    app: intelgraph-ml
    component: ml-service
spec:
  selector:
    app: intelgraph-ml
    component: ml-service
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-model-cache
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ml-service-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: intelgraph-ml-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80