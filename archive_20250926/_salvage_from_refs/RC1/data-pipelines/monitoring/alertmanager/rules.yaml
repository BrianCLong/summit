groups:
  - name: intelgraph-pipelines-slo
    interval: 30s
    rules:
      # Fast burn — page
      - alert: PipelineSLOFastBurn
        expr: |
          (1 - avg_over_time(pipeline_uptime_ratio[5m])) / (1 - 0.995) > 14
          or (1 - avg_over_time(pipeline_uptime_ratio[30m])) / (1 - 0.995) > 14
        for: 2m
        labels:
          severity: page
          team: data
        annotations:
          summary: "Fast SLO burn for pipeline availability"
          description: "Error budget burning fast. Investigate pipeline availability."

      # Slow burn — ticket
      - alert: PipelineSLOSlowBurn
        expr: |
          (1 - avg_over_time(pipeline_uptime_ratio[2h])) / (1 - 0.995) > 2
          or (1 - avg_over_time(pipeline_uptime_ratio[6h])) / (1 - 0.995) > 2
        for: 10m
        labels:
          severity: ticket
          team: data
        annotations:
          summary: "Slow SLO burn for pipeline availability"
          description: "Burn rate indicates gradual SLO erosion. Create incident ticket."

      # Freshness objective failure (proportion under threshold < 0.95)
      - alert: PipelineFreshnessDegraded
        expr: |
          (sum_over_time((pipeline_freshness_seconds < 300)[30m])
            /
           clamp_min(count_over_time(pipeline_freshness_seconds[30m]), 1)) < 0.95
        for: 10m
        labels:
          severity: warn
          team: data
        annotations:
          summary: "Pipeline freshness degraded"
          description: "Less than 95% of batches are under 5 minutes freshness."

      # Record count drop (completeness)
      - alert: PipelineCompletenessDrop
        expr: avg_over_time(pipeline_completeness_ratio[30m]) < 0.98
        for: 15m
        labels:
          severity: warn
          team: data
        annotations:
          summary: "Pipeline completeness below 98%"
          description: "Expected vs actual count deviating beyond threshold."

      # DLQ growth (assumes gauge/metric exists; replace with actual metric if available)
      - alert: DLQGrowing
        expr: rate(ai_jobs_total{status="failed"}[15m]) > 0
        for: 15m
        labels:
          severity: warn
          team: data
        annotations:
          summary: "DLQ growing"
          description: "Failures flowing into DLQ over the last 15 minutes."

