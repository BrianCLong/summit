# Production environment values
global:
  environment: production
  domain: topicality.co
  imageTag: REPLACED_AT_DEPLOY
  prometheus:
    path: /metrics
  ingress:
    enabled: true
    tls:
      enabled: true

replicaCount: 3

image:
  repository: ghcr.io/brianclong/intelgraph
  pullPolicy: IfNotPresent
  tag: "REPLACED_AT_DEPLOY"

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

resources:
  requests:
    cpu: "200m"
    memory: "256Mi"
  limits:
    cpu: "1"
    memory: "1Gi"

# External services - disabled in prod (use external managed services)
postgresql:
  enabled: false

redis:
  enabled: false

neo4j:
  enabled: false

# External service configuration (sealed secrets)
externalDatabase:
  host: POSTGRES_HOST_FROM_SEALED_SECRET
  port: 5432
  database: intelgraph_prod
  username: POSTGRES_USER_FROM_SEALED_SECRET
  password: POSTGRES_PASSWORD_FROM_SEALED_SECRET

externalRedis:
  host: REDIS_HOST_FROM_SEALED_SECRET
  port: 6379
  password: REDIS_PASSWORD_FROM_SEALED_SECRET

externalNeo4j:
  uri: NEO4J_URI_FROM_SEALED_SECRET
  username: NEO4J_USER_FROM_SEALED_SECRET
  password: NEO4J_PASSWORD_FROM_SEALED_SECRET

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    cert-manager.io/cluster-issuer: letsencrypt-dns
  hosts:
    - host: app.prod.topicality.co
      paths:
        - path: /
          pathType: Prefix
    - host: api.prod.topicality.co
      paths:
        - path: /api
          pathType: Prefix
  tls:
    - secretName: prod-topicality-tls
      hosts:
        - app.prod.topicality.co
        - api.prod.topicality.co

networkPolicy:
  enabled: true

podSecurityPolicy:
  enabled: true

monitoring:
  serviceMonitor: { enabled: true }
  prometheusRules: { enabled: true }
  grafanaDashboards: { enabled: true }
  prometheus:
    server: prometheus-server.monitoring.svc.cluster.local

canary:
  enabled: false
  weight: 10
  maxWeight: 50
  stepWeight: 10
  interval: 30s

# SPIRE configuration (disabled in prod - use external)
spire:
  enabled: false
  server:
    replicas: 1
    logLevel: INFO
    storageSize: 1Gi
  agent:
    replicas: 1
    image: ghcr.io/spiffe/spire-agent:1.8.5
  helper:
    image: ghcr.io/spiffe/spire-helper:latest
  trustDomain: prod.topicality.co

# Neo4j values required by chart validation
neo4j:
  enabled: false
  name: intelgraph-neo4j
  volumes:
    data:
      mode: defaultStorageClass

# Services configuration
services:
  apiGateway:
    enabled: true
    name: intelgraph-api-gateway
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080
  mobile:
    name: intelgraph-mobile
    service:
      port: 80
  analytics:
    name: intelgraph-analytics
    service:
      port: 80
  searchEngine:
    name: intelgraph-search-engine
    service:
      port: 80
  graphAnalytics:
    name: intelgraph-graph-analytics
    service:
      port: 80
  mlEngine:
    name: intelgraph-ml-engine
    service:
      port: 80
  feedProcessor:
    name: intelgraph-feed-processor
    service:
      port: 80
  workflowEngine:
    name: intelgraph-workflow-engine
    service:
      port: 80

# Conductor configuration
conductor:
  replicas: 3

# Cluster configuration
cluster:
  name: intelgraph-prod-cluster

# Rollout configuration
rollout:
  autoPromotionEnabled: false
  tests:
    enabled: true

# Zero Trust configuration
zeroTrust:
  enabled: true

# Audit configuration
audit:
  wormEnabled: true
  worm:
    image: ghcr.io/intelgraph/worm:latest

# mTLS configuration
mtls:
  enabled: true

# AWS configuration
aws:
  region: us-east-1

# Security configuration (enhanced for production)
security:
  podSecurityPolicy:
    enabled: true
  networkPolicies:
    enabled: true

# Federal compliance configuration
federal:
  classification: UNCLASSIFIED
  airGap:
    enabled: false
  breakGlass:
    emergencyNetworkOverride: false
  fips:
    enforcementAction: deny
  enforcement:
    resourceLimits: enforce
  limits:
    maxCpu: 1000m
    maxMemory: 1Gi
  hsm:
    provider: none
  storage:
    fipsCrypto: true

# CORS configuration (production-restricted)
cors:
  origins: "https://app.prod.topicality.co,https://api.prod.topicality.co"