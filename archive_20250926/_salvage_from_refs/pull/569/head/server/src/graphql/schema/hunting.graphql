type Hunt { id:ID!, name:String!, pattern:String!, params:JSON!, createdAt:String!, updatedAt:String!, owner:String!, lastRun:String }
type HuntRun { id:ID!, huntId:ID!, startedAt:String!, finishedAt:String, rowCount:Int!, costMs:Int!, status:String!, explain:JSON }
type CopilotPlan { cypher:String!, params:JSON!, readOnly:Boolean!, cost:JSON!, explain:JSON! }

extend type Query {
  hunts(after:ID, limit:Int=50, search:String): [Hunt!]!
  hunt(id:ID!): Hunt
  huntRuns(huntId:ID!, limit:Int=20): [HuntRun!]!
}

extend type Mutation {
  createHunt(name:String!, pattern:String!, params:JSON!): Hunt!
  runHunt(id:ID!, window:String, limit:Int=500): HuntRun!
  copilotPlan(prompt:String!): CopilotPlan!
  promotePlanToPersisted(name:String!, plan:JSON!): Hunt!
}
