name: affected
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  contents: read

concurrency:
  group: affected-${{ github.ref }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  
jobs:
  affected:
    runs-on: ubuntu-latest
    outputs:
      affected-packages: ${{ steps.affected.outputs.packages }}
      should-test: ${{ steps.affected.outputs.should-test }}
      should-build: ${{ steps.affected.outputs.should-build }}
    
    services:
      neo4j:
        image: neo4j:5
        ports:
          - 7687:7687
          - 7474:7474
        env:
          NEO4J_AUTH: neo4j/test
        options: >-
          --health-cmd "cypher-shell -u neo4j -p test 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_DB: intelgraph_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Compute affected packages
        id: affected
        run: |
          # Determine base ref for comparison
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="HEAD~1"
          else
            BASE="origin/${{ github.base_ref || 'main' }}"
          fi
          
          echo "Comparing against: $BASE"
          
          # Use Turbo to find affected packages
          AFFECTED=$(npx turbo run build --filter="...$BASE" --dry-run=json | jq -c '.packages[]' | tr '\n' ' ')
          
          # Check if any packages are affected
          if [ -n "$AFFECTED" ]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
            echo "should-test=true" >> $GITHUB_OUTPUT
          else
            echo "should-build=false" >> $GITHUB_OUTPUT
            echo "should-test=false" >> $GITHUB_OUTPUT
          fi
          
          echo "packages=$AFFECTED" >> $GITHUB_OUTPUT
          echo "Affected packages: $AFFECTED"

      - name: Build affected packages
        if: steps.affected.outputs.should-build == 'true'
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="HEAD~1"
          else
            BASE="origin/${{ github.base_ref || 'main' }}"
          fi
          pnpm turbo run build --filter="...$BASE" --cache-dir=.turbo
          
      - name: Lint affected packages
        if: steps.affected.outputs.should-build == 'true'  
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="HEAD~1"
          else
            BASE="origin/${{ github.base_ref || 'main' }}"
          fi
          pnpm turbo run lint --filter="...$BASE" --cache-dir=.turbo
          
      - name: Typecheck affected packages
        if: steps.affected.outputs.should-build == 'true'
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="HEAD~1"
          else
            BASE="origin/${{ github.base_ref || 'main' }}"
          fi
          pnpm turbo run typecheck --filter="...$BASE" --cache-dir=.turbo

      - name: Test affected packages
        if: steps.affected.outputs.should-test == 'true'
        env:
          NEO4J_URI: bolt://localhost:7687
          NEO4J_USER: neo4j
          NEO4J_PASSWORD: test
          POSTGRES_URI: postgresql://postgres:test@localhost:5432/intelgraph_test
          REDIS_URL: redis://localhost:6379
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="HEAD~1"
          else
            BASE="origin/${{ github.base_ref || 'main' }}"
          fi
          pnpm turbo run test --filter="...$BASE" --cache-dir=.turbo

      - name: Collect test timings
        if: always()
        run: |
          node scripts/collect-timings.js > ci/test-timings.json || echo "{}" > ci/test-timings.json
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: affected-test-results
          path: |
            coverage/**
            test-results/**
            ci/test-timings.json

      - name: Cache hit rate metrics
        run: |
          echo "::notice title=Cache Metrics::$(pnpm turbo run build test --filter="..." --dry-run | grep -E "(cache hit|cache miss)" | wc -l) cache operations"

  security-affected:
    needs: affected
    if: needs.affected.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Security scan affected
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            BASE="HEAD~1"
          else
            BASE="origin/${{ github.base_ref || 'main' }}"
          fi
          pnpm turbo run security --filter="...$BASE" --cache-dir=.turbo