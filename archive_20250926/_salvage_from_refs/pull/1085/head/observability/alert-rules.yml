# Prometheus Alert Rules for IntelGraph Conductor
# Provides comprehensive monitoring and alerting for the MoE Conductor system

groups:
  # High-level system health alerts
  - name: conductor.system
    rules:
      - alert: ConductorDown
        expr: conductor_system_health_status == 0
        for: 30s
        labels:
          severity: critical
          service: conductor
          component: system
        annotations:
          summary: "Conductor system is unhealthy"
          description: "The Conductor system health status indicates unhealthy state for {{ $labels.instance }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/conductor-down"

      - alert: ConductorDegraded
        expr: conductor_system_health_status == 0.5
        for: 2m
        labels:
          severity: warning
          service: conductor
          component: system
        annotations:
          summary: "Conductor system is degraded"
          description: "The Conductor system is running in degraded mode for {{ $labels.instance }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/conductor-degraded"

  # Routing performance and reliability
  - name: conductor.routing
    rules:
      - alert: HighRoutingErrorRate
        expr: (rate(conductor_router_decisions_total{result="error"}[5m]) / rate(conductor_router_decisions_total[5m])) > 0.05
        for: 2m
        labels:
          severity: warning
          service: conductor
          component: router
        annotations:
          summary: "High routing error rate detected"
          description: "Conductor routing error rate is {{ $value | humanizePercentage }} for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/high-routing-errors"

      - alert: CriticalRoutingErrorRate
        expr: (rate(conductor_router_decisions_total{result="error"}[5m]) / rate(conductor_router_decisions_total[5m])) > 0.15
        for: 1m
        labels:
          severity: critical
          service: conductor
          component: router
        annotations:
          summary: "Critical routing error rate"
          description: "Conductor routing error rate is {{ $value | humanizePercentage }} for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/critical-routing-errors"

      - alert: SlowRoutingDecisions
        expr: histogram_quantile(0.95, rate(conductor_routing_confidence[5m])) > 2
        for: 3m
        labels:
          severity: warning
          service: conductor
          component: router
        annotations:
          summary: "Slow routing decisions detected"
          description: "95th percentile routing latency is {{ $value }}s for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/slow-routing"

      - alert: LowRoutingConfidence
        expr: avg_over_time(conductor_routing_confidence[10m]) < 0.7
        for: 5m
        labels:
          severity: warning
          service: conductor
          component: router
        annotations:
          summary: "Low routing confidence detected"
          description: "Average routing confidence is {{ $value | humanizePercentage }} for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/low-confidence"

  # Expert execution monitoring
  - name: conductor.experts
    rules:
      - alert: HighExpertLatency
        expr: histogram_quantile(0.95, rate(conductor_expert_latency_seconds_bucket[5m])) > 30
        for: 2m
        labels:
          severity: warning
          service: conductor
          component: expert
        annotations:
          summary: "High expert execution latency"
          description: "95th percentile execution latency is {{ $value }}s for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/high-expert-latency"

      - alert: CriticalExpertLatency
        expr: histogram_quantile(0.95, rate(conductor_expert_latency_seconds_bucket[5m])) > 60
        for: 1m
        labels:
          severity: critical
          service: conductor
          component: expert
        annotations:
          summary: "Critical expert execution latency"
          description: "95th percentile execution latency is {{ $value }}s for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/critical-expert-latency"

      - alert: HighExpertErrorRate
        expr: (rate(conductor_expert_executions_total{result="error"}[5m]) / rate(conductor_expert_executions_total[5m])) > 0.10
        for: 2m
        labels:
          severity: warning
          service: conductor
          component: expert
        annotations:
          summary: "High expert execution error rate"
          description: "Expert {{ $labels.expert }} error rate is {{ $value | humanizePercentage }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/high-expert-errors"

      - alert: ExpertUnavailable
        expr: (rate(conductor_expert_executions_total[5m]) == 0) and (rate(conductor_router_decisions_total{expert=~".+"}[5m]) > 0)
        for: 5m
        labels:
          severity: critical
          service: conductor
          component: expert
        annotations:
          summary: "Expert appears to be unavailable"
          description: "Expert {{ $labels.expert }} has not processed any tasks despite routing decisions"
          runbook_url: "https://docs.intelgraph.com/runbooks/expert-unavailable"

  # MCP services monitoring
  - name: conductor.mcp
    rules:
      - alert: MCPServerDown
        expr: conductor_mcp_server_status == 0
        for: 30s
        labels:
          severity: critical
          service: conductor
          component: mcp
        annotations:
          summary: "MCP server is down"
          description: "MCP server {{ $labels.server }} at {{ $labels.url }} is unhealthy"
          runbook_url: "https://docs.intelgraph.com/runbooks/mcp-server-down"

      - alert: HighMCPLatency
        expr: histogram_quantile(0.95, rate(conductor_mcp_latency_seconds_bucket[5m])) > 5
        for: 2m
        labels:
          severity: warning
          service: conductor
          component: mcp
        annotations:
          summary: "High MCP operation latency"
          description: "95th percentile MCP latency is {{ $value }}s for {{ $labels.server }}/{{ $labels.tool }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/high-mcp-latency"

      - alert: HighMCPErrorRate
        expr: (rate(conductor_mcp_operations_total{result="error"}[5m]) / rate(conductor_mcp_operations_total[5m])) > 0.05
        for: 2m
        labels:
          severity: warning
          service: conductor
          component: mcp
        annotations:
          summary: "High MCP operation error rate"
          description: "MCP {{ $labels.server }}/{{ $labels.tool }} error rate is {{ $value | humanizePercentage }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/high-mcp-errors"

  # Resource and capacity monitoring
  - name: conductor.capacity
    rules:
      - alert: HighActiveTasks
        expr: conductor_active_tasks > 40
        for: 2m
        labels:
          severity: warning
          service: conductor
          component: capacity
        annotations:
          summary: "High number of active conductor tasks"
          description: "There are {{ $value }} active conductor tasks"
          runbook_url: "https://docs.intelgraph.com/runbooks/high-active-tasks"

      - alert: ConcurrencyLimitHit
        expr: increase(conductor_concurrency_limit_hits_total[5m]) > 10
        for: 1m
        labels:
          severity: warning
          service: conductor
          component: capacity
        annotations:
          summary: "Conductor concurrency limits being hit frequently"
          description: "Expert {{ $labels.expert }} hit concurrency limits {{ $value }} times in 5 minutes"
          runbook_url: "https://docs.intelgraph.com/runbooks/concurrency-limits"

      - alert: HighTaskTimeouts
        expr: increase(conductor_task_timeout_total[5m]) > 5
        for: 2m
        labels:
          severity: warning
          service: conductor
          component: capacity
        annotations:
          summary: "High number of task timeouts"
          description: "Expert {{ $labels.expert }} had {{ $value }} {{ $labels.timeout_type }} timeouts in 5 minutes"
          runbook_url: "https://docs.intelgraph.com/runbooks/task-timeouts"

  # Cost and quota monitoring
  - name: conductor.cost
    rules:
      - alert: HighCostOperations
        expr: histogram_quantile(0.95, rate(conductor_expert_cost_usd_bucket[5m])) > 5
        for: 5m
        labels:
          severity: warning
          service: conductor
          component: cost
        annotations:
          summary: "High cost operations detected"
          description: "95th percentile cost is ${{ $value }} for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/high-cost-operations"

      - alert: LowQuotaRemaining
        expr: conductor_quota_remaining < 10
        for: 1m
        labels:
          severity: warning
          service: conductor
          component: quota
        annotations:
          summary: "Low quota remaining"
          description: "User {{ $labels.user_id }} has {{ $value }} {{ $labels.quota_type }} quota remaining for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/low-quota"

      - alert: QuotaExhausted
        expr: conductor_quota_remaining <= 0
        for: 30s
        labels:
          severity: critical
          service: conductor
          component: quota
        annotations:
          summary: "Quota exhausted"
          description: "User {{ $labels.user_id }} has exhausted {{ $labels.quota_type }} quota for {{ $labels.expert }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/quota-exhausted"

  # Security monitoring
  - name: conductor.security
    rules:
      - alert: SecurityPolicyViolations
        expr: increase(conductor_security_events_total{result="denied"}[5m]) > 5
        for: 1m
        labels:
          severity: warning
          service: conductor
          component: security
        annotations:
          summary: "Multiple security policy violations detected"
          description: "{{ $value }} security policy violations of type {{ $labels.type }} in 5 minutes"
          runbook_url: "https://docs.intelgraph.com/runbooks/security-violations"

      - alert: CriticalSecurityViolations
        expr: increase(conductor_security_events_total{result="denied"}[1m]) > 10
        for: 30s
        labels:
          severity: critical
          service: conductor
          component: security
        annotations:
          summary: "Critical security violation rate"
          description: "{{ $value }} security policy violations of type {{ $labels.type }} in 1 minute"
          runbook_url: "https://docs.intelgraph.com/runbooks/critical-security-violations"

  # Data quality and integrity
  - name: conductor.data
    rules:
      - alert: NoRecentActivity
        expr: (time() - max(conductor_router_decisions_total)) > 300
        for: 5m
        labels:
          severity: warning
          service: conductor
          component: data
        annotations:
          summary: "No recent conductor activity"
          description: "No conductor routing decisions in the last 5 minutes"
          runbook_url: "https://docs.intelgraph.com/runbooks/no-activity"

      - alert: MetricsStale
        expr: up{job="conductor"} == 0
        for: 1m
        labels:
          severity: critical
          service: conductor
          component: monitoring
        annotations:
          summary: "Conductor metrics endpoint is down"
          description: "Unable to scrape conductor metrics from {{ $labels.instance }}"
          runbook_url: "https://docs.intelgraph.com/runbooks/metrics-down"

  # Composite health checks
  - name: conductor.health
    rules:
      - alert: ConductorHealthCheck
        expr: |
          (
            (rate(conductor_router_decisions_total{result="error"}[5m]) / rate(conductor_router_decisions_total[5m])) > 0.1
          ) or (
            conductor_active_tasks > 50
          ) or (
            histogram_quantile(0.95, rate(conductor_expert_latency_seconds_bucket[5m])) > 45
          ) or (
            conductor_mcp_server_status == 0
          )
        for: 2m
        labels:
          severity: critical
          service: conductor
          component: health
        annotations:
          summary: "Conductor composite health check failed"
          description: "Multiple conductor health indicators are failing"
          runbook_url: "https://docs.intelgraph.com/runbooks/composite-health-failure"

      - alert: ConductorPerformanceDegraded
        expr: |
          (
            histogram_quantile(0.95, rate(conductor_expert_latency_seconds_bucket[5m])) > 15
          ) and (
            histogram_quantile(0.95, rate(conductor_mcp_latency_seconds_bucket[5m])) > 2
          )
        for: 5m
        labels:
          severity: warning
          service: conductor
          component: performance
        annotations:
          summary: "Conductor performance is degraded"
          description: "Both expert execution and MCP operation latencies are elevated"
          runbook_url: "https://docs.intelgraph.com/runbooks/performance-degraded"