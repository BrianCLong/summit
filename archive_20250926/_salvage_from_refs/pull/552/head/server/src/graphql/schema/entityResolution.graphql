extend type Query {
  erSuggestions(limit: Int = 50): [MergeSuggestion!]!
}

type MergeSuggestion {
  pairId: ID!
  aId: ID!
  bId: ID!
  score: Float!
  band: String!
  rationale: [String!]!
}

type MergeResult { mergeId: ID! }

type RevertResult { reverted: Boolean! }

extend type Mutation {
  erMerge(pairId: ID!): MergeResult!
  erRevert(mergeId: ID!): RevertResult!
}
