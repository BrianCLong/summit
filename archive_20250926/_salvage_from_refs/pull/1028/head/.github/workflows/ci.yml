name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install root dependencies
        run: npm ci || npm install
      
      - name: Install client dependencies
        run: |
          if [ -f client/package.json ]; then (cd client && npm ci || npm install); fi
      
      - name: Install server dependencies
        run: |
          if [ -f server/package.json ]; then (cd server && npm ci || npm install); fi
      
      - name: Lint (best-effort)
        run: |
          npm run lint || true
          if [ -f client/package.json ]; then (cd client && npm run lint || true); fi
          if [ -f server/package.json ]; then (cd server && npm run lint || true); fi
      
      - name: Run tests
        run: |
          npm test --workspaces --if-present || true
          if [ -f server/package.json ]; then (cd server && npm test || true); fi
          if [ -f client/package.json ]; then (cd client && npm test || true); fi

  ml-service:
    runs-on: ubuntu-latest
    defaults: 
      run: 
        working-directory: ml
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: 
          python-version: '3.12'
      
      - name: Install Poetry
        run: pip install poetry
      
      - name: Install ML dependencies
        run: |
          if [ -f pyproject.toml ]; then poetry install --no-interaction --no-ansi; fi
      
      - name: Run ML tests
        run: |
          if [ -f pyproject.toml ]; then poetry run pytest -q || true; fi

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run secret detection
        run: |
          pip install detect-secrets
          detect-secrets scan --baseline .secrets.baseline --all-files