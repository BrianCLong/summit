name: Neo4j Guard - Migration Testing

on:
  pull_request:
    paths:
      - 'db/migrations/**/*.cypher'
      - 'tools/neo4j_guard*.sh'
      - 'docker-compose.neo4j.yml'
      - '.github/workflows/neo4j-guard.yml'
  push:
    branches: [ main ]
    paths:
      - 'db/migrations/**/*.cypher'
      - 'tools/neo4j_guard*.sh'

jobs:
  neo4j-migration-guard:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify Docker Compose availability
        run: |
          if docker compose version >/dev/null 2>&1; then
            echo "✅ Docker Compose v2 available"
          elif docker-compose --version >/dev/null 2>&1; then
            echo "✅ Docker Compose v1 available"
          else
            echo "❌ Docker Compose not available"
            exit 1
          fi

      - name: Validate compose file exists
        run: |
          if [ -f "docker-compose.neo4j.yml" ]; then
            echo "✅ Compose file found"
          else
            echo "⚠️ Creating minimal compose file for CI"
            cat > docker-compose.neo4j.yml <<'EOF'
          services:
            neo4j-ephemeral:
              image: neo4j:5.25-community
              container_name: neo4j-ephemeral
              environment:
                - NEO4J_AUTH=neo4j/testtest1
                - NEO4J_server_memory_heap_initial__size=256m
                - NEO4J_server_memory_heap_max__size=512m
                - NEO4J_dbms_memory_pagecache_size=128m
                - NEO4J_dbms_logs_debug_level=INFO
              ports:
                - "7474:7474"
                - "7687:7687"
              healthcheck:
                test: ["CMD-SHELL", "cypher-shell -a bolt://localhost:7687 -u neo4j -p testtest1 'RETURN 1' || exit 1"]
                interval: 5s
                timeout: 3s
                retries: 60
                start_period: 30s
          EOF
          fi

      - name: Make guard scripts executable
        run: |
          chmod +x tools/neo4j_guard*.sh
          ls -la tools/neo4j_guard*.sh

      - name: Check for migration files
        id: check-migrations
        run: |
          if [ -d "db/migrations" ] && [ -n "$(find db/migrations -name '*.cypher' -type f 2>/dev/null)" ]; then
            echo "migrations_exist=true" >> $GITHUB_OUTPUT
            echo "✅ Migration files found:"
            find db/migrations -name "*.cypher" -type f | sort
          else
            echo "migrations_exist=false" >> $GITHUB_OUTPUT
            echo "⚠️ No migration files found - creating sample for testing"
            mkdir -p db/migrations
            cat > db/migrations/000_ci_test.cypher <<'EOF'
          // CI Test Migration - Safe operations only
          CREATE (:CITest {name: 'GitHub Actions Test', timestamp: datetime()});
          EOF
          fi

      - name: Run Enhanced Neo4j Guard
        env:
          COMPOSE_FILE: docker-compose.neo4j.yml
          MIG_DIR: db/migrations
          KEEP_DB: "0"
          VALIDATION_MODE: "1"
          MAX_WAIT_TIME: "300"
        run: |
          echo "🚀 Running Enhanced Neo4j Guard"
          bash tools/neo4j_guard_enhanced.sh

      - name: Run Legacy Guard (Compatibility Test)
        if: steps.check-migrations.outputs.migrations_exist == 'true'
        env:
          COMPOSE_FILE: docker-compose.neo4j.yml
          MIG_DIR: db/migrations
          KEEP_DB: "0"
        run: |
          echo "🔄 Running legacy guard for compatibility verification"
          bash tools/neo4j_guard.sh

      - name: Archive migration logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: neo4j-migration-logs
          path: |
            *.log
          retention-days: 7

      - name: Cleanup on failure
        if: failure()
        run: |
          echo "🧹 Cleaning up failed containers"
          docker compose -f docker-compose.neo4j.yml down -v --remove-orphans || true
          docker-compose -f docker-compose.neo4j.yml down -v --remove-orphans || true
