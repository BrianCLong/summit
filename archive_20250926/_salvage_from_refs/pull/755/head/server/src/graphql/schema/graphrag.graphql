# GraphRAG Schema - Explainable Graph-based Retrieval Augmented Generation

"""
Input for GraphRAG queries with explainable output
"""
input GraphRAGQueryInput {
  """
  Investigation to query within
  """
  investigationId: ID!

  """
  Natural language question
  """
  question: String!

  """
  Optional entity IDs to focus the search around
  """
  focusEntityIds: [ID!]

  """
  Maximum hops for graph traversal (1-3, default: 2)
  """
  maxHops: Int

  """
  LLM temperature for response generation (0-1, default: 0)
  """
  temperature: Float

  """
  Maximum tokens for LLM response (100-2000, default: 1000)
  """
  maxTokens: Int

  """Use case identifier for prompt/response schemas"""
  useCase: String
  
  """
  Path ranking strategy (v1 or v2)
  """
  rankingStrategy: String
}

"""
GraphRAG response with explainable reasoning
"""
type GraphRAGResponse {
  """
  Generated answer based on graph context
  """
  answer: String!

  """
  Confidence score 0-1 based on context completeness
  """
  confidence: Float!

  """
  Entity citations that support the answer
  """
  citations: Citations!

  """
  Relationship paths that explain the reasoning
  """
  why_paths: [WhyPath!]!
}

"""
Entity citations supporting the answer
"""
type Citations {
  """
  Entity IDs that were referenced in generating the answer
  """
  entityIds: [ID!]!
}

"""
Explainable reasoning path through relationships
"""
type WhyPath {
  """
  Source entity ID
  """
  from: ID!

  """
  Target entity ID
  """
  to: ID!

  """
  Relationship ID connecting from -> to
  """
  relId: ID!

  """
  Relationship type
  """
  type: String!

  """
  Support score for this path (0-1, optional)
  """
  supportScore: Float
  """
  Breakdown of scoring factors
  """
  score_breakdown: ScoreBreakdown
}

"""
Detailed contribution of each ranking factor
"""
type ScoreBreakdown {
  """
  Contribution from path length
  """
  length: Float!
  """
  Contribution from edge type
  """
  edgeType: Float!
  """
  Contribution from node centrality
  """
  centrality: Float!
}

"""
Similar entity result with similarity score
"""
type Entity { id: ID! }

type SimilarEntity {
  """
  The similar entity
  """
  entity: Entity!

  """
  Similarity score 0-1
  """
  similarity: Float!
}

"""
Cache operation result
"""
type CacheOperationResult {
  """
  Whether the operation succeeded
  """
  success: Boolean!

  """
  Human readable message
  """
  message: String!
}

# Query extensions
type Query {
  """
  Query the knowledge graph using explainable GraphRAG.
  Returns structured response with answer, confidence, citations, and why_paths.
  """
  graphRagAnswer(input: GraphRAGQueryInput!): GraphRAGResponse!

  """
  Find entities similar to the given entity or text.
  Uses vector embeddings for semantic similarity.
  """
  similarEntities(
    entityId: ID
    text: String
    topK: Int = 10
    investigationId: ID!
  ): [SimilarEntity!]!
}

# Mutation extensions
type Mutation {
  """
  Clear GraphRAG cache for an investigation.
  Useful when investigation data has changed significantly.
  """
  clearGraphRAGCache(investigationId: ID!): CacheOperationResult!
}


