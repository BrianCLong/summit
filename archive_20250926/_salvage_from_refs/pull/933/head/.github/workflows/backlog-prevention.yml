name: Backlog Prevention & Health Monitor

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  backlog-health-check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.4'
          cache: 'npm'

      - name: Install gh CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update && sudo apt install gh -y

      - name: Analyze PR Backlog Health
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "=== PR Backlog Health Analysis ===" > backlog-report.md
          echo "" >> backlog-report.md

          # Get current PR stats
          TOTAL_PRS=$(gh pr list --state open --json number | jq length)
          STALE_PRS=$(gh pr list --state open --json number,updatedAt | jq '[.[] | select((now - (.updatedAt | fromdateiso8601)) > (14 * 86400))] | length')
          READY_PRS=$(gh pr list --state open --json number,mergeable | jq '[.[] | select(.mergeable == "MERGEABLE")] | length')
          AUTO_MERGE_PRS=$(gh pr list --state open --json number,autoMergeRequest | jq '[.[] | select(.autoMergeRequest != null)] | length')

          echo "📊 **Current Status:**" >> backlog-report.md
          echo "- Total Open PRs: $TOTAL_PRS" >> backlog-report.md
          echo "- Stale PRs (>14 days): $STALE_PRS" >> backlog-report.md  
          echo "- Ready to Merge: $READY_PRS" >> backlog-report.md
          echo "- Auto-merge Enabled: $AUTO_MERGE_PRS" >> backlog-report.md
          echo "" >> backlog-report.md

          # Check for backlog accumulation
          if [ "$TOTAL_PRS" -gt 30 ]; then
            echo "⚠️ **Backlog Alert:** High PR count detected ($TOTAL_PRS)" >> backlog-report.md
            echo "Recommended actions:" >> backlog-report.md
            echo "- Review stale PRs for closure/update" >> backlog-report.md
            echo "- Enable auto-merge on ready PRs" >> backlog-report.md
            echo "- Consider batch processing session" >> backlog-report.md
            echo "" >> backlog-report.md
          fi

          # List problematic PRs
          echo "🔍 **Problematic PRs Requiring Attention:**" >> backlog-report.md
          gh pr list --state open --json number,title,mergeable,isDraft,updatedAt | \
            jq -r '.[] | select(.mergeable != "MERGEABLE" or .isDraft or ((now - (.updatedAt | fromdateiso8601)) > (14 * 86400))) | "- PR #\(.number): \(.title) (Updated: \(.updatedAt[:10]))"' \
            >> backlog-report.md

      - name: Check CI Health
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "" >> backlog-report.md
          echo "🏗️ **CI Health Status:**" >> backlog-report.md

          # Check recent CI runs
          FAILED_RUNS=$(gh run list --limit 20 --json conclusion | jq '[.[] | select(.conclusion == "failure")] | length')
          SUCCESS_RATE=$(gh run list --limit 100 --json conclusion | jq '[.[] | select(.conclusion == "success")] | length')

          echo "- Recent Failed Runs (last 20): $FAILED_RUNS" >> backlog-report.md
          echo "- Success Rate (last 100): $SUCCESS_RATE%" >> backlog-report.md

          if [ "$FAILED_RUNS" -gt 10 ]; then
            echo "⚠️ **CI Health Alert:** High failure rate detected" >> backlog-report.md
            echo "Consider running CI hardening procedures" >> backlog-report.md
          fi

      - name: Auto-Enable Merge on Ready PRs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "" >> backlog-report.md
          echo "🤖 **Auto-Actions Taken:**" >> backlog-report.md

          # Enable auto-merge on ready PRs that don't have it
          ENABLED_COUNT=0
          gh pr list --state open --json number,mergeable,autoMergeRequest,isDraft | \
            jq -r '.[] | select(.mergeable == "MERGEABLE" and .autoMergeRequest == null and (.isDraft | not)) | .number' | \
            while read -r PR_NUM; do
              if gh pr merge "$PR_NUM" --auto --squash 2>/dev/null; then
                echo "- Enabled auto-merge for PR #$PR_NUM" >> backlog-report.md
                ENABLED_COUNT=$((ENABLED_COUNT + 1))
              fi
            done
            
          echo "- Total PRs with auto-merge enabled: $ENABLED_COUNT" >> backlog-report.md

      - name: Create Issue for High Backlog
        if: env.TOTAL_PRS > 50
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh issue create \
            --title "🚨 High PR Backlog Alert - $TOTAL_PRS Open PRs" \
            --body-file backlog-report.md \
            --label "backlog-alert,priority-high" \
            --assignee "@me"

      - name: Update Wiki/Docs
        run: |
          echo "Backlog health monitoring active ✅" > docs/BACKLOG_HEALTH.md
          echo "Last updated: $(date)" >> docs/BACKLOG_HEALTH.md
          echo "" >> docs/BACKLOG_HEALTH.md
          cat backlog-report.md >> docs/BACKLOG_HEALTH.md
