apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: intelgraph-api-slo-check
  labels:
    app.kubernetes.io/name: intelgraph-api
spec:
  args:
    - name: app
      value: intelgraph-api
    - name: namespace
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
  metrics:
    # Error rate must stay < 1%
    - name: error-rate
      interval: 1m
      count: 5
      successCondition: result < 0.01
      failureLimit: 1
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: >
            sum(rate(http_requests_total{app="{{args.app}}",namespace="{{args.namespace}}",status=~"5.."}[5m]))
            /
            sum(rate(http_requests_total{app="{{args.app}}",namespace="{{args.namespace}}"}[5m]))

    # Availability must stay >= 99%
    - name: availability
      interval: 1m
      count: 5
      successCondition: result >= 0.99
      failureLimit: 1
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: >
            sum(rate(http_requests_total{app="{{args.app}}",namespace="{{args.namespace}}",status=~"2..|3.."}[5m]))
            /
            sum(rate(http_requests_total{app="{{args.app}}",namespace="{{args.namespace}}"}[5m]))

    # p95 latency must stay < 750ms
    - name: p95-latency
      interval: 1m
      count: 5
      successCondition: result < 0.75
      failureLimit: 1
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: >
            histogram_quantile(
              0.95,
              sum(rate(http_request_duration_seconds_bucket{app="{{args.app}}",namespace="{{args.namespace}}"}[5m]))
              by (le)
            )
