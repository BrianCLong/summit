# Production environment values
global:
  environment: production
  domain: intelgraph.com
  imageTag: REPLACED_AT_DEPLOY

replicaCount: 3

image:
  repository: ghcr.io/brianclong/intelgraph
  pullPolicy: IfNotPresent
  tag: "REPLACED_AT_DEPLOY"

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

resources:
  requests:
    cpu: "200m"
    memory: "256Mi"
  limits:
    cpu: "1"
    memory: "1Gi"

# External services - disabled in prod (use external managed services)
postgresql:
  enabled: false

redis:
  enabled: false

neo4j:
  enabled: false

# External service configuration (sealed secrets)
externalDatabase:
  host: POSTGRES_HOST_FROM_SEALED_SECRET
  port: 5432
  database: intelgraph_prod
  username: POSTGRES_USER_FROM_SEALED_SECRET
  password: POSTGRES_PASSWORD_FROM_SEALED_SECRET

externalRedis:
  host: REDIS_HOST_FROM_SEALED_SECRET
  port: 6379
  password: REDIS_PASSWORD_FROM_SEALED_SECRET

externalNeo4j:
  uri: NEO4J_URI_FROM_SEALED_SECRET
  username: NEO4J_USER_FROM_SEALED_SECRET
  password: NEO4J_PASSWORD_FROM_SEALED_SECRET

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: intelgraph.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: intelgraph-tls
      hosts:
        - intelgraph.com

networkPolicy:
  enabled: true

podSecurityPolicy:
  enabled: true

serviceMonitor:
  enabled: true

prometheusRule:
  enabled: true

canary:
  enabled: false
  weight: 10
  maxWeight: 50
  stepWeight: 10
  interval: 30s
