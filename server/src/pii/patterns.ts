import { PatternDefinition } from './types.js';

const pattern = (id: string, type: PatternDefinition['type'], regex: RegExp, confidence: number, description: string, contextHints: string[] = [], examples: string[] = []): PatternDefinition => ({
  id,
  type,
  regex,
  confidence,
  description,
  contextHints,
  examples
});

export const defaultPatternLibrary: PatternDefinition[] = [
  pattern('full-name-1', 'fullName', /\b([A-Z][a-z]+\s){1,3}[A-Z][a-z]+\b/u, 0.45, 'Generic western full name pattern', ['name', 'contact'], ['John Quincy Adams']),
  pattern('first-name-1', 'firstName', /\b(first|given)[ _-]?name\b[:\-]?\s*([A-Z][a-z]+)\b/iu, 0.6, 'First name field with label', ['first name', 'fname'], ['First Name: Maria']),
  pattern('last-name-1', 'lastName', /\b(last|family|surname)[ _-]?name\b[:\-]?\s*([A-Z][a-z]+)\b/iu, 0.6, 'Last name field with label', ['last name', 'lname'], ['Surname: Patel']),
  pattern('middle-name-1', 'middleName', /\bmiddle[ _-]?name\b[:\-]?\s*([A-Z][a-z]+)\b/iu, 0.55, 'Middle name label', ['middle name'], ['Middle Name: Ann']),
  pattern('maiden-name-1', 'maidenName', /\bmaiden[ _-]?name\b[:\-]?\s*([A-Z][a-z]+)\b/iu, 0.7, 'Maiden name attribute', ['maiden name'], ['Maiden Name: Johnson']),
  pattern('alias-1', 'alias', /\balias\b[:\-]?\s*([\w\-']{2,})/iu, 0.55, 'Alias field entry', ['alias', 'aka'], ['Alias: The Jet']),
  pattern('preferred-name-1', 'preferredName', /\bpreferred[ _-]?name\b[:\-]?\s*([A-Z][a-z]+)\b/iu, 0.55, 'Preferred name field', ['preferred name'], ['Preferred Name: Sam']),
  pattern('username-1', 'username', /\buser(name)?\b[:\-]?\s*([A-Za-z][\w\.\-]{2,})/iu, 0.65, 'Username label', ['username', 'login'], ['Username: skywalker42']),
  pattern('email-1', 'email', /[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}/u, 0.9, 'Email address pattern', ['email', 'contact'], ['alex@example.com']),
  pattern('phone-1', 'phoneNumber', /\b(?:phone|tel|telephone|contact)[:\-]?\s*(?:\+?\d[\d\s().-]{7,})\b/iu, 0.75, 'Labeled phone number', ['phone', 'contact'], ['Phone: +1 312-555-0182']),
  pattern('mobile-1', 'mobileNumber', /\b(?:mobile|cell|cellphone)[:\-]?\s*(?:\+?\d[\d\s().-]{7,})\b/iu, 0.75, 'Mobile phone label', ['mobile'], ['Mobile: +44 7700 900123']),
  pattern('fax-1', 'faxNumber', /\bfax[:\-]?\s*(?:\+?\d[\d\s().-]{7,})\b/iu, 0.65, 'Fax number field', ['fax'], ['Fax: +1 415-555-0199']),
  pattern('address-1', 'homeAddress', /\b\d{1,5}\s+[A-Za-z0-9\.\s]+(?:Street|St|Road|Rd|Avenue|Ave|Boulevard|Blvd|Lane|Ln|Drive|Dr|Way|Court|Ct)\b/iu, 0.8, 'Residential street address', ['address', 'residence'], ['742 Evergreen Terrace']),
  pattern('mailing-address-1', 'mailingAddress', /\bmailing[ _-]?address\b[:\-]?\s*(.+)/iu, 0.75, 'Mailing address label', ['mailing'], ['Mailing Address: PO Box 1234']),
  pattern('shipping-address-1', 'shippingAddress', /\bshipping[ _-]?address\b[:\-]?\s*(.+)/iu, 0.75, 'Shipping address label', ['shipping'], ['Shipping Address: 500 Market St.']),
  pattern('billing-address-1', 'billingAddress', /\bbilling[ _-]?address\b[:\-]?\s*(.+)/iu, 0.75, 'Billing address label', ['billing'], ['Billing Address: 800 Commerce Blvd.']),
  pattern('latitude-1', 'latitude', /\b(?:lat(?:itude)?)[:=]?\s*(-?\d{1,2}\.\d+)\b/iu, 0.65, 'Latitude coordinate', ['latitude', 'geo'], ['Lat: 37.7749']),
  pattern('longitude-1', 'longitude', /\b(?:lon|long|longitude)[:=]?\s*(-?\d{1,3}\.\d+)\b/iu, 0.65, 'Longitude coordinate', ['longitude', 'geo'], ['Lon: -122.4194']),
  pattern('geocoord-1', 'geoCoordinate', /\b-?\d{1,2}\.\d+,\s*-?\d{1,3}\.\d+\b/u, 0.7, 'Coordinate pair', ['geo', 'location'], ['37.7749,-122.4194']),
  pattern('postalcode-1', 'postalCode', /\b(?:postal|zip)\s*code\b[:\-]?\s*([A-Za-z\d\s-]{4,10})/iu, 0.7, 'Postal code label', ['postal code'], ['Postal Code: 94107']),
  pattern('city-1', 'city', /\bcity\b[:\-]?\s*([A-Za-z\s-]{2,})/iu, 0.55, 'City label', ['city'], ['City: Denver']),
  pattern('state-1', 'state', /\bstate\b[:\-]?\s*([A-Za-z\s-]{2,})/iu, 0.55, 'State label', ['state', 'province'], ['State: Colorado']),
  pattern('country-1', 'country', /\bcountry\b[:\-]?\s*([A-Za-z\s-]{2,})/iu, 0.55, 'Country label', ['country'], ['Country: USA']),
  pattern('national-id-1', 'nationalId', /\b(NIN|national\s+id|citizen\s+number)[:\-]?\s*([A-Z0-9]{6,})\b/iu, 0.85, 'National identification number', ['national id'], ['National ID: AB123456C']),
  pattern('ssn-1', 'socialSecurityNumber', /\b(?!000|666)[0-8]\d{2}-?(?!00)\d{2}-?(?!0000)\d{4}\b/u, 0.95, 'US Social Security Number', ['ssn'], ['123-45-6789']),
  pattern('itin-1', 'itin', /\b9\d{2}-?7\d-?\d{4}\b/u, 0.85, 'IRS ITIN format', ['itin'], ['901-70-1234']),
  pattern('taxid-1', 'taxId', /\b(?:tax\s*(?:id|number)|ein)[:\-]?\s*(\d{2}-\d{7})\b/iu, 0.85, 'Employer identification number', ['tax id', 'ein'], ['EIN: 12-3456789']),
  pattern('passport-1', 'passportNumber', /\b(passport|pp)\s*(?:number|no\.?|#)?[:\-]?\s*([A-Z0-9]{6,9})\b/iu, 0.8, 'Passport identifier', ['passport'], ['Passport No: K1234567']),
  pattern('driver-license-1', 'driverLicenseNumber', /\b(driver'?s?|driv)\s*(?:license|lic\.?)\s*(?:number|no\.?|#)?[:\-]?\s*([A-Z0-9\-]{5,})\b/iu, 0.82, 'Driver license number', ['driver license'], ['DL#: D123-4567-8901']),
  pattern('vin-1', 'vehicleIdentificationNumber', /\b[0-9A-HJ-NPR-Z]{17}\b/u, 0.9, 'Vehicle identification number', ['vin'], ['1HGCM82633A004352']),
  pattern('license-plate-1', 'licensePlate', /\b(?:plate|tag|registration)[:\-]?\s*([A-Z0-9\-]{2,8})\b/iu, 0.6, 'License plate number', ['plate'], ['Plate: 7ABC123']),
  pattern('credit-card-1', 'creditCardNumber', /\b(?:4\d{12}(?:\d{3})?|5[1-5]\d{14}|3[47]\d{13}|6(?:011|5\d{2})\d{12})\b/u, 0.93, 'Common credit card formats', ['card', 'payment'], ['4111111111111111']),
  pattern('debit-card-1', 'debitCardNumber', /\b(?:5078\d{12}|50\d{14}|63\d{14})\b/u, 0.88, 'Generic debit card format', ['card', 'debit'], ['5078123412341234']),
  pattern('card-exp-1', 'cardExpiration', /\b(?:exp|expires?)[:\-]?\s*(0[1-9]|1[0-2])\/(\d{2}|\d{4})\b/iu, 0.75, 'Card expiration date', ['expiry'], ['Exp: 09/27']),
  pattern('cvv-1', 'cardSecurityCode', /\b(?:cvv|cvc|security\s*code)[:\-]?\s*(\d{3,4})\b/iu, 0.8, 'Card security code', ['cvv'], ['CVV: 123']),
  pattern('bank-account-1', 'bankAccountNumber', /\b(?:account|acct)\s*(?:number|no\.?|#)?[:\-]?\s*(\d{6,18})\b/iu, 0.8, 'Bank account number', ['account'], ['Account #: 123456789012']),
  pattern('routing-1', 'routingNumber', /\brouting\s*(?:number|no\.?|#)?[:\-]?\s*(\d{9})\b/iu, 0.85, 'US ABA routing number', ['routing'], ['Routing #: 021000021']),
  pattern('iban-1', 'iban', /\b[A-Z]{2}\d{2}[A-Z0-9]{11,30}\b/u, 0.92, 'International Bank Account Number', ['iban'], ['DE89370400440532013000']),
  pattern('swift-1', 'swiftCode', /\b[A-Z]{4}[A-Z]{2}[A-Z0-9]{2}(?:[A-Z0-9]{3})?\b/u, 0.85, 'SWIFT/BIC code', ['swift', 'bic'], ['DEUTDEFF']),
  pattern('account-pin-1', 'accountPin', /\b(?:pin|passcode)[:\-]?\s*(\d{4,6})\b/iu, 0.65, 'Numeric account PIN', ['pin'], ['PIN: 4930']),
  pattern('password-1', 'password', /\bpassword\b[:\-]?\s*([^\s]{6,})/iu, 0.6, 'Password field', ['password'], ['Password: h@rd2Guess!']),
  pattern('password-hint-1', 'passwordHint', /\bpassword\s*hint\b[:\-]?\s*(.+)/iu, 0.55, 'Password hint text', ['hint'], ['Password Hint: hometown']),
  pattern('account-token-1', 'accountToken', /\b(?:token|api[-_]?key|secret)[:\-]?\s*([A-Za-z0-9\-_]{16,})\b/iu, 0.6, 'Account token or key', ['token', 'secret'], ['API Key: sk_live_xxxxx']),
  pattern('dob-1', 'dateOfBirth', /\b(?:dob|date\s*of\s*birth|born)[:\-]?\s*(0[1-9]|[12][0-9]|3[01])[\/-](0[1-9]|1[0-2])[\/-](\d{2,4})\b/iu, 0.85, 'Date of birth', ['dob'], ['DOB: 02/14/1985']),
  pattern('age-1', 'age', /\bage\b[:\-]?\s*(\d{1,3})\b/iu, 0.4, 'Age value', ['age'], ['Age: 43']),
  pattern('gender-1', 'gender', /\bgender\b[:\-]?\s*(male|female|nonbinary|non-binary|other)\b/iu, 0.4, 'Gender label', ['gender'], ['Gender: Female']),
  pattern('marital-1', 'maritalStatus', /\bmarital\s*status\b[:\-]?\s*(single|married|divorced|widowed|separated)\b/iu, 0.45, 'Marital status label', ['marital'], ['Marital Status: Married']),
  pattern('employee-id-1', 'employeeId', /\b(?:employee|staff|worker)\s*(?:id|number|no\.?|#)[:\-]?\s*([A-Z0-9\-]{3,})\b/iu, 0.7, 'Employee identifier', ['employee id'], ['Employee ID: E-1024']),
  pattern('student-id-1', 'studentId', /\b(?:student|pupil|learner)\s*(?:id|number|no\.?|#)[:\-]?\s*([A-Z0-9\-]{3,})\b/iu, 0.7, 'Student identifier', ['student id'], ['Student ID: S123456']),
  pattern('patient-id-1', 'patientId', /\b(?:patient|mrn|medical\s*record)\s*(?:id|number|no\.?|#)[:\-]?\s*([A-Z0-9\-]{3,})\b/iu, 0.8, 'Patient identifier', ['patient id'], ['MRN: 1002345']),
  pattern('health-record-1', 'healthRecordNumber', /\b(?:ehr|record)\s*(?:id|number)[:\-]?\s*([A-Z0-9\-]{4,})\b/iu, 0.75, 'Health record number', ['ehr'], ['Record Number: HR-9987']),
  pattern('insurance-1', 'insurancePolicyNumber', /\b(?:policy|insurance)\s*(?:number|no\.?|#)[:\-]?\s*([A-Z0-9\-]{5,})\b/iu, 0.7, 'Insurance policy number', ['insurance'], ['Policy #: HC-778899']),
  pattern('medical-diagnosis-1', 'medicalDiagnosis', /\bdiagnosis\b[:\-]?\s*([A-Za-z0-9\s\-]+)\b/iu, 0.45, 'Diagnosis text', ['diagnosis'], ['Diagnosis: Type 2 Diabetes']),
  pattern('prescription-1', 'prescription', /\bprescription\b[:\-]?\s*([A-Za-z0-9\s\-]+)\b/iu, 0.45, 'Prescription data', ['prescription'], ['Prescription: Metformin 500mg']),
  pattern('allergy-1', 'allergy', /\ballergy\b[:\-]?\s*([A-Za-z0-9\s\-]+)\b/iu, 0.4, 'Allergy entry', ['allergy'], ['Allergy: Peanuts']),
  pattern('genetic-marker-1', 'geneticMarker', /\b(?:gene|marker)\s*(?:id|variant)[:\-]?\s*([A-Z0-9]+)\b/iu, 0.6, 'Genetic marker label', ['genetic'], ['Marker: BRCA1']),
  pattern('fingerprint-1', 'biometricFingerprint', /\bfingerprint\b[:\-]?\s*(?:hash|template|id)?\s*([A-F0-9]{32,})\b/iu, 0.7, 'Fingerprint hash', ['fingerprint'], ['Fingerprint Hash: A1B2...']),
  pattern('face-1', 'biometricFace', /\b(face|facial)\s*(?:template|vector|embedding)[:\-]?\s*([A-Za-z0-9+/=]{20,})\b/iu, 0.65, 'Facial biometric vector', ['face'], ['Face Template: ajk29...']),
  pattern('voice-1', 'biometricVoice', /\bvoice\s*(?:print|id|template)[:\-]?\s*([A-Za-z0-9+/=]{20,})\b/iu, 0.65, 'Voice biometric data', ['voice'], ['Voice Print: bn38...']),
  pattern('retina-1', 'biometricRetina', /\bretina\s*(?:scan|pattern|template)[:\-]?\s*([A-Za-z0-9+/=]{20,})\b/iu, 0.65, 'Retina biometric data', ['retina'], ['Retina Scan: cH93...']),
  pattern('dna-1', 'biometricDNA', /\bDNA\b[:\-]?\s*([ACGT]{8,})\b/iu, 0.7, 'DNA sequence fragment', ['dna'], ['DNA: ACTGACTG']),
  pattern('ip-1', 'ipAddress', /\b(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)(\.|$)){4}\b/u, 0.8, 'IPv4 address', ['ip'], ['192.168.1.10']),
  pattern('ip-2', 'ipAddress', /\b[0-9a-fA-F:]{2,}:[0-9a-fA-F:]+\b/u, 0.8, 'IPv6 address', ['ip'], ['2001:0db8:85a3::8a2e:0370:7334']),
  pattern('mac-1', 'macAddress', /\b(?:[0-9A-F]{2}:){5}[0-9A-F]{2}\b/iu, 0.8, 'MAC address', ['mac'], ['00:1A:2B:3C:4D:5E']),
  pattern('device-1', 'deviceId', /\bdevice\s*(?:id|identifier)[:\-]?\s*([A-Z0-9\-]{6,})\b/iu, 0.65, 'Generic device identifier', ['device id'], ['Device ID: DEV-9988']),
  pattern('imei-1', 'imei', /\b(?:IMEI|imei)[:\-]?\s*(\d{15})\b/u, 0.85, 'IMEI number', ['imei'], ['IMEI: 490154203237518']),
  pattern('imsi-1', 'imsi', /\b(?:IMSI|imsi)[:\-]?\s*(\d{15})\b/u, 0.85, 'IMSI number', ['imsi'], ['IMSI: 310150123456789']),
  pattern('cookie-1', 'cookieId', /\bcookie\s*(?:id|identifier)[:\-]?\s*([A-Za-z0-9\-]{8,})\b/iu, 0.6, 'Cookie identifier', ['cookie'], ['Cookie ID: abcd-1234']),
  pattern('session-1', 'sessionId', /\bsession\s*(?:id|token)[:\-]?\s*([A-Za-z0-9\-]{8,})\b/iu, 0.6, 'Session identifier', ['session'], ['Session Token: 9f8e7d6c']),
  pattern('account-num-1', 'accountNumber', /\baccount\s*number\b[:\-]?\s*(\d{6,})\b/iu, 0.65, 'Generic account number', ['account'], ['Account Number: 7001234567']),
  pattern('url-1', 'url', /https?:\/\/[\w\-]+(\.[\w\-]+)+(\/[\w\-._~:?#[\]@!$&'()*+,;=]*)?/u, 0.4, 'URL reference', ['url'], ['https://example.com/profile/jane']),
  pattern('ssl-1', 'sslcertificate', /\b-----BEGIN CERTIFICATE-----[\s\S]+?-----END CERTIFICATE-----\b/u, 0.85, 'PEM encoded certificate', ['certificate'], ['-----BEGIN CERTIFICATE-----...']),
  pattern('txn-1', 'financialTransactionId', /\b(?:transaction|txn|payment)\s*(?:id|number|no\.?|#)[:\-]?\s*([A-Z0-9\-]{6,})\b/iu, 0.7, 'Financial transaction identifier', ['transaction'], ['Transaction ID: TXN-883733'])
];

export const PATTERN_COUNT = defaultPatternLibrary.length;

