type RiskContribution { feature: String!, value: Float!, weight: Float!, delta: Float! }

extend type Entity {
  riskScore: Float
  riskBand: String
  riskWindow: String
  riskContributions: [RiskContribution!]!
  riskComputedAt: String
}

type RiskSummary { entityId: ID!, score: Float!, band: String!, window: String!, topContributions: [RiskContribution!]! }

extend type Query {
  riskSummary(entityId: ID!, window: String = "7d"): RiskSummary!
  topRiskEntities(kind: String!, window: String = "7d", limit: Int = 50): [RiskSummary!]!
}
