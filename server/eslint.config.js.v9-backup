// ESLint v9 flat config for the Node/TS server - Production Ready
import globals from 'globals';
import * as tseslint from 'typescript-eslint';
import js from '@eslint/js';
import prettier from 'eslint-config-prettier';

export default [
  // Ignore build/generated files
  { 
    ignores: [
      'dist/**', 
      'coverage/**', 
      'node_modules/**',
      '*.config.js',
      '*.config.cjs',
      'federation.plan.test.ts', // Remove problematic file from linting
      'jest.config.ts',
      'playwright.config.ts'
    ] 
  },

  // Base JS config
  js.configs.recommended,

  // TypeScript source files (strict)
  {
    files: ['src/**/*.ts'],
    languageOptions: {
      parser: tseslint.parser,
      ecmaVersion: 2022,
      sourceType: 'module',
      globals: { ...globals.node },
      parserOptions: {
        project: './tsconfig.json',
        tsconfigRootDir: import.meta.dirname,
      }
    },
    plugins: {
      '@typescript-eslint': tseslint.plugin,
    },
    rules: {
      ...tseslint.configs.recommended.rules,
      '@typescript-eslint/consistent-type-imports': ['warn', { prefer: 'type-imports' }],
      '@typescript-eslint/no-unused-vars': ['error', { 
        argsIgnorePattern: '^_', 
        varsIgnorePattern: '^_',
        ignoreRestSiblings: true 
      }],
      'no-console': ['warn', { allow: ['warn', 'error'] }],
      'no-process-exit': 'off',
      'no-unused-vars': 'off', // Let @typescript-eslint handle this
    }
  },

  // CommonJS files (scripts, config)
  {
    files: ['**/*.js', '**/*.cjs'],
    languageOptions: {
      ecmaVersion: 2022,
      sourceType: 'commonjs',
      globals: { ...globals.node }
    },
    rules: {
      'no-console': ['warn', { allow: ['warn', 'error'] }],
      '@typescript-eslint/no-require-imports': 'off', // Allow require in JS files
      'no-undef': 'off', // Node globals are expected
    }
  },

  // Test files (Jest environment)
  {
    files: ['tests/**/*.ts', 'tests/**/*.js', '**/*.test.ts', '**/*.test.js', '**/*.spec.ts'],
    languageOptions: {
      globals: { ...globals.node, ...globals.jest }
    },
    plugins: { 
      jest: (await import('eslint-plugin-jest')).default 
    },
    rules: {
      'jest/expect-expect': 'warn',
      'jest/no-disabled-tests': 'warn',
      'jest/no-identical-title': 'error',
      'no-console': 'off', // Allow console in tests
    }
  },

  // Prettier last (disables conflicting rules)
  prettier
];