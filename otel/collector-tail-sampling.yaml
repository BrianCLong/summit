receivers:
  otlp: { protocols: { http: {}, grpc: {} } }
processors:
  tail_sampling:
    decision_wait: 10s
    num_traces: 100000
    expected_new_traces_per_sec: 500
    policies:
      - name: always-sample-errors
        type: status_code
        status_code: { status_codes: [ERROR] }
      - name: high-latency
        type: latency
        latency: { threshold_ms: 1500 }
      - name: health-checks-low
        type: string_attribute
        string_attribute:
          {
            key: http.target,
            values: ['/health', '/healthz'],
            enabled_regex_matching: true,
            invert_match: true,
          }
  batch: {}
exporters:
  otlphttp: { endpoint: http://tempo.monitoring.svc:4318 }
  prometheus: { endpoint: 0.0.0.0:9464 }
extensions: { health_check: {} }
service:
  extensions: [health_check]
  pipelines:
    traces:
      {
        receivers: [otlp],
        processors: [tail_sampling, batch],
        exporters: [otlphttp],
      }
    metrics: { receivers: [otlp], processors: [batch], exporters: [prometheus] }
