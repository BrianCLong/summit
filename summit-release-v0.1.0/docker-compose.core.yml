name: ${COMPOSE_PROJECT_NAME:-summit}
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server","--requirepass","${REDIS_PASSWORD}"]
    ports: ["16379:6379"]
    healthcheck:
      test: ["CMD","redis-cli","-a","${REDIS_PASSWORD}","ping"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  neo4j:
    image: neo4j:5.24-community
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4JLABS_PLUGINS: ${NEO4JLABS_PLUGINS}
      NEO4J_apoc_export_file_enabled: ${NEO4J_apoc_export_file_enabled}
      NEO4J_apoc_import_file_enabled: ${NEO4J_apoc_import_file_enabled}
    ports:
      - "7574:7474"
      - "7575:7687"
    volumes:
      - neo4jdata:/data
      - neo4jlogs:/logs
    healthcheck:
      test: ["CMD-SHELL","cypher-shell -u neo4j -p neo4jpass -a bolt://localhost:7575 'RETURN 1' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  adminer:
    image: adminer:4
    ports: ["8082:8080"]
    restart: unless-stopped

volumes:
  pgdata: {}
  neo4jdata: {}
  neo4jlogs: {}