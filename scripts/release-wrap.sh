#!/bin/bash
set -euo pipefail

# assumes GH_CLI authenticated, tag already pushed (e.g., v2025.08.21)
TAG=$(git describe --tags --abbrev=0)

# Download SBOM artifact from the latest successful run of release-signoff (if you upload it under artifact name "sbom")
# This assumes the SBOM artifact is named 'sbom' and is uploaded by the release-signoff workflow.
# It also assumes the release-signoff workflow runs on the same branch as the tag.

# Get the run ID of the release-signoff workflow for the current tag
RUN_ID=$(gh run list --workflow release-signoff --branch "$TAG" --limit 1 --json databaseId -q '.[0].databaseId')

if [ -z "$RUN_ID" ]; then
  echo "No release-signoff workflow run found for tag $TAG. Skipping SBOM download."
else
  echo "Downloading SBOM artifact from run ID: $RUN_ID"
  gh run download "$RUN_ID" -n sbom -D dist || echo "SBOM artifact not found or download failed. Continuing without SBOM."
fi

# Create or update the release with autogenerated notes and attach SBOMs
# The SBOM will be in the 'dist' directory if downloaded successfully.

# Check if SBOM file exists before trying to attach it
SBOM_FILE="dist/sbom.json"
if [ -f "$SBOM_FILE" ]; then
  echo "Creating release with SBOM attachment: $SBOM_FILE"
  gh release create "$TAG" "$SBOM_FILE" --generate-notes --latest --verify-tag
else
  echo "Creating release without SBOM attachment."
  gh release create "$TAG" --generate-notes --latest --verify-tag
fi
