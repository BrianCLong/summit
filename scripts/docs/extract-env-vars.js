const fs = require('fs');
const path = require('path');

const roots = ['apps','services','src','packages']; // adjust to your repo
const patterns = [
  /process\.env\.([A-Z0-9_]+)/g,         // Node
  /os\.getenv\(['"]([A-Z0-9_]+)['"]\)/g, // Python
  /\$\{([A-Z0-9_]+)(:[^}]*)?\}/g           // Bash/Compose
];
const vars = new Set();

function scan(file){
  const txt = fs.readFileSync(file, 'utf8');
  for (const rx of patterns){
    for (const m of txt.matchAll(rx)) vars.add(m[1]);
  }
}

function walk(dir){
  if (!fs.existsSync(dir)) return;
  for (const f of fs.readdirSync(dir)){
    const p = path.join(dir,f);
    const s = fs.statSync(p);
    if (s.isDirectory()) walk(p);
    else if (s.isFile() && s.size < 2_000_000) scan(p);
  }
}
for (const r of roots) walk(r);

const list = Array.from(vars).sort();
const out = `--- 
title: Environment Variables
summary: Central reference of all environment variables discovered in code.
version: latest
owner: platform
---

> Generated by 

| Name | Description | Default | Required |
|---|---|---|:---:|
${list.map(v=>`| ${v} |  |  |  |`).join('\n')}

`;
fs.mkdirSync('docs/reference', { recursive: true });
fs.writeFileSync('docs/reference/env-vars.md', out);
console.log(`Extracted ${list.length} env vars`);
